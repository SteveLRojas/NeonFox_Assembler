Loading file neonfox_programmer.asm
Loading file DE2_PROGRAMMER.INC
Loading file neonfox_serial_gen2.inc
Loading file DE2_FLASH.INC
Loading file DE2_SRAM.INC
Loading file DE2_SDRAM.INC
223 MACRO     PLATFORM_STRINGS (null)
0    @PUSH_MACRO:    PLATFORM_STRINGS:DE2_PROGRAMMER.INC
225    PLATFORM_DESCRIPTOR    DATA 't'
226        DATA 'e'
227        DATA 'r'
228        DATA 'a'
229        DATA 's'
230        DATA 'I'
231        DATA 'C'
232        DATA ' '
233        DATA 'D'
234        DATA 'E'
235        DATA '2'
236        DATA '\0'
239    TARGET_DESCRIPTORS    DATA `LW FLASH_DESCRIPTOR
240        DATA `LW SRAM_DESCRIPTOR
241        DATA `LW SDRAM_DESCRIPTOR
244    FLASH_DESCRIPTOR    DATA 'F'
245        DATA 'l'
246        DATA 'a'
247        DATA 's'
248        DATA 'h'
249        DATA '\0'
252    SRAM_DESCRIPTOR    DATA 'S'
253        DATA 'R'
254        DATA 'A'
255        DATA 'M'
256        DATA '\0'
259    SDRAM_DESCRIPTOR    DATA 'S'
260        DATA 'D'
261        DATA 'R'
262        DATA 'A'
263        DATA 'M'
264        DATA '\0'
267    TARGET_SIZE    DATA $0000	
268        DATA $0040
269        DATA $0000	
270        DATA $0008
271        DATA $0000	
272        DATA $0080
0    @POP_MACRO:    PLATFORM_STRINGS
275 MACRO     INIT_PLATFORM (null)
0    @PUSH_MACRO:    INIT_PLATFORM:DE2_PROGRAMMER.INC
276        LIM H, R16, `LH SERIAL_INIT
277        LIM L, R16, `LL SERIAL_INIT
278        MOVE W, R16, R26
279        LIM H, R16, `LH 433	
280        LIM L, R16, `LL 433
281        CALL
282        MOVE W, R16, R0
284        LIM H, R16, `LH FLASH_INIT
285        LIM L, R16, `LL FLASH_INIT
286        MOVE W, R16, R26
287        CALL
288        NOP
290        LIM H, R16, `LH SRAM_INIT
291        LIM L, R16, `LL SRAM_INIT
292        MOVE W, R16, R26
293        CALL
294        NOP
296        LIM H, R16, `LH SDRAM_INIT
297        LIM L, R16, `LL SDRAM_INIT
298        MOVE W, R16, R26
299        CALL
300        NOP
302        LIM H, R16, `LH $1FE7
303        LIM L, R16, `LL $1FE7
304        MOVE W, R16, R20
305        LIM H, R16, `LH TARGET_DESCRIPTORS
306        LIM L, R16, `LL TARGET_DESCRIPTORS			
307        MOVE W, R16, R24
309        LIM H, R16, `LH $1FF0
310        LIM L, R16, `LL $1FF0
311        MOVE W, R16, R20
312        LIM H, R16, `LH FLASH_SET_ADDRESS_WRITE
313        LIM L, R16, `LL FLASH_SET_ADDRESS_WRITE
314        MOVE W, R16, R24
316        LIM H, R16, `LH $1FEF
317        LIM L, R16, `LL $1FEF
318        MOVE W, R16, R20
319        LIM H, R16, `LH FLASH_SET_ADDRESS_READ
320        LIM L, R16, `LL FLASH_SET_ADDRESS_READ
321        MOVE W, R16, R24
323        LIM H, R16, `LH $1FEE
324        LIM L, R16, `LL $1FEE
325        MOVE W, R16, R20
326        LIM H, R16, `LH FLASH_GET_N_WORDS
327        LIM L, R16, `LL FLASH_GET_N_WORDS
328        MOVE W, R16, R24
330        LIM H, R16, `LH $1FED
331        LIM L, R16, `LL $1FED
332        MOVE W, R16, R20
333        LIM H, R16, `LH FLASH_SEND_N_WORDS
334        LIM L, R16, `LL FLASH_SEND_N_WORDS
335        MOVE W, R16, R24
337        LIM H, R16, `LH $1FEC
338        LIM L, R16, `LL $1FEC
339        MOVE W, R16, R20
340        LIM H, R16, `LH FLASH_ERASE_ALL_BLOCKS
341        LIM L, R16, `LL FLASH_ERASE_ALL_BLOCKS
342        MOVE W, R16, R24
344        LIM H, R16, `LH $1FEB
345        LIM L, R16, `LL $1FEB
346        MOVE W, R16, R20
347        LIM H, R16, `LH FLASH_UNLOCK_ALL_BLOCKS
348        LIM L, R16, `LL FLASH_UNLOCK_ALL_BLOCKS
349        MOVE W, R16, R24
351        LIM H, R16, `LH $1FEA
352        LIM L, R16, `LL $1FEA
353        MOVE W, R16, R20
354        LIM H, R16, `LH FLASH_LOCK_ALL_BLOCKS
355        LIM L, R16, `LL FLASH_LOCK_ALL_BLOCKS
356        MOVE W, R16, R24
358        LIM H, R16, `LH $1FE9
359        LIM L, R16, `LL $1FE9
360        MOVE W, R16, R20
361        LIM H, R16, `LH FLASH_NULL
362        LIM L, R16, `LL FLASH_NULL
363        MOVE W, R16, R24
365        LIM H, R16, `LH $1FE8
366        LIM L, R16, `LL $1FE8
367        MOVE W, R16, R20
368        LIM H, R16, `LH FLASH_LOCK_BLOCK
369        LIM L, R16, `LL FLASH_LOCK_BLOCK
370        MOVE W, R16, R24
372        LIM H, R16, `LH $1FF1
373        LIM L, R16, `LL $1FF1
374        MOVE W, R16, R20
375        LIM H, R16, `LH FLASH_ERASE_BLOCK
376        LIM L, R16, `LL FLASH_ERASE_BLOCK
377        MOVE W, R16, R24
379        LIM H, R16, `LH $1FE6
380        LIM L, R16, `LL $1FE6
381        MOVE W, R16, R20
382        LIM H, R16, `LH $3FFE
383        LIM L, R16, `LL $3FFE
384        MOVE W, R16, R24		
386        LIM H, R16, `LH $1FE5
387        LIM L, R16, `LL $1FE5
388        MOVE W, R16, R20
389        LIM H, R16, `LH $3FFA
390        LIM L, R16, `LL $3FFA
391        MOVE W, R16, R24
393        LIM H, R16, `LH $1FE4
394        LIM L, R16, `LL $1FE4
395        MOVE W, R16, R20
396        LIM H, R16, `LH TARGET_SIZE
397        LIM L, R16, `LL TARGET_SIZE
398        MOVE W, R16, R24		
0    @POP_MACRO:    INIT_PLATFORM
401 MACRO     SET_TARGET (null)
0    @PUSH_MACRO:    SET_TARGET:DE2_PROGRAMMER.INC
402        LIM L, R16, $00
403        XOR L, R11, R31
404        BRZ M_ST_FLASH
406        LIM L, R16, $01
407        XOR L, R11, R31
408        BRZ M_ST_SRAM
410        LIM L, R16, $02
411        XOR L, R11, R31
412        BRZ M_ST_SDRAM
413        NOP
415        MOVE W, R31, R11	
418    M_ST_FLASH    LIM H, R16, `LH $1FF0
419        LIM L, R16, `LL $1FF0
420        MOVE W, R16, R20
421        LIM H, R16, `LH FLASH_SET_ADDRESS_WRITE
422        LIM L, R16, `LL FLASH_SET_ADDRESS_WRITE
423        MOVE W, R16, R24
425        LIM H, R16, `LH $1FEF
426        LIM L, R16, `LL $1FEF
427        MOVE W, R16, R20
428        LIM H, R16, `LH FLASH_SET_ADDRESS_READ
429        LIM L, R16, `LL FLASH_SET_ADDRESS_READ
430        MOVE W, R16, R24
432        LIM H, R16, `LH $1FEE
433        LIM L, R16, `LL $1FEE
434        MOVE W, R16, R20
435        LIM H, R16, `LH FLASH_GET_N_WORDS
436        LIM L, R16, `LL FLASH_GET_N_WORDS
437        MOVE W, R16, R24
439        LIM H, R16, `LH $1FED
440        LIM L, R16, `LL $1FED
441        MOVE W, R16, R20
442        LIM H, R16, `LH FLASH_SEND_N_WORDS
443        LIM L, R16, `LL FLASH_SEND_N_WORDS
444        MOVE W, R16, R24
446        LIM H, R16, `LH $1FEC
447        LIM L, R16, `LL $1FEC
448        MOVE W, R16, R20
449        LIM H, R16, `LH FLASH_ERASE_ALL_BLOCKS
450        LIM L, R16, `LL FLASH_ERASE_ALL_BLOCKS
451        MOVE W, R16, R24
453        LIM H, R16, `LH $1FEB
454        LIM L, R16, `LL $1FEB
455        MOVE W, R16, R20
456        LIM H, R16, `LH FLASH_UNLOCK_ALL_BLOCKS
457        LIM L, R16, `LL FLASH_UNLOCK_ALL_BLOCKS
458        MOVE W, R16, R24
460        LIM H, R16, `LH $1FEA
461        LIM L, R16, `LL $1FEA
462        MOVE W, R16, R20
463        LIM H, R16, `LH FLASH_LOCK_ALL_BLOCKS
464        LIM L, R16, `LL FLASH_LOCK_ALL_BLOCKS
465        MOVE W, R16, R24
467        LIM H, R16, `LH $1FE9
468        LIM L, R16, `LL $1FE9
469        MOVE W, R16, R20
470        LIM H, R16, `LH FLASH_NULL
471        LIM L, R16, `LL FLASH_NULL
472        MOVE W, R16, R24
474        LIM H, R16, `LH $1FE8
475        LIM L, R16, `LL $1FE8
476        MOVE W, R16, R20
477        LIM H, R16, `LH FLASH_LOCK_BLOCK
478        LIM L, R16, `LL FLASH_LOCK_BLOCK
479        MOVE W, R16, R24
481        LIM H, R16, `LH $1FF1
482        LIM L, R16, `LL $1FF1
483        MOVE W, R16, R20
484        LIM H, R16, `LH FLASH_ERASE_BLOCK
485        LIM L, R16, `LL FLASH_ERASE_BLOCK
486        MOVE W, R16, R24
488        LIM H, R16, `LH $1FE6
489        LIM L, R16, `LL $1FE6
490        MOVE W, R16, R20
491        LIM H, R16, `LH $3FFE
492        LIM L, R16, `LL $3FFE
493        MOVE W, R16, R24
495        LIM H, R16, `LH $1FE5
496        LIM L, R16, `LL $1FE5
497        MOVE W, R16, R20
498        LIM H, R16, `LH $3FFA
499        LIM L, R16, `LL $3FFA
500        MOVE W, R16, R24
501        BRA M_ST_END
504    M_ST_SRAM    LIM H, R16, `LH $1FF0
505        LIM L, R16, `LL $1FF0
506        MOVE W, R16, R20
507        LIM H, R16, `LH SRAM_SET_ADDRESS_WRITE
508        LIM L, R16, `LL SRAM_SET_ADDRESS_WRITE
509        MOVE W, R16, R24
511        LIM H, R16, `LH $1FEF
512        LIM L, R16, `LL $1FEF
513        MOVE W, R16, R20
514        LIM H, R16, `LH SRAM_SET_ADDRESS_READ
515        LIM L, R16, `LL SRAM_SET_ADDRESS_READ
516        MOVE W, R16, R24		
518        LIM H, R16, `LH $1FEE
519        LIM L, R16, `LL $1FEE
520        MOVE W, R16, R20
521        LIM H, R16, `LH SRAM_GET_N_WORDS
522        LIM L, R16, `LL SRAM_GET_N_WORDS
523        MOVE W, R16, R24		
525        LIM H, R16, `LH $1FED
526        LIM L, R16, `LL $1FED
527        MOVE W, R16, R20
528        LIM H, R16, `LH SRAM_SEND_N_WORDS
529        LIM L, R16, `LL SRAM_SEND_N_WORDS
530        MOVE W, R16, R24		
532        LIM H, R16, `LH $1FEC
533        LIM L, R16, `LL $1FEC
534        MOVE W, R16, R20
535        LIM H, R16, `LH SRAM_NULL
536        LIM L, R16, `LL SRAM_NULL
537        MOVE W, R16, R24
539        LIM H, R16, `LH $1FEB
540        LIM L, R16, `LL $1FEB
541        MOVE W, R16, R20
542        LIM H, R16, `LH SRAM_NULL
543        LIM L, R16, `LL SRAM_NULL
544        MOVE W, R16, R24
546        LIM H, R16, `LH $1FEA
547        LIM L, R16, `LL $1FEA
548        MOVE W, R16, R20
549        LIM H, R16, `LH SRAM_NULL
550        LIM L, R16, `LL SRAM_NULL
551        MOVE W, R16, R24
553        LIM H, R16, `LH $1FE9
554        LIM L, R16, `LL $1FE9
555        MOVE W, R16, R20
556        LIM H, R16, `LH SRAM_NULL
557        LIM L, R16, `LL SRAM_NULL
558        MOVE W, R16, R24
560        LIM H, R16, `LH $1FE8
561        LIM L, R16, `LL $1FE8
562        MOVE W, R16, R20
563        LIM H, R16, `LH SRAM_NULL
564        LIM L, R16, `LL SRAM_NULL
565        MOVE W, R16, R24
567        LIM H, R16, `LH $1FF1
568        LIM L, R16, `LL $1FF1
569        MOVE W, R16, R20
570        LIM H, R16, `LH SRAM_NULL
571        LIM L, R16, `LL SRAM_NULL
572        MOVE W, R16, R24
574        LIM H, R16, `LH $1FE6
575        LIM L, R16, `LL $1FE6
576        MOVE W, R16, R20
577        LIM H, R16, `LH $3FFD
578        LIM L, R16, `LL $3FFD
579        MOVE W, R16, R24		
581        LIM H, R16, `LH $1FE5
582        LIM L, R16, `LL $1FE5
583        MOVE W, R16, R20
584        LIM H, R16, `LH $1FF4
585        LIM L, R16, `LL $1FF4
586        MOVE W, R16, R24
587        BRA M_ST_END
590    M_ST_SDRAM    LIM H, R16, `LH $1FF0
591        LIM L, R16, `LL $1FF0
592        MOVE W, R16, R20
593        LIM H, R16, `LH SDRAM_SET_ADDRESS_WRITE
594        LIM L, R16, `LL SDRAM_SET_ADDRESS_WRITE
595        MOVE W, R16, R24		
597        LIM H, R16, `LH $1FEF
598        LIM L, R16, `LL $1FEF
599        MOVE W, R16, R20
600        LIM H, R16, `LH SDRAM_SET_ADDRESS_READ
601        LIM L, R16, `LL SDRAM_SET_ADDRESS_READ
602        MOVE W, R16, R24		
604        LIM H, R16, `LH $1FEE
605        LIM L, R16, `LL $1FEE
606        MOVE W, R16, R20
607        LIM H, R16, `LH SDRAM_GET_N_WORDS
608        LIM L, R16, `LL SDRAM_GET_N_WORDS
609        MOVE W, R16, R24		
611        LIM H, R16, `LH $1FED
612        LIM L, R16, `LL $1FED
613        MOVE W, R16, R20
614        LIM H, R16, `LH SDRAM_SEND_N_WORDS
615        LIM L, R16, `LL SDRAM_SEND_N_WORDS
616        MOVE W, R16, R24		
618        LIM H, R16, `LH $1FEC
619        LIM L, R16, `LL $1FEC
620        MOVE W, R16, R20
621        LIM H, R16, `LH SDRAM_NULL
622        LIM L, R16, `LL SDRAM_NULL
623        MOVE W, R16, R24
625        LIM H, R16, `LH $1FEB
626        LIM L, R16, `LL $1FEB
627        MOVE W, R16, R20
628        LIM H, R16, `LH SDRAM_NULL
629        LIM L, R16, `LL SDRAM_NULL
630        MOVE W, R16, R24
632        LIM H, R16, `LH $1FEA
633        LIM L, R16, `LL $1FEA
634        MOVE W, R16, R20
635        LIM H, R16, `LH SDRAM_NULL
636        LIM L, R16, `LL SDRAM_NULL
637        MOVE W, R16, R24
639        LIM H, R16, `LH $1FE9
640        LIM L, R16, `LL $1FE9
641        MOVE W, R16, R20
642        LIM H, R16, `LH SDRAM_NULL
643        LIM L, R16, `LL SDRAM_NULL
644        MOVE W, R16, R24
646        LIM H, R16, `LH $1FE8
647        LIM L, R16, `LL $1FE8
648        MOVE W, R16, R20
649        LIM H, R16, `LH SDRAM_NULL
650        LIM L, R16, `LL SDRAM_NULL
651        MOVE W, R16, R24
653        LIM H, R16, `LH $1FF1
654        LIM L, R16, `LL $1FF1
655        MOVE W, R16, R20
656        LIM H, R16, `LH SDRAM_NULL
657        LIM L, R16, `LL SDRAM_NULL
658        MOVE W, R16, R24
660        LIM H, R16, `LH $1FE6
661        LIM L, R16, `LL $1FE6
662        MOVE W, R16, R20
663        LIM H, R16, `LH $3FFC
664        LIM L, R16, `LL $3FFC
665        MOVE W, R16, R24		
667        LIM H, R16, `LH $1FE5
668        LIM L, R16, `LL $1FE5
669        MOVE W, R16, R20
670        LIM H, R16, `LH $1FF2
671        LIM L, R16, `LL $1FF2
672        MOVE W, R16, R24		
675    M_ST_END    LIM H, R16, `LH $1FE4
676        LIM L, R16, `LL $1FE4
677        MOVE W, R16, R20
678        MOVE L, R11, R16
679        ADD L, R11, R16
680        LIM H, R17, `LH TARGET_SIZE
681        LIM L, R17, `LL TARGET_SIZE
682        MOVE H, R31, R16
683        ADD W, R17, R24
685        LIM H, R16, `LH $1FE7
686        LIM L, R16, `LL $1FE7
687        MOVE W, R16, R20
688        MOVE L, R11, R16
689        LIM H, R17, `LH TARGET_DESCRIPTORS
690        LIM L, R17, `LL TARGET_DESCRIPTORS
691        MOVE H, R31, R16
692        ADD W, R17, R24	
0    @POP_MACRO:    SET_TARGET
Found instance of macro PLATFORM_STRINGS in line 1336 of file neonfox_programmer.asm
Found instance of macro INIT_PLATFORM in line 130 of file neonfox_programmer.asm
Found instance of macro SET_TARGET in line 1316 of file neonfox_programmer.asm
0 @PUSH_FILE:    neonfox_programmer.asm
0 @PUSH_FILE:    DE2_PROGRAMMER.INC
0 @POP_FILE:    DE2_PROGRAMMER.INC
60     ORG 0
61     BRA INT_RESET
62     NOP
63     RET	
64     NOP
65     RET 
66     NOP
67     RET	
68     NOP
69     RET	
70     NOP
71     RET	
72     NOP
73     RET	
74     NOP
75     RET	
76     NOP
77     RET	
78     NOP
79     RET 
80     NOP
81     RET	
82     NOP
83     RET	
84     NOP
85     RET	
86     NOP
87     RET	
88     NOP
89     RET	
90     NOP
91     RET 
92     NOP
98 INT_RESET    MOVE W, R31, R16
99     MOVE W, R31, R17
100     MOVE W, R31, R18
101     MOVE W, R31, R19
102     MOVE W, R31, R0
103     MOVE W, R31, R1
104     MOVE W, R31, R2
105     MOVE W, R31, R3
106     MOVE W, R31, R4
107     MOVE W, R31, R5
108     MOVE W, R31, R6
109     MOVE W, R31, R7
110     MOVE W, R31, R8
111     MOVE W, R31, R9
112     MOVE W, R31, R10
113     MOVE W, R31, R11
114     MOVE W, R31, R12
115     MOVE W, R31, R13
116     MOVE W, R31, R14
117     MOVE W, R31, R15
118     MOVE W, R31, R21
119     MOVE W, R31, R20
120     MOVE W, R31, R22
121     MOVE W, R31, R27
122     MOVE W, R31, R26
124     LIM H, R17, `LH $FFFC
125     LIM L, R17, `LL $FFFC
126     MOVE W, R17, R22
127     LIM W, R16, $01
128     MOVE W, R16, R25
130 @PUSH_MACRO:    INIT_PLATFORM:DE2_PROGRAMMER.INC
276     LIM H, R16, `LH SERIAL_INIT
277     LIM L, R16, `LL SERIAL_INIT
278     MOVE W, R16, R26
279     LIM H, R16, `LH 433	
280     LIM L, R16, `LL 433
281     CALL
282     MOVE W, R16, R0
284     LIM H, R16, `LH FLASH_INIT
285     LIM L, R16, `LL FLASH_INIT
286     MOVE W, R16, R26
287     CALL
288     NOP
290     LIM H, R16, `LH SRAM_INIT
291     LIM L, R16, `LL SRAM_INIT
292     MOVE W, R16, R26
293     CALL
294     NOP
296     LIM H, R16, `LH SDRAM_INIT
297     LIM L, R16, `LL SDRAM_INIT
298     MOVE W, R16, R26
299     CALL
300     NOP
302     LIM H, R16, `LH $1FE7
303     LIM L, R16, `LL $1FE7
304     MOVE W, R16, R20
305     LIM H, R16, `LH TARGET_DESCRIPTORS
306     LIM L, R16, `LL TARGET_DESCRIPTORS			
307     MOVE W, R16, R24
309     LIM H, R16, `LH $1FF0
310     LIM L, R16, `LL $1FF0
311     MOVE W, R16, R20
312     LIM H, R16, `LH FLASH_SET_ADDRESS_WRITE
313     LIM L, R16, `LL FLASH_SET_ADDRESS_WRITE
314     MOVE W, R16, R24
316     LIM H, R16, `LH $1FEF
317     LIM L, R16, `LL $1FEF
318     MOVE W, R16, R20
319     LIM H, R16, `LH FLASH_SET_ADDRESS_READ
320     LIM L, R16, `LL FLASH_SET_ADDRESS_READ
321     MOVE W, R16, R24
323     LIM H, R16, `LH $1FEE
324     LIM L, R16, `LL $1FEE
325     MOVE W, R16, R20
326     LIM H, R16, `LH FLASH_GET_N_WORDS
327     LIM L, R16, `LL FLASH_GET_N_WORDS
328     MOVE W, R16, R24
330     LIM H, R16, `LH $1FED
331     LIM L, R16, `LL $1FED
332     MOVE W, R16, R20
333     LIM H, R16, `LH FLASH_SEND_N_WORDS
334     LIM L, R16, `LL FLASH_SEND_N_WORDS
335     MOVE W, R16, R24
337     LIM H, R16, `LH $1FEC
338     LIM L, R16, `LL $1FEC
339     MOVE W, R16, R20
340     LIM H, R16, `LH FLASH_ERASE_ALL_BLOCKS
341     LIM L, R16, `LL FLASH_ERASE_ALL_BLOCKS
342     MOVE W, R16, R24
344     LIM H, R16, `LH $1FEB
345     LIM L, R16, `LL $1FEB
346     MOVE W, R16, R20
347     LIM H, R16, `LH FLASH_UNLOCK_ALL_BLOCKS
348     LIM L, R16, `LL FLASH_UNLOCK_ALL_BLOCKS
349     MOVE W, R16, R24
351     LIM H, R16, `LH $1FEA
352     LIM L, R16, `LL $1FEA
353     MOVE W, R16, R20
354     LIM H, R16, `LH FLASH_LOCK_ALL_BLOCKS
355     LIM L, R16, `LL FLASH_LOCK_ALL_BLOCKS
356     MOVE W, R16, R24
358     LIM H, R16, `LH $1FE9
359     LIM L, R16, `LL $1FE9
360     MOVE W, R16, R20
361     LIM H, R16, `LH FLASH_NULL
362     LIM L, R16, `LL FLASH_NULL
363     MOVE W, R16, R24
365     LIM H, R16, `LH $1FE8
366     LIM L, R16, `LL $1FE8
367     MOVE W, R16, R20
368     LIM H, R16, `LH FLASH_LOCK_BLOCK
369     LIM L, R16, `LL FLASH_LOCK_BLOCK
370     MOVE W, R16, R24
372     LIM H, R16, `LH $1FF1
373     LIM L, R16, `LL $1FF1
374     MOVE W, R16, R20
375     LIM H, R16, `LH FLASH_ERASE_BLOCK
376     LIM L, R16, `LL FLASH_ERASE_BLOCK
377     MOVE W, R16, R24
379     LIM H, R16, `LH $1FE6
380     LIM L, R16, `LL $1FE6
381     MOVE W, R16, R20
382     LIM H, R16, `LH $3FFE
383     LIM L, R16, `LL $3FFE
384     MOVE W, R16, R24		
386     LIM H, R16, `LH $1FE5
387     LIM L, R16, `LL $1FE5
388     MOVE W, R16, R20
389     LIM H, R16, `LH $3FFA
390     LIM L, R16, `LL $3FFA
391     MOVE W, R16, R24
393     LIM H, R16, `LH $1FE4
394     LIM L, R16, `LL $1FE4
395     MOVE W, R16, R20
396     LIM H, R16, `LH TARGET_SIZE
397     LIM L, R16, `LL TARGET_SIZE
398     MOVE W, R16, R24		
0 @POP_MACRO:    INIT_PLATFORM
132     LIM H, R17, `LH $FFFC
133     LIM L, R17, `LL $FFFC
134     MOVE W, R17, R22
135     LIM W, R16, $02
136     MOVE W, R16, R25
138     LIM H, R16, `LH MAIN
139     LIM L, R16, `LL MAIN
140     MOVE W, R16, R26
141     JMP
142     NOP
0 @PUSH_FILE:    neonfox_serial_gen2.inc
38 SERIAL_INIT    LIM H, R16, `LH $FFEA
39     LIM L, R16, `LL $FFEA
40     MOVE W, R16, R22
41     MOVE L, R0, R25
42     LIM H, R16, `LH $FFEB
43     LIM L, R16, `LL $FFEB
44     MOVE W, R16, R22
45     RET
46     MOVE S, R0, R25
57 SERIAL_GET_BYTE    LIM H, R16, `LH $FFE9
58     LIM L, R16, `LL $FFE9
59     MOVE W, R16, R22
61 SGB_WAIT    BITT W, R25, 7	
62     BRNZ SGB_WAIT
63     BITT W, R25, 3	
64     BRZ SGB_WAIT	
65     LIM L, R16, `LL $FFE8
66     MOVE W, R16, R22
67     RET
68     MOVE L, R25, R11
79 SERIAL_SEND_BYTE    LIM H, R16, `LH $FFE9
80     LIM L, R16, `LL $FFE9
81     MOVE W, R16, R22
84 SSB_WAIT    BITT W, R25, 7	
85     BRNZ SSB_WAIT
86     BITT W, R25, 2	
87     BRZ SSB_WAIT
88     LIM L, R16, `LL $FFE8
89     MOVE W, R16, R22
90     RET
91     MOVE L, R0, R25
97 SERIAL_GET_N_WORDS    LIM H, R17, `LH $3FFF
98     LIM L, R17, `LL $3FFF
99     MOVE W, R17, R20
100     MOVE W, R24, R3
103     LIM H, R16, `LH $1FF8
104     LIM L, R16, `LL $1FF8
105     MOVE W, R16, R5
108     TEST W, R3
109     BRNZ SGNB_LOOP
110     NOP
111     RET
115 SGNB_LOOP    LIM H, R17, `HH SERIAL_GET_BYTE
116     LIM L, R17, `HL SERIAL_GET_BYTE
117     LIM H, R16, `LH SERIAL_GET_BYTE
118     LIM L, R16, `LL SERIAL_GET_BYTE
119     MOVE W, R17, R27
120     MOVE W, R16, R26
122     CALL
123     NOP
124     MOVE L, R11, R6
126     CALL
127     NOP
128     MOVE S, R11, R11
129     MOVE H, R11, R6
132     MOVE W, R5, R20
133     MOVE W, R6, R24
136     LIM W, R16, $01
137     ADD W, R5, R5
140     LIM W, R16, $01
141     SUB W, R3, R3
144     BRNZ SGNB_LOOP
145     NOP
147     RET
148     NOP
154 SERIAL_SEND_N_WORDS    LIM H, R17, `LH $3FFF
155     LIM L, R17, `LL $3FFF
156     MOVE W, R17, R20
157     MOVE W, R24, R3
160     LIM H, R16, `LH $1FF8
161     LIM L, R16, `LL $1FF8
162     MOVE W, R16, R5
165     TEST W, R3
166     BRNZ SSNB_LOOP
167     NOP
168     RET
172 SSNB_LOOP    MOVE W, R5, R20
173     MOVE W, R24, R6
176     LIM H, R17, `HH SERIAL_SEND_BYTE
177     LIM L, R17, `HL SERIAL_SEND_BYTE
178     LIM H, R16, `LH SERIAL_SEND_BYTE
179     LIM L, R16, `LL SERIAL_SEND_BYTE
180     MOVE W, R17, R27
181     MOVE W, R16, R26
183     MOVE L, R6, R0
184     CALL
185     NOP
187     MOVE S, R6, R0
188     CALL
189     NOP
192     LIM W, R16, $01
193     ADD W, R5, R5
196     LIM W, R16, $01
197     SUB W, R3, R3
200     BRNZ SSNB_LOOP
201     NOP
203     RET
204     NOP
0 @POP_FILE:    neonfox_serial_gen2.inc
0 @PUSH_FILE:    DE2_FLASH.INC
33 FLASH_NULL    LIM H, R16, $E0
34     LIM L, R16, $00
35     RET
36     MOVE W, R16, R11
42 FLASH_INIT    LIM H, R17, `LH $FFD8
43     LIM L, R17, `LL $FFD8
44     MOVE W, R17, R22
45     MOVE W, R31, R25
47     LIM H, R17, `LH $FFD9
48     LIM L, R17, `LL $FFD9
49     MOVE W, R17, R22
50     MOVE W, R31, R25
53     LIM H, R16, `LH $FFDB
54     LIM L, R16, `LL $FFDB
55     MOVE W, R16, R22
56     LIM H, R16, $00
57     LIM L, R16, $F0
58     MOVE W, R16, R25
60     LIM H, R16, `LH $FFDF
61     LIM L, R16, `LL $FFDF
62     MOVE W, R16, R22
64 FI_WAIT_STATUS    BITT W, R25, 0		
65     BRZ FI_WAIT_STATUS	
67     LIM H, R16, `LH $FFDA
68     LIM L, R16, `LL $FFDA
69     MOVE W, R16, R22
70     MOVE W, R31, R25	
72     LIM H, R16, `LH $FFDE
73     LIM L, R16, `LL $FFDE
74     MOVE W, R16, R22
75     MOVE W, R31, R25	
77     RET
78     NOP
83 FLASH_SET_ADDRESS_WRITE    LIM H, R16, `LH $3FFB		
84     LIM L, R16, `LL $3FFB
85     MOVE W, R16, R20
86     MOVE W, R24, R4
88     LIM H, R16, `LH $3FFA
89     LIM L, R16, `LL $3FFA
90     MOVE W, R16, R20
91     MOVE W, R24, R3
93     MOVE W, R4, R17 
94     MOVE W, R3, R18	
96     MOVE W, R18, R16 
97     ADD W, R18, R18
98     MOVE W, R17, R16
99     ADDC W, R17, R17			
101     LIM H, R16, `LH $3FF9		
102     LIM L, R16, `LL $3FF9
103     MOVE W, R16, R20
104     MOVE W, R17, R24
106     LIM H, R16, `LH $3FF8
107     LIM L, R16, `LL $3FF8
108     MOVE W, R16, R20
109     MOVE W, R18, R24
111     RET
112     NOP
118 FLASH_SET_ADDRESS_READ    LIM H, R16, `LH $FFDE
119     LIM L, R16, `LL $FFDE
120     MOVE W, R16, R22
121     LIM W, R16, $00
122     MOVE W, R16, R25	
124     LIM H, R16, `LH $3FFB		
125     LIM L, R16, `LL $3FFB
126     MOVE W, R16, R20
127     MOVE W, R24, R4
129     LIM H, R16, `LH $3FFA
130     LIM L, R16, `LL $3FFA
131     MOVE W, R16, R20
132     MOVE W, R24, R3
134     MOVE W, R4, R17 
135     MOVE W, R3, R18	
137     MOVE W, R18, R16 
138     ADD W, R18, R18
139     MOVE W, R17, R16
140     ADDC W, R17, R17			
142     LIM H, R16, `LH $3FF9		
143     LIM L, R16, `LL $3FF9
144     MOVE W, R16, R20
145     MOVE W, R17, R24
147     LIM H, R16, `LH $3FF8
148     LIM L, R16, `LL $3FF8
149     MOVE W, R16, R20
150     MOVE W, R18, R24
152     LIM H, R16, `LH $FFDC
153     LIM L, R16, `LL $FFDC
154     MOVE W, R16, R22
155     MOVE W, R17, R25
157     LIM H, R16, `LH $FFDD
158     LIM L, R16, `LL $FFDD
159     MOVE W, R16, R22
160     MOVE W, R18, R25
162     LIM H, R16, `LH $FFDF
163     LIM L, R16, `LL $FFDF
164     MOVE W, R16, R22
166 FSAR_WAIT    BITT W, R25, 1		
167     BRZ FSAR_WAIT		
168     NOP
170     RET
171     NOP
176 FLASH_SET_BYTE_ADDR_WRITE    LIM H, R16, `LH $3FF9		
177     LIM L, R16, `LL $3FF9
178     MOVE W, R16, R20
179     MOVE W, R24, R17
181     LIM H, R16, `LH $3FF8
182     LIM L, R16, `LL $3FF8
183     MOVE W, R16, R20
184     MOVE W, R24, R18
186     LIM H, R16, `LH $FFD8
187     LIM L, R16, `LL $FFD8
188     MOVE W, R16, R22
189     MOVE W, R17, R25
191     LIM H, R16, `LH $FFD9
192     LIM L, R16, `LL $FFD9
193     MOVE W, R16, R22
194     MOVE W, R18, R25
196     RET
197     NOP
203 FLASH_SET_BYTE_ADDR_READ    LIM H, R16, `LH $FFDE
204     LIM L, R16, `LL $FFDE
205     MOVE W, R16, R22
206     LIM W, R16, $00
207     MOVE W, R16, R25	
209     LIM H, R16, `LH $3FF9		
210     LIM L, R16, `LL $3FF9
211     MOVE W, R16, R20
212     MOVE W, R24, R17
214     LIM H, R16, `LH $3FF8
215     LIM L, R16, `LL $3FF8
216     MOVE W, R16, R20
217     MOVE W, R24, R18
219     LIM H, R16, `LH $FFDC
220     LIM L, R16, `LL $FFDC
221     MOVE W, R16, R22
222     MOVE W, R17, R25
224     LIM H, R16, `LH $FFDD
225     LIM L, R16, `LL $FFDD
226     MOVE W, R16, R22
227     MOVE W, R18, R25		
229     LIM H, R16, `LH $FFDF
230     LIM L, R16, `LL $FFDF
231     MOVE W, R16, R22
233 FSBAR_WAIT    BITT W, R25, 1		
234     BRZ FSBAR_WAIT		
235     NOP
237     RET
238     NOP
243 FLASH_GET_WORD    LIM H, R16, `LH $FFDF
244     LIM L, R16, `LL $FFDF
245     MOVE W, R16, R22
246     MOVE W, R31, R25	
248 FGW_WAIT_L    BITT W, R25, 1	
249     BRZ FGW_WAIT_L	
250     LIM L, R16, `LL $FFDB
251     MOVE W, R16, R22
252     MOVE L, R25, R11
254     LIM H, R16, `LH $FFDF
255     LIM L, R16, `LL $FFDF
256     MOVE W, R16, R22
257     MOVE W, R31, R25	
259 FGW_WAIT_H    BITT W, R25, 1	
260     BRZ FGW_WAIT_H	
261     LIM L, R16, `LL $FFDB
262     MOVE W, R16, R22
263     MOVE S, R25, R16
264     RET
265     MOVE H, R16, R11
276 FLASH_SEND_BYTE    LIM H, R16, `LH FLASH_SET_BYTE_ADDR_READ
277     LIM L, R16, `LL FLASH_SET_BYTE_ADDR_READ
278     MOVE W, R16, R26
279     CALL
280     NOP
288     LIM H, R16, `LH $FFD8
289     LIM L, R16, `LL $FFD8
290     MOVE W, R16, R22
291     LIM H, R16, $00
292     LIM L, R16, $00
293     MOVE W, R16, R25
295     LIM H, R16, `LH $FFD9
296     LIM L, R16, `LL $FFD9
297     MOVE W, R16, R22
298     LIM H, R16, $0A
299     LIM L, R16, $AA
300     MOVE W, R16, R25
302     LIM H, R16, `LH $FFDB
303     LIM L, R16, `LL $FFDB
304     MOVE W, R16, R22
305     LIM H, R16, $00
306     LIM L, R16, $AA
307     MOVE W, R16, R25	
309     LIM H, R16, `LH $FFDF
310     LIM L, R16, `LL $FFDF
311     MOVE W, R16, R22
313 FSW_WAIT_FIRST    BITT W, R25, 0		
314     BRZ FSW_WAIT_FIRST	
322     LIM H, R16, `LH $FFD8
323     LIM L, R16, `LL $FFD8
324     MOVE W, R16, R22
325     LIM H, R16, $00
326     LIM L, R16, $00
327     MOVE W, R16, R25
329     LIM H, R16, `LH $FFD9
330     LIM L, R16, `LL $FFD9
331     MOVE W, R16, R22
332     LIM H, R16, $05
333     LIM L, R16, $55
334     MOVE W, R16, R25
336     LIM H, R16, `LH $FFDB
337     LIM L, R16, `LL $FFDB
338     MOVE W, R16, R22
339     LIM H, R16, $00
340     LIM L, R16, $55
341     MOVE W, R16, R25	
343     LIM H, R16, `LH $FFDF
344     LIM L, R16, `LL $FFDF
345     MOVE W, R16, R22
347 FSW_WAIT_SECOND    BITT W, R25, 0		
348     BRZ FSW_WAIT_SECOND	
356     LIM H, R16, `LH $FFD8
357     LIM L, R16, `LL $FFD8
358     MOVE W, R16, R22
359     LIM H, R16, $00
360     LIM L, R16, $00
361     MOVE W, R16, R25
363     LIM H, R16, `LH $FFD9
364     LIM L, R16, `LL $FFD9
365     MOVE W, R16, R22
366     LIM H, R16, $0A
367     LIM L, R16, $AA
368     MOVE W, R16, R25
370     LIM H, R16, `LH $FFDB
371     LIM L, R16, `LL $FFDB
372     MOVE W, R16, R22
373     LIM H, R16, $00
374     LIM L, R16, $A0
375     MOVE W, R16, R25	
377     LIM H, R16, `LH $FFDF
378     LIM L, R16, `LL $FFDF
379     MOVE W, R16, R22
381 FSW_WAIT_THIRD    BITT W, R25, 0		
382     BRZ FSW_WAIT_THIRD	
390     LIM H, R16, `LH FLASH_SET_BYTE_ADDR_WRITE
391     LIM L, R16, `LL FLASH_SET_BYTE_ADDR_WRITE
392     MOVE W, R16, R26
393     CALL
394     NOP
402     LIM H, R16, `LH $FFDB
403     LIM L, R16, `LL $FFDB
404     MOVE W, R16, R22
405     MOVE L, R0, R25	
407     LIM H, R16, `LH $FFDF
408     LIM L, R16, `LL $FFDF
409     MOVE W, R16, R22
411 FSW_WAIT_DATA    BITT W, R25, 0		
412     BRZ FSW_WAIT_DATA	
420     LIM H, R16, `LH $FFDF
421     LIM L, R16, `LL $FFDF
422     MOVE W, R16, R22
423     MOVE W, R31, R25	
425 FSW_WAIT_PREV    BITT W, R25, 1		
426     BRZ FSW_WAIT_PREV	
427     LIM H, R16, `LH $FFDB
428     LIM L, R16, `LL $FFDB
429     MOVE W, R16, R22
430     MOVE W, R25, R18	
439 FSW_WAIT_BUSY    LIM H, R16, `LH $FFDF
440     LIM L, R16, `LL $FFDF
441     MOVE W, R16, R22
442     MOVE W, R31, R25	
444 FSW_WAIT_STATUS    BITT W, R25, 1		
445     BRZ FSW_WAIT_STATUS	
446     LIM H, R16, `LH $FFDB
447     LIM L, R16, `LL $FFDB
448     MOVE W, R16, R22
449     MOVE W, R25, R16	
450     XOR W, R18, R17	
451     BITT W, R17, 6
452     BRZ FSW_DONE
453     MOVE W, R16, R18	
455     BITT W, R16, 5		
456     BRZ FSW_WAIT_BUSY
458     LIM H, R16, `LH $FFDF
459     LIM L, R16, `LL $FFDF
460     MOVE W, R16, R22
461     MOVE W, R31, R25	
463 FSW_TOGGLE_PREV    BITT W, R25, 1		
464     BRZ FSW_TOGGLE_PREV	
465     LIM H, R16, `LH $FFDB
466     LIM L, R16, `LL $FFDB
467     MOVE W, R16, R22
468     MOVE W, R25, R18	
470     LIM H, R16, `LH $FFDF
471     LIM L, R16, `LL $FFDF
472     MOVE W, R16, R22
473     MOVE W, R31, R25	
475 FSW_TOGGLE_NEW    BITT W, R25, 1		
476     BRZ FSW_TOGGLE_NEW	
477     LIM H, R16, `LH $FFDB
478     LIM L, R16, `LL $FFDB
479     MOVE W, R16, R22
480     MOVE W, R25, R16	
481     XOR W, R18, R17	
482     BITT W, R17, 6
483     BRZ FSW_DONE
487 FSW_ERROR    LIM H, R16, `LH $FFDB
488     LIM L, R16, `LL $FFDB
489     MOVE W, R16, R22
490     LIM H, R16, $00
491     LIM L, R16, $F0
492     MOVE W, R16, R25
494     LIM H, R16, `LH $FFDF
495     LIM L, R16, `LL $FFDF
496     MOVE W, R16, R22
498 FSW_WAIT_RESET    BITT W, R25, 0		
499     BRZ FSW_WAIT_RESET	
501     LIM H, R16, `LH $3FF9		
502     LIM L, R16, `LL $3FF9
503     MOVE W, R16, R20
504     MOVE W, R24, R17
506     LIM H, R16, `LH $3FF8
507     LIM L, R16, `LL $3FF8
508     MOVE W, R16, R20
509     MOVE W, R24, R18
511     LIM H, R16, `LH $FFFB
512     LIM L, R16, `LL $FFFB
513     MOVE W, R16, R22
514     MOVE W, R17, R25
516     LIM H, R16, `LH $FFFD
517     LIM L, R16, `LL $FFFD
518     MOVE W, R16, R22
519     RET
520     MOVE W, R18, R25
529 FSW_DONE    RET
530     NOP
535 FLASH_ERASE_BLOCK    LIM H, R16, `LH FLASH_SET_BYTE_ADDR_READ
536     LIM L, R16, `LL FLASH_SET_BYTE_ADDR_READ
537     MOVE W, R16, R26
538     CALL
539     NOP
541     LIM H, R16, `LH $FFD8
542     LIM L, R16, `LL $FFD8
543     MOVE W, R16, R22
544     LIM H, R16, $00
545     LIM L, R16, $00
546     MOVE W, R16, R25
548     LIM H, R16, `LH $FFD9
549     LIM L, R16, `LL $FFD9
550     MOVE W, R16, R22
551     LIM H, R16, $0A
552     LIM L, R16, $AA
553     MOVE W, R16, R25
555     LIM H, R16, `LH $FFDB
556     LIM L, R16, `LL $FFDB
557     MOVE W, R16, R22
558     LIM H, R16, $00
559     LIM L, R16, $AA
560     MOVE W, R16, R25	
562     LIM H, R16, `LH $FFDF
563     LIM L, R16, `LL $FFDF
564     MOVE W, R16, R22
566 FEB_WAIT_FIRST    BITT W, R25, 0		
567     BRZ FEB_WAIT_FIRST	
569     LIM H, R16, `LH $FFD8
570     LIM L, R16, `LL $FFD8
571     MOVE W, R16, R22
572     LIM H, R16, $00
573     LIM L, R16, $00
574     MOVE W, R16, R25
576     LIM H, R16, `LH $FFD9
577     LIM L, R16, `LL $FFD9
578     MOVE W, R16, R22
579     LIM H, R16, $05
580     LIM L, R16, $55
581     MOVE W, R16, R25
583     LIM H, R16, `LH $FFDB
584     LIM L, R16, `LL $FFDB
585     MOVE W, R16, R22
586     LIM H, R16, $00
587     LIM L, R16, $55
588     MOVE W, R16, R25	
590     LIM H, R16, `LH $FFDF
591     LIM L, R16, `LL $FFDF
592     MOVE W, R16, R22
594 FEB_WAIT_SECOND    BITT W, R25, 0		
595     BRZ FEB_WAIT_SECOND	
597     LIM H, R16, `LH $FFD8
598     LIM L, R16, `LL $FFD8
599     MOVE W, R16, R22
600     LIM H, R16, $00
601     LIM L, R16, $00
602     MOVE W, R16, R25
604     LIM H, R16, `LH $FFD9
605     LIM L, R16, `LL $FFD9
606     MOVE W, R16, R22
607     LIM H, R16, $0A
608     LIM L, R16, $AA
609     MOVE W, R16, R25
611     LIM H, R16, `LH $FFDB
612     LIM L, R16, `LL $FFDB
613     MOVE W, R16, R22
614     LIM H, R16, $00
615     LIM L, R16, $80
616     MOVE W, R16, R25	
618     LIM H, R16, `LH $FFDF
619     LIM L, R16, `LL $FFDF
620     MOVE W, R16, R22
622 FEB_WAIT_THIRD    BITT W, R25, 0		
623     BRZ FEB_WAIT_THIRD	
625     LIM H, R16, `LH $FFD8
626     LIM L, R16, `LL $FFD8
627     MOVE W, R16, R22
628     LIM H, R16, $00
629     LIM L, R16, $00
630     MOVE W, R16, R25
632     LIM H, R16, `LH $FFD9
633     LIM L, R16, `LL $FFD9
634     MOVE W, R16, R22
635     LIM H, R16, $0A
636     LIM L, R16, $AA
637     MOVE W, R16, R25
639     LIM H, R16, `LH $FFDB
640     LIM L, R16, `LL $FFDB
641     MOVE W, R16, R22
642     LIM H, R16, $00
643     LIM L, R16, $AA
644     MOVE W, R16, R25	
646     LIM H, R16, `LH $FFDF
647     LIM L, R16, `LL $FFDF
648     MOVE W, R16, R22
650 FEB_WAIT_FOURTH    BITT W, R25, 0		
651     BRZ FEB_WAIT_FOURTH	
653     LIM H, R16, `LH $FFD8
654     LIM L, R16, `LL $FFD8
655     MOVE W, R16, R22
656     LIM H, R16, $00
657     LIM L, R16, $00
658     MOVE W, R16, R25
660     LIM H, R16, `LH $FFD9
661     LIM L, R16, `LL $FFD9
662     MOVE W, R16, R22
663     LIM H, R16, $05
664     LIM L, R16, $55
665     MOVE W, R16, R25
667     LIM H, R16, `LH $FFDB
668     LIM L, R16, `LL $FFDB
669     MOVE W, R16, R22
670     LIM H, R16, $00
671     LIM L, R16, $55
672     MOVE W, R16, R25	
674     LIM H, R16, `LH $FFDF
675     LIM L, R16, `LL $FFDF
676     MOVE W, R16, R22
678 FEB_WAIT_FIFTH    BITT W, R25, 0		
679     BRZ FEB_WAIT_FIFTH	
681     LIM H, R16, `LH FLASH_SET_BYTE_ADDR_WRITE
682     LIM L, R16, `LL FLASH_SET_BYTE_ADDR_WRITE
683     MOVE W, R16, R26
684     CALL
685     NOP
687     LIM H, R16, `LH $FFDB
688     LIM L, R16, `LL $FFDB
689     MOVE W, R16, R22
690     LIM W, R16, $30
691     MOVE L, R16, R25	
693     LIM H, R16, `LH $FFDF
694     LIM L, R16, `LL $FFDF
695     MOVE W, R16, R22
697 FEB_WAIT_DATA    BITT W, R25, 0		
698     BRZ FEB_WAIT_DATA	
700     LIM H, R16, `LH $FFDF
701     LIM L, R16, `LL $FFDF
702     MOVE W, R16, R22
703     MOVE W, R31, R25	
705 FEB_WAIT_PREV    BITT W, R25, 1		
706     BRZ FEB_WAIT_PREV	
707     LIM H, R16, `LH $FFDB
708     LIM L, R16, `LL $FFDB
709     MOVE W, R16, R22
710     MOVE W, R25, R18	
713 FEB_WAIT_BUSY    LIM H, R16, `LH $FFDF
714     LIM L, R16, `LL $FFDF
715     MOVE W, R16, R22
716     MOVE W, R31, R25	
718 FEB_WAIT_STATUS    BITT W, R25, 1		
719     BRZ FEB_WAIT_STATUS	
720     LIM H, R16, `LH $FFDB
721     LIM L, R16, `LL $FFDB
722     MOVE W, R16, R22
723     MOVE W, R25, R16	
724     XOR W, R18, R17	
725     BITT W, R17, 6
726     BRNZ FEB_WAIT_BUSY
727     MOVE W, R16, R18	
729     RET
730     NOP
735 FLASH_LOCK_BLOCK    LIM H, R16, `LH FLASH_SET_BYTE_ADDR_READ
736     LIM L, R16, `LL FLASH_SET_BYTE_ADDR_READ
737     MOVE W, R16, R26
738     CALL
739     NOP
741     LIM H, R16, `LH $FFD8
742     LIM L, R16, `LL $FFD8
743     MOVE W, R16, R22
744     LIM H, R16, $00
745     LIM L, R16, $00
746     MOVE W, R16, R25
748     LIM H, R16, `LH $FFD9
749     LIM L, R16, `LL $FFD9
750     MOVE W, R16, R22
751     LIM H, R16, $0A
752     LIM L, R16, $AA
753     MOVE W, R16, R25
755     LIM H, R16, `LH $FFDB
756     LIM L, R16, `LL $FFDB
757     MOVE W, R16, R22
758     LIM H, R16, $00
759     LIM L, R16, $AA
760     MOVE W, R16, R25	
762     LIM H, R16, `LH $FFDF
763     LIM L, R16, `LL $FFDF
764     MOVE W, R16, R22
766 FLB_WAIT_ENTRY_FIRST    BITT W, R25, 0		
767     BRZ FLB_WAIT_ENTRY_FIRST	
769     LIM H, R16, `LH $FFD8
770     LIM L, R16, `LL $FFD8
771     MOVE W, R16, R22
772     LIM H, R16, $00
773     LIM L, R16, $00
774     MOVE W, R16, R25
776     LIM H, R16, `LH $FFD9
777     LIM L, R16, `LL $FFD9
778     MOVE W, R16, R22
779     LIM H, R16, $05
780     LIM L, R16, $55
781     MOVE W, R16, R25
783     LIM H, R16, `LH $FFDB
784     LIM L, R16, `LL $FFDB
785     MOVE W, R16, R22
786     LIM H, R16, $00
787     LIM L, R16, $55
788     MOVE W, R16, R25	
790     LIM H, R16, `LH $FFDF
791     LIM L, R16, `LL $FFDF
792     MOVE W, R16, R22
794 FLB_WAIT_ENTRY_SECOND    BITT W, R25, 0		
795     BRZ FLB_WAIT_ENTRY_SECOND	
797     LIM H, R16, `LH $FFD8
798     LIM L, R16, `LL $FFD8
799     MOVE W, R16, R22
800     LIM H, R16, $00
801     LIM L, R16, $00
802     MOVE W, R16, R25
804     LIM H, R16, `LH $FFD9
805     LIM L, R16, `LL $FFD9
806     MOVE W, R16, R22
807     LIM H, R16, $0A
808     LIM L, R16, $AA
809     MOVE W, R16, R25
811     LIM H, R16, `LH $FFDB
812     LIM L, R16, `LL $FFDB
813     MOVE W, R16, R22
814     LIM H, R16, $00
815     LIM L, R16, $C0
816     MOVE W, R16, R25	
818     LIM H, R16, `LH $FFDF
819     LIM L, R16, `LL $FFDF
820     MOVE W, R16, R22
822 FLB_WAIT_ENTRY_THIRD    BITT W, R25, 0		
823     BRZ FLB_WAIT_ENTRY_THIRD	
825     LIM H, R16, `LH $FFDB
826     LIM L, R16, `LL $FFDB
827     MOVE W, R16, R22
828     LIM H, R16, $00
829     LIM L, R16, $A0
830     MOVE W, R16, R25	
832     LIM H, R16, `LH $FFDF
833     LIM L, R16, `LL $FFDF
834     MOVE W, R16, R22
836 FLB_WAIT_PROGRAM_FIRST    BITT W, R25, 0		
837     BRZ FLB_WAIT_PROGRAM_FIRST	
839     LIM H, R16, `LH FLASH_SET_BYTE_ADDR_WRITE
840     LIM L, R16, `LL FLASH_SET_BYTE_ADDR_WRITE
841     MOVE W, R16, R26
842     CALL
843     NOP
845     LIM H, R16, `LH $FFDB
846     LIM L, R16, `LL $FFDB
847     MOVE W, R16, R22
848     LIM W, R16, $00
849     MOVE L, R16, R25	
851     LIM H, R16, `LH $FFDF
852     LIM L, R16, `LL $FFDF
853     MOVE W, R16, R22
855 FLB_WAIT_PROGRAM_SECOND    BITT W, R25, 0		
856     BRZ FLB_WAIT_PROGRAM_SECOND	
858     LIM H, R16, `LH $FFDF
859     LIM L, R16, `LL $FFDF
860     MOVE W, R16, R22
861     MOVE W, R31, R25	
863 FLB_WAIT_PREV    BITT W, R25, 1		
864     BRZ FLB_WAIT_PREV	
865     LIM H, R16, `LH $FFDB
866     LIM L, R16, `LL $FFDB
867     MOVE W, R16, R22
868     MOVE W, R25, R18	
871 FLB_WAIT_BUSY    LIM H, R16, `LH $FFDF
872     LIM L, R16, `LL $FFDF
873     MOVE W, R16, R22
874     MOVE W, R31, R25	
876 FLB_WAIT_STATUS    BITT W, R25, 1		
877     BRZ FLB_WAIT_STATUS	
878     LIM H, R16, `LH $FFDB
879     LIM L, R16, `LL $FFDB
880     MOVE W, R16, R22
881     MOVE W, R25, R16	
882     XOR W, R18, R17	
883     BITT W, R17, 6
884     BRNZ FLB_WAIT_BUSY
885     MOVE W, R16, R18	
888     LIM H, R16, `LH $FFDB
889     LIM L, R16, `LL $FFDB
890     MOVE W, R16, R22
891     LIM H, R16, $00
892     LIM L, R16, $90
893     MOVE W, R16, R25
895     LIM H, R16, `LH $FFDF
896     LIM L, R16, `LL $FFDF
897     MOVE W, R16, R22
899 FLB_WAIT_EXIT_FIRST    BITT W, R25, 0		
900     BRZ FLB_WAIT_EXIT_FIRST	
902     LIM H, R16, `LH $FFDB
903     LIM L, R16, `LL $FFDB
904     MOVE W, R16, R22
905     LIM H, R16, $00
906     LIM L, R16, $00
907     MOVE W, R16, R25
909     LIM H, R16, `LH $FFDF
910     LIM L, R16, `LL $FFDF
911     MOVE W, R16, R22
913 FLB_WAIT_EXIT_SECOND    BITT W, R25, 0		
914     BRZ FLB_WAIT_EXIT_SECOND	
915     NOP
917     RET
918     NOP
924 FLASH_GET_N_WORDS    LIM H, R16, `LH $FFDE
925     LIM L, R16, `LL $FFDE
926     MOVE W, R16, R22
927     LIM W, R16, $01
928     MOVE W, R16, R25	
931     LIM H, R17, `LH $3FFE
932     LIM L, R17, `LL $3FFE
933     MOVE W, R17, R20
934     MOVE W, R24, R3
937     LIM H, R16, `LH $1FF8
938     LIM L, R16, `LL $1FF8
939     MOVE W, R16, R5
942     TEST W, R3
943     BRNZ FGNB_LOOP
944     NOP
945     RET
949 FGNB_LOOP    LIM H, R16, `LH FLASH_GET_WORD
950     LIM L, R16, `LL FLASH_GET_WORD
951     MOVE W, R16, R26
952     CALL
953     NOP
956     MOVE W, R5, R20
957     MOVE W, R11, R24
960     LIM W, R16, $01
961     ADD W, R5, R5
964     LIM W, R16, $01
965     SUB W, R3, R3
968     BRNZ FGNB_LOOP
969     NOP
971     RET
972     NOP
978 FLASH_SEND_N_WORDS    LIM H, R17, `LH $3FFE
979     LIM L, R17, `LL $3FFE
980     MOVE W, R17, R20
981     MOVE W, R24, R3
984     LIM H, R16, `LH $1FF8
985     LIM L, R16, `LL $1FF8
986     MOVE W, R16, R5
989     TEST W, R3
990     BRNZ FSNB_LOOP
991     NOP
992     RET
996 FSNB_LOOP    MOVE W, R5, R20
997     MOVE W, R24, R6
1000     LIM H, R16, `LH FLASH_SEND_BYTE
1001     LIM L, R16, `LL FLASH_SEND_BYTE
1002     MOVE W, R16, R26
1003     MOVE W, R6, R0
1004     CALL
1005     NOP
1008     LIM H, R16, `LH $3FF9		
1009     LIM L, R16, `LL $3FF9
1010     MOVE W, R16, R20
1011     MOVE W, R24, R17
1013     LIM H, R16, `LH $3FF8
1014     LIM L, R16, `LL $3FF8
1015     MOVE W, R16, R20
1016     MOVE W, R24, R18
1018     LIM W, R16, $01
1019     ADD W, R18, R18
1020     LIM W, R16, $00
1021     ADDC W, R17, R17
1023     LIM H, R16, `LH $3FF9		
1024     LIM L, R16, `LL $3FF9
1025     MOVE W, R16, R20
1026     MOVE W, R17, R24
1028     LIM H, R16, `LH $3FF8
1029     LIM L, R16, `LL $3FF8
1030     MOVE W, R16, R20
1031     MOVE W, R18, R24
1034     LIM H, R16, `LH FLASH_SEND_BYTE
1035     LIM L, R16, `LL FLASH_SEND_BYTE
1036     MOVE W, R16, R26
1037     MOVE S, R6, R0
1038     CALL
1039     NOP
1042     LIM H, R16, `LH $3FF9		
1043     LIM L, R16, `LL $3FF9
1044     MOVE W, R16, R20
1045     MOVE W, R24, R17
1047     LIM H, R16, `LH $3FF8
1048     LIM L, R16, `LL $3FF8
1049     MOVE W, R16, R20
1050     MOVE W, R24, R18
1052     LIM W, R16, $01
1053     ADD W, R18, R18
1054     LIM W, R16, $00
1055     ADDC W, R17, R17
1066     LIM H, R16, `LH $3FF9		
1067     LIM L, R16, `LL $3FF9
1068     MOVE W, R16, R20
1069     MOVE W, R17, R24
1071     LIM H, R16, `LH $3FF8
1072     LIM L, R16, `LL $3FF8
1073     MOVE W, R16, R20
1074     MOVE W, R18, R24
1077     LIM W, R16, $01
1078     ADD W, R5, R5
1081     LIM W, R16, $01
1082     SUB W, R3, R3
1085     BRNZ FSNB_LOOP
1086     NOP
1088     RET
1089     NOP
1094 FLASH_UNLOCK_ALL_BLOCKS    LIM H, R16, `LH $FFD8
1095     LIM L, R16, `LL $FFD8
1096     MOVE W, R16, R22
1097     LIM H, R16, $00
1098     LIM L, R16, $00
1099     MOVE W, R16, R25
1101     LIM H, R16, `LH $FFD9
1102     LIM L, R16, `LL $FFD9
1103     MOVE W, R16, R22
1104     LIM H, R16, $0A
1105     LIM L, R16, $AA
1106     MOVE W, R16, R25
1108     LIM H, R16, `LH $FFDB
1109     LIM L, R16, `LL $FFDB
1110     MOVE W, R16, R22
1111     LIM H, R16, $00
1112     LIM L, R16, $AA
1113     MOVE W, R16, R25	
1115     LIM H, R16, `LH $FFDF
1116     LIM L, R16, `LL $FFDF
1117     MOVE W, R16, R22
1119 FUB_WAIT_ENTRY_FIRST    BITT W, R25, 0		
1120     BRZ FUB_WAIT_ENTRY_FIRST	
1122     LIM H, R16, `LH $FFD8
1123     LIM L, R16, `LL $FFD8
1124     MOVE W, R16, R22
1125     LIM H, R16, $00
1126     LIM L, R16, $00
1127     MOVE W, R16, R25
1129     LIM H, R16, `LH $FFD9
1130     LIM L, R16, `LL $FFD9
1131     MOVE W, R16, R22
1132     LIM H, R16, $05
1133     LIM L, R16, $55
1134     MOVE W, R16, R25
1136     LIM H, R16, `LH $FFDB
1137     LIM L, R16, `LL $FFDB
1138     MOVE W, R16, R22
1139     LIM H, R16, $00
1140     LIM L, R16, $55
1141     MOVE W, R16, R25	
1143     LIM H, R16, `LH $FFDF
1144     LIM L, R16, `LL $FFDF
1145     MOVE W, R16, R22
1147 FUB_WAIT_ENTRY_SECOND    BITT W, R25, 0		
1148     BRZ FUB_WAIT_ENTRY_SECOND	
1150     LIM H, R16, `LH $FFD8
1151     LIM L, R16, `LL $FFD8
1152     MOVE W, R16, R22
1153     LIM H, R16, $00
1154     LIM L, R16, $00
1155     MOVE W, R16, R25
1157     LIM H, R16, `LH $FFD9
1158     LIM L, R16, `LL $FFD9
1159     MOVE W, R16, R22
1160     LIM H, R16, $0A
1161     LIM L, R16, $AA
1162     MOVE W, R16, R25
1164     LIM H, R16, `LH $FFDB
1165     LIM L, R16, `LL $FFDB
1166     MOVE W, R16, R22
1167     LIM H, R16, $00
1168     LIM L, R16, $C0
1169     MOVE W, R16, R25	
1171     LIM H, R16, `LH $FFDF
1172     LIM L, R16, `LL $FFDF
1173     MOVE W, R16, R22
1175 FUB_WAIT_ENTRY_THIRD    BITT W, R25, 0		
1176     BRZ FUB_WAIT_ENTRY_THIRD	
1178     LIM H, R16, `LH $FFDB
1179     LIM L, R16, `LL $FFDB
1180     MOVE W, R16, R22
1181     LIM H, R16, $00
1182     LIM L, R16, $80
1183     MOVE W, R16, R25	
1185     LIM H, R16, `LH $FFDF
1186     LIM L, R16, `LL $FFDF
1187     MOVE W, R16, R22
1189 FUB_WAIT_ERASE_FIRST    BITT W, R25, 0		
1190     BRZ FUB_WAIT_ERASE_FIRST	
1192     LIM H, R16, `LH $FFD8
1193     LIM L, R16, `LL $FFD8
1194     MOVE W, R16, R22
1195     LIM H, R16, $00
1196     LIM L, R16, $00
1197     MOVE W, R16, R25
1199     LIM H, R16, `LH $FFD9
1200     LIM L, R16, `LL $FFD9
1201     MOVE W, R16, R22
1202     LIM H, R16, $00
1203     LIM L, R16, $00
1204     MOVE W, R16, R25
1206     LIM H, R16, `LH $FFDB
1207     LIM L, R16, `LL $FFDB
1208     MOVE W, R16, R22
1209     LIM W, R16, $30
1210     MOVE L, R16, R25	
1212     LIM H, R16, `LH $FFDF
1213     LIM L, R16, `LL $FFDF
1214     MOVE W, R16, R22
1216 FUB_WAIT_ERASE_SECOND    BITT W, R25, 0		
1217     BRZ FUB_WAIT_ERASE_SECOND	
1219     LIM H, R16, `LH $FFDF
1220     LIM L, R16, `LL $FFDF
1221     MOVE W, R16, R22
1222     MOVE W, R31, R25	
1224 FUB_WAIT_PREV    BITT W, R25, 1		
1225     BRZ FUB_WAIT_PREV	
1226     LIM H, R16, `LH $FFDB
1227     LIM L, R16, `LL $FFDB
1228     MOVE W, R16, R22
1229     MOVE W, R25, R18	
1232 FUB_WAIT_BUSY    LIM H, R16, `LH $FFDF
1233     LIM L, R16, `LL $FFDF
1234     MOVE W, R16, R22
1235     MOVE W, R31, R25	
1237 FUB_WAIT_STATUS    BITT W, R25, 1		
1238     BRZ FUB_WAIT_STATUS	
1239     LIM H, R16, `LH $FFDB
1240     LIM L, R16, `LL $FFDB
1241     MOVE W, R16, R22
1242     MOVE W, R25, R16	
1243     XOR W, R18, R17	
1244     BITT W, R17, 6
1245     BRNZ FUB_WAIT_BUSY
1246     MOVE W, R16, R18	
1249     LIM H, R16, `LH $FFDB
1250     LIM L, R16, `LL $FFDB
1251     MOVE W, R16, R22
1252     LIM H, R16, $00
1253     LIM L, R16, $90
1254     MOVE W, R16, R25
1256     LIM H, R16, `LH $FFDF
1257     LIM L, R16, `LL $FFDF
1258     MOVE W, R16, R22
1260 FUB_WAIT_EXIT_FIRST    BITT W, R25, 0		
1261     BRZ FUB_WAIT_EXIT_FIRST	
1263     LIM H, R16, `LH $FFDB
1264     LIM L, R16, `LL $FFDB
1265     MOVE W, R16, R22
1266     LIM H, R16, $00
1267     LIM L, R16, $00
1268     MOVE W, R16, R25
1270     LIM H, R16, `LH $FFDF
1271     LIM L, R16, `LL $FFDF
1272     MOVE W, R16, R22
1274 FUB_WAIT_EXIT_SECOND    BITT W, R25, 0		
1275     BRZ FUB_WAIT_EXIT_SECOND	
1276     NOP
1278     RET
1279     NOP
1285 FLASH_LOCK_ALL_BLOCKS    LIM H, R17, `LH $3FF9
1286     LIM L, R17, `LL $3FF9
1287     MOVE W, R17, R20
1288     MOVE W, R31, R24
1290     LIM H, R17, `LH $3FF8
1291     LIM L, R17, `LL $3FF8
1292     MOVE W, R17, R20
1293     MOVE W, R31, R24
1296 FLAB_LOOP    LIM H, R16, `LH FLASH_LOCK_BLOCK
1297     LIM L, R16, `LL FLASH_LOCK_BLOCK
1298     MOVE W, R16, R26
1299     CALL
1300     NOP
1303     LIM H, R17, `LH $3FF9
1304     LIM L, R17, `LL $3FF9
1305     MOVE W, R17, R20
1306     MOVE W, R24, R3
1308     LIM H, R17, `LH $3FF8
1309     LIM L, R17, `LL $3FF8
1310     MOVE W, R17, R20
1311     MOVE W, R24, R4
1313     LIM H, R16, `LH $FFFC
1314     LIM L, R16, `LL $FFFC
1315     MOVE W, R16, R22
1316     MOVE W, R3, R25
1320     BRNZ FLAB_BIG
1323     LIM H, R16, $20
1324     LIM L, R16, $00
1325     ADD W, R4, R4
1326     MOVE W, R31, R16
1327     ADDC W, R3, R3
1328     BRA FLAB_UPDATE
1331 FLAB_BIG    LIM W, R16, $01
1332     ADD W, R3, R3		
1335 FLAB_UPDATE    LIM H, R17, `LH $3FF9
1336     LIM L, R17, `LL $3FF9
1337     MOVE W, R17, R20
1338     MOVE W, R3, R24
1340     LIM H, R17, `LH $3FF8
1341     LIM L, R17, `LL $3FF8
1342     MOVE W, R17, R20
1343     MOVE W, R4, R24
1345     BITT W, R3, 6
1346     BRZ FLAB_LOOP
1347     NOP
1349     RET
1350     NOP
1356 FLASH_ERASE_ALL_BLOCKS    LIM H, R17, `LH $3FF9
1357     LIM L, R17, `LL $3FF9
1358     MOVE W, R17, R20
1359     MOVE W, R31, R24
1361     LIM H, R17, `LH $3FF8
1362     LIM L, R17, `LL $3FF8
1363     MOVE W, R17, R20
1364     MOVE W, R31, R24
1367 FEAB_LOOP    LIM H, R16, `LH FLASH_ERASE_BLOCK
1368     LIM L, R16, `LL FLASH_ERASE_BLOCK
1369     MOVE W, R16, R26
1370     CALL
1371     NOP
1374     LIM H, R17, `LH $3FF9
1375     LIM L, R17, `LL $3FF9
1376     MOVE W, R17, R20
1377     MOVE W, R24, R3
1379     LIM H, R17, `LH $3FF8
1380     LIM L, R17, `LL $3FF8
1381     MOVE W, R17, R20
1382     MOVE W, R24, R4
1384     LIM H, R16, `LH $FFFC
1385     LIM L, R16, `LL $FFFC
1386     MOVE W, R16, R22
1387     MOVE W, R3, R25
1391     BRNZ FEAB_BIG
1394     LIM H, R16, $20
1395     LIM L, R16, $00
1396     ADD W, R4, R4
1397     MOVE W, R31, R16
1398     ADDC W, R3, R3
1399     BRA FEAB_UPDATE
1402 FEAB_BIG    LIM W, R16, $01
1403     ADD W, R3, R3		
1406 FEAB_UPDATE    LIM H, R17, `LH $3FF9
1407     LIM L, R17, `LL $3FF9
1408     MOVE W, R17, R20
1409     MOVE W, R3, R24
1411     LIM H, R17, `LH $3FF8
1412     LIM L, R17, `LL $3FF8
1413     MOVE W, R17, R20
1414     MOVE W, R4, R24
1416     BITT W, R3, 6
1417     BRZ FEAB_LOOP
1418     NOP
1420     RET
1421     NOP
0 @POP_FILE:    DE2_FLASH.INC
0 @PUSH_FILE:    DE2_SRAM.INC
33 SRAM_NULL    LIM H, R16, $E0
34     LIM L, R16, $00
35     RET
36     MOVE W, R16, R11
42 SRAM_INIT    RET
43     NOP
48 SRAM_SET_ADDRESS_WRITE    LIM H, R17, `LH $1FF5		
49     LIM L, R17, `LL $1FF5
50     MOVE W, R17, R20
51     MOVE W, R24, R4
53     LIM H, R17, `LH $1FF4
54     LIM L, R17, `LL $1FF4
55     MOVE W, R17, R20
56     MOVE W, R24, R3
58     LIM H, R17, `LH $FFE0
59     LIM L, R17, `LL $FFE0
60     MOVE W, R17, R22
61     MOVE W, R4, R25
63     LIM H, R17, `LH $FFE1
64     LIM L, R17, `LL $FFE1
65     MOVE W, R17, R22
66     MOVE W, R3, R25
68     RET
69     NOP
75 SRAM_SET_ADDRESS_READ    LIM H, R16, `LH $FFE6
76     LIM L, R16, `LL $FFE6
77     MOVE W, R16, R22
78     LIM W, R16, $00
79     MOVE W, R16, R25	
81     LIM H, R17, `LH $1FF5		
82     LIM L, R17, `LL $1FF5
83     MOVE W, R17, R20
84     MOVE W, R24, R4
86     LIM H, R17, `LH $1FF4
87     LIM L, R17, `LL $1FF4
88     MOVE W, R17, R20
89     MOVE W, R24, R3
91     LIM H, R17, `LH $FFE4
92     LIM L, R17, `LL $FFE4
93     MOVE W, R17, R22
94     MOVE W, R4, R25
96     LIM H, R17, `LH $FFE5
97     LIM L, R17, `LL $FFE5
98     MOVE W, R17, R22
99     MOVE W, R3, R25	
101     LIM H, R16, `LH $FFE7
102     LIM L, R16, `LL $FFE7
103     MOVE W, R16, R22
105 SSAR_WAIT    BITT W, R25, 1	
106     BRZ SSAR_WAIT	
107     NOP
109     RET
110     NOP
115 SRAM_GET_WORD    LIM H, R16, `LH $FFE7
116     LIM L, R16, `LL $FFE7
117     MOVE W, R16, R22
118     MOVE W, R31, R25	
120 SGW_WAIT    BITT W, R25, 1	
121     BRZ SGW_WAIT	
122     LIM L, R16, `LL $FFE3
123     MOVE W, R16, R22
124     RET
125     MOVE W, R25, R11
130 SRAM_SEND_WORD    LIM H, R16, `LH $FFE3
131     LIM L, R16, `LL $FFE3
132     MOVE W, R16, R22
133     MOVE W, R0, R25		
135     LIM H, R16, `LH $FFE7
136     LIM L, R16, `LL $FFE7
137     MOVE W, R16, R22
139 SWW_WAIT_DATA    BITT W, R25, 0		
140     BRZ SWW_WAIT_DATA	
141     NOP
143     RET
144     NOP
150 SRAM_GET_N_WORDS    LIM H, R16, `LH $FFE6
151     LIM L, R16, `LL $FFE6
152     MOVE W, R16, R22
153     LIM W, R16, $01
154     MOVE W, R16, R25	
157     LIM H, R17, `LH $3FFD
158     LIM L, R17, `LL $3FFD
159     MOVE W, R17, R20
160     MOVE W, R24, R3
163     LIM H, R16, `LH $1FF8
164     LIM L, R16, `LL $1FF8
165     MOVE W, R16, R5
168     TEST W, R3
169     BRNZ SRGNB_LOOP
170     NOP
171     RET
175 SRGNB_LOOP    LIM H, R16, `LH SRAM_GET_WORD
176     LIM L, R16, `LL SRAM_GET_WORD
177     MOVE W, R16, R26
178     CALL
179     NOP
182     MOVE W, R5, R20
183     MOVE W, R11, R24
186     LIM W, R16, $01
187     ADD W, R5, R5
190     LIM W, R16, $01
191     SUB W, R3, R3
194     BRNZ SRGNB_LOOP
195     NOP
197     RET
198     NOP
204 SRAM_SEND_N_WORDS    LIM H, R16, `LH $FFE2
205     LIM L, R16, `LL $FFE2
206     MOVE W, R16, R22
207     LIM W, R16, $01
208     MOVE W, R16, R25	
211     LIM H, R17, `LH $3FFD
212     LIM L, R17, `LL $3FFD
213     MOVE W, R17, R20
214     MOVE W, R24, R3
217     LIM H, R16, `LH $1FF8
218     LIM L, R16, `LL $1FF8
219     MOVE W, R16, R5
222     TEST W, R3
223     BRNZ SRSNB_LOOP
224     NOP
225     RET
229 SRSNB_LOOP    MOVE W, R5, R20
230     MOVE W, R24, R6
233     LIM H, R16, `LH SRAM_SEND_WORD
234     LIM L, R16, `LL SRAM_SEND_WORD
235     MOVE W, R16, R26
237     MOVE W, R6, R0
238     CALL
239     NOP
242     LIM W, R16, $01
243     ADD W, R5, R5
246     LIM W, R16, $01
247     SUB W, R3, R3
250     BRNZ SRSNB_LOOP
251     NOP
253     RET
254     NOP
0 @POP_FILE:    DE2_SRAM.INC
0 @PUSH_FILE:    DE2_SDRAM.INC
47 SDRAM_NULL    LIM H, R16, $E0
48     LIM L, R16, $00
49     RET
50     MOVE W, R16, R11
55 SDRAM_INIT    LIM H, R16, `LH $FFD2
56     LIM L, R16, `LL $FFD2
57     MOVE W, R16, R22
58     MOVE W, R31, R25	
60     LIM H, R16, `LH $FFD6
61     LIM L, R16, `LL $FFD6
62     MOVE W, R16, R22
63     MOVE W, R31, R25	
66     LIM H, R17, `LH $FFD0
67     LIM L, R17, `LL $FFD0
68     MOVE W, R17, R22
69     MOVE W, R31, R25
71     LIM H, R17, `LH $FFD1
72     LIM L, R17, `LL $FFD1
73     MOVE W, R17, R22
74     RET
75     MOVE W, R31, R25
81 SDRAM_SET_ADDRESS_WRITE    LIM H, R16, `LH $FFD2
82     LIM L, R16, `LL $FFD2
83     MOVE W, R16, R22
84     LIM W, R16, $04
85     MOVE W, R16, R25	
87     LIM H, R16, `LH $1FF3		
88     LIM L, R16, `LL $1FF3
89     MOVE W, R16, R20
90     MOVE W, R24, R17
92     LIM H, R16, `LH $1FF2
93     LIM L, R16, `LL $1FF2
94     MOVE W, R16, R20
95     MOVE W, R24, R18
97     LIM H, R16, `LH $FFD0
98     LIM L, R16, `LL $FFD0
99     MOVE W, R16, R22
100     MOVE W, R17, R25
102     LIM H, R16, `LH $FFD1
103     LIM L, R16, `LL $FFD1
104     MOVE W, R16, R22
105     RET
106     MOVE W, R18, R25
112 SDRAM_SET_ADDRESS_READ    LIM H, R16, `LH $FFD6
113     LIM L, R16, `LL $FFD6
114     MOVE W, R16, R22
115     LIM W, R16, $04
116     MOVE W, R16, R25	
118     LIM H, R16, `LH $1FF3		
119     LIM L, R16, `LL $1FF3
120     MOVE W, R16, R20
121     MOVE W, R24, R17
123     LIM H, R16, `LH $1FF2
124     LIM L, R16, `LL $1FF2
125     MOVE W, R16, R20
126     MOVE W, R24, R18
128     LIM H, R16, `LH $FFD4
129     LIM L, R16, `LL $FFD4
130     MOVE W, R16, R22
131     MOVE W, R17, R25
133     LIM H, R16, `LH $FFD5
134     LIM L, R16, `LL $FFD5
135     MOVE W, R16, R22
136     RET
137     MOVE W, R18, R25		
142 SDRAM_GET_WORD    LIM H, R16, `LH $FFD7
143     LIM L, R16, `LL $FFD7
144     MOVE W, R16, R22
146 SDGW_WAIT    BITT W, R25, 1		
147     BRZ SDGW_WAIT		
149     LIM H, R16, `LH $FFD3
150     LIM L, R16, `LL $FFD3
151     MOVE W, R16, R22
152     MOVE W, R25, R11
154     LIM H, R16, `LH $FFD7
155     LIM L, R16, `LL $FFD7
156     MOVE W, R16, R22
157     RET
158     MOVE W, R31, R25	
163 SDRAM_SEND_WORD    LIM H, R16, `LH $FFD7
164     LIM L, R16, `LL $FFD7
165     MOVE W, R16, R22
167 SDSW_WAIT    BITT W, R25, 0		
168     BRZ SDSW_WAIT		
170     LIM H, R16, `LH $FFD3
171     LIM L, R16, `LL $FFD3
172     MOVE W, R16, R22
173     RET
174     MOVE W, R0, R25
180 SDRAM_GET_N_WORDS    LIM H, R16, `LH $FFD6
181     LIM L, R16, `LL $FFD6
182     MOVE W, R16, R22
183     LIM W, R16, $04
184     MOVE W, R16, R25	
187     LIM H, R17, `LH $3FFC
188     LIM L, R17, `LL $3FFC
189     MOVE W, R17, R20
190     MOVE W, R24, R3
193     LIM H, R16, `LH $1FF8
194     LIM L, R16, `LL $1FF8
195     MOVE W, R16, R5
198     TEST W, R3
199     BRNZ SDGNW_LOOP
200     NOP
201     RET
205 SDGNW_LOOP    LIM H, R16, `LH SDRAM_GET_WORD
206     LIM L, R16, `LL SDRAM_GET_WORD
207     MOVE W, R16, R26
208     CALL
209     NOP
212     MOVE W, R5, R20
213     MOVE W, R11, R24
216     LIM W, R16, $01
217     ADD W, R5, R5
220     LIM W, R16, $01
221     SUB W, R3, R3
224     BRNZ SDGNW_LOOP
225     NOP
227     RET
228     NOP
234 SDRAM_SEND_N_WORDS    LIM H, R16, `LH $FFD2
235     LIM L, R16, `LL $FFD2
236     MOVE W, R16, R22
237     LIM W, R16, $04
238     MOVE W, R16, R25	
241     LIM H, R17, `LH $3FFC
242     LIM L, R17, `LL $3FFC
243     MOVE W, R17, R20
244     MOVE W, R24, R3
247     LIM H, R16, `LH $1FF8
248     LIM L, R16, `LL $1FF8
249     MOVE W, R16, R5
252     TEST W, R3
253     BRNZ SDSNW_LOOP
254     NOP
255     RET
259 SDSNW_LOOP    MOVE W, R5, R20
260     MOVE W, R24, R0
263     LIM H, R16, `LH SDRAM_SEND_WORD
264     LIM L, R16, `LL SDRAM_SEND_WORD
265     MOVE W, R16, R26
266     CALL
267     NOP
270     LIM W, R16, $01
271     ADD W, R5, R5
274     LIM W, R16, $01
275     SUB W, R3, R3
278     BRNZ SDSNW_LOOP
279     NOP
281     RET
282     NOP
0 @POP_FILE:    DE2_SDRAM.INC
169 MAIN    LIM H, R16, `LH SERIAL_GET_BYTE
170     LIM L, R16, `LL SERIAL_GET_BYTE
171     MOVE W, R16, R26
172     CALL
173     NOP
176     LIM L, R16, $DE
177     XOR L, R11, R11
178     BRNZ MAIN
179     NOP
182 COM_PING    CALL	
183     NOP
186     LIM L, R16, $AD
187     XOR L, R11, R11
188     BRNZ MAIN
189     NOP
191     CALL	
192     NOP
195     LIM L, R16, $BE
196     XOR L, R11, R11
197     BRNZ MAIN
198     NOP
200     CALL	
201     NOP
204     LIM L, R16, $EF
205     XOR L, R11, R11
206     BRNZ MAIN
207     NOP
210     LIM H, R16, `LH SERIAL_SEND_BYTE
211     LIM L, R16, `LL SERIAL_SEND_BYTE
212     MOVE W, R16, R26
214     LIM L, R16, $55
215     MOVE L, R16, R0
216     CALL	
217     NOP
219     LIM L, R16, $AA
220     MOVE L, R16, R0
221     CALL	
222     NOP
224     LIM L, R16, $F0
225     MOVE L, R16, R0
226     CALL	
227     NOP
229     LIM L, R16, $0F
230     MOVE L, R16, R0
231     CALL	
232     NOP
235     LIM H, R16, `LH $1FE4
236     LIM L, R16, `LL $1FE4
237     MOVE W, R16, R20
238     MOVE W, R24, R20
240     LIM W, R16, $01
241     MOVE W, R24, R3
242     ADD W, R20, R20
243     MOVE W, R24, R4	
245     MOVE S, R4, R0
246     CALL	
247     NOP
249     MOVE L, R4, R0
250     CALL	
251     NOP
253     MOVE S, R3, R0
254     CALL	
255     NOP
257     MOVE L, R3, R0
258     CALL	
259     NOP
261     LIM H, R17, `LH $FFFC
262     LIM L, R17, `LL $FFFC
263     MOVE W, R17, R22
264     LIM H, R16, $BE
265     LIM L, R16, $EF
266     MOVE W, R16, R25
270 M_COMMAND    LIM H, R16, `LH SERIAL_GET_BYTE
271     LIM L, R16, `LL SERIAL_GET_BYTE
272     MOVE W, R16, R26
273     CALL
274     NOP
276     LIM L, R16, $DE
277     XOR L, R11, R31
278     BRZ COM_PING
279     NOP
282     LIM L, R16, $01
283     XOR L, R11, R31
284     BRNZ M_NOT_READ
285     NOP
287     LIM H, R16, `LH COM_READ
288     LIM L, R16, `LL COM_READ
289     MOVE W, R16, R26
290     CALL
291     NOP
293     BRA M_COMMAND
294     NOP
297 M_NOT_READ    LIM L, R16, $02
298     XOR L, R11, R31
299     BRNZ M_NOT_WRITE
300     NOP
302     LIM H, R16, `LH COM_WRITE
303     LIM L, R16, `LL COM_WRITE
304     MOVE W, R16, R26
305     CALL
306     NOP
308     BRA M_COMMAND
309     NOP
312 M_NOT_WRITE    LIM L, R16, $04
313     XOR L, R11, R31
314     BRNZ M_NOT_UNLOCK_ALL
315     NOP
317     LIM H, R16, `LH COM_UNLOCK_ALL
318     LIM L, R16, `LL COM_UNLOCK_ALL
319     MOVE W, R16, R26
320     CALL
321     NOP
323     BRA M_COMMAND
324     NOP
327 M_NOT_UNLOCK_ALL    LIM L, R16, $05
328     XOR L, R11, R31
329     BRNZ M_NOT_LOCK_ALL
330     NOP
332     LIM H, R16, `LH COM_LOCK_ALL
333     LIM L, R16, `LL COM_LOCK_ALL
334     MOVE W, R16, R26
335     CALL
336     NOP
338     BRA M_COMMAND
339     NOP
342 M_NOT_LOCK_ALL    LIM L, R16, $06
343     XOR L, R11, R31
344     BRNZ M_NOT_GET_STATUS
345     NOP
347     LIM H, R16, `LH COM_GET_STATUS
348     LIM L, R16, `LL COM_GET_STATUS
349     MOVE W, R16, R26
350     CALL
351     NOP
353     BRA M_COMMAND
354     NOP
357 M_NOT_GET_STATUS    LIM L, R16, $07
358     XOR L, R11, R31
359     BRNZ M_NOT_ERASE_ALL
360     NOP
362     LIM H, R16, `LH COM_ERASE_ALL
363     LIM L, R16, `LL COM_ERASE_ALL
364     MOVE W, R16, R26
365     CALL
366     NOP
368     BRA M_COMMAND
369     NOP
372 M_NOT_ERASE_ALL    LIM L, R16, $08
373     XOR L, R11, R31
374     BRNZ M_NOT_LOCK_BLOCK
375     NOP
377     LIM H, R16, `LH COM_LOCK_BLOCK
378     LIM L, R16, `LL COM_LOCK_BLOCK
379     MOVE W, R16, R26
380     CALL
381     NOP
383     BRA M_COMMAND
384     NOP
387 M_NOT_LOCK_BLOCK    LIM L, R16, $09
388     XOR L, R11, R31
389     BRNZ M_NOT_ERASE_BLOCK
390     NOP
392     LIM H, R16, `LH COM_ERASE_BLOCK
393     LIM L, R16, `LL COM_ERASE_BLOCK
394     MOVE W, R16, R26
395     CALL
396     NOP
398     BRA M_COMMAND
399     NOP
402 M_NOT_ERASE_BLOCK    LIM L, R16, $0A
403     XOR L, R11, R31
404     BRNZ M_NOT_SET_ADDRESS
405     NOP
407     LIM H, R16, `LH COM_SET_ADDRESS
408     LIM L, R16, `LL COM_SET_ADDRESS
409     MOVE W, R16, R26
410     CALL
411     NOP
413     BRA M_COMMAND
414     NOP
417 M_NOT_SET_ADDRESS    LIM L, R16, $0B
418     XOR L, R11, R31
419     BRNZ M_NOT_GET_PLATFORM_DESCRIPTOR
420     NOP
422     LIM H, R16, `LH COM_GET_PLATFORM_DESCRIPTOR
423     LIM L, R16, `LL COM_GET_PLATFORM_DESCRIPTOR
424     MOVE W, R16, R26
425     CALL
426     NOP
428     BRA M_COMMAND
429     NOP
432 M_NOT_GET_PLATFORM_DESCRIPTOR    LIM L, R16, $0C
433     XOR L, R11, R31
434     BRNZ M_NOT_GET_TARGET_DESCRIPTOR
435     NOP
437     LIM H, R16, `LH COM_GET_TARGET_DESCRIPTOR
438     LIM L, R16, `LL COM_GET_TARGET_DESCRIPTOR
439     MOVE W, R16, R26
440     CALL
441     NOP
443     BRA M_COMMAND
444     NOP
447 M_NOT_GET_TARGET_DESCRIPTOR    LIM L, R16, $0D
448     XOR L, R11, R31
449     BRNZ M_NOT_GET_NUM_TARGETS
450     NOP
452     LIM H, R16, `LH COM_GET_NUM_TARGETS
453     LIM L, R16, `LL COM_GET_NUM_TARGETS
454     MOVE W, R16, R26
455     CALL
456     NOP
458     BRA M_COMMAND
459     NOP
462 M_NOT_GET_NUM_TARGETS    LIM L, R16, $0E
463     XOR L, R11, R31
464     BRNZ M_NOT_SET_TARGET
465     NOP
467     LIM H, R16, `LH COM_SET_TARGET
468     LIM L, R16, `LL COM_SET_TARGET
469     MOVE W, R16, R26
470     CALL
471     NOP
473     BRA M_COMMAND
474     NOP
477 M_NOT_SET_TARGET    LIM L, R16, $0F
478     XOR L, R11, R31
479     BRNZ M_NOT_TEST
480     NOP
482     LIM H, R16, `LH COM_TEST
483     LIM L, R16, `LL COM_TEST
484     MOVE W, R16, R26
485     CALL
486     NOP
488     BRA M_COMMAND
489     NOP
492 M_NOT_TEST    LIM H, R16, `LH SERIAL_SEND_BYTE
493     LIM L, R16, `LL SERIAL_SEND_BYTE
494     MOVE W, R16, R26
496     MOVE W, R31, R0
497     CALL	
498     NOP
500     CALL	
501     NOP
503     CALL	
504     NOP
506     CALL	
507     NOP
509     BRA MAIN
510     NOP
520 COM_READ    LIM H, R17, `LH $FFFC
521     LIM L, R17, `LL $FFFC
522     MOVE W, R17, R22
523     LIM H, R16, $C0
524     LIM L, R16, $01
525     MOVE W, R16, R25
528     LIM H, R16, `LH SERIAL_GET_BYTE
529     LIM L, R16, `LL SERIAL_GET_BYTE
530     MOVE W, R16, R26
533     CALL	
534     NOP
535     MOVE L, R11, R2	
536     MOVE S, R11, R11
537     MOVE H, R11, R17
540     CALL	
541     NOP
542     MOVE L, R11, R3	
543     MOVE L, R11, R17
546     CALL	
547     NOP
548     MOVE L, R11, R4
549     MOVE S, R11, R11
550     MOVE H, R11, R18
553     CALL	
554     NOP
555     MOVE L, R11, R5
556     MOVE L, R11, R18
559     ROR W, R18, R18	
560     LIM H, R16, $7F
561     LIM L, R16, $FF
562     AND W, R18, R18	
564     ROR W, R17, R17	
565     NOT W, R16, R16
566     AND W, R17, R16	
567     OR W, R18, R18	
569     LIM H, R16, $7F
570     LIM L, R16, $FF
571     AND W, R17, R17 	
573     LIM H, R16, `LH $1FF7
574     LIM L, R16, `LL $1FF7
575     MOVE W, R16, R20
576     MOVE W, R17, R24
578     LIM H, R16, `LH $1FF6
579     LIM L, R16, `LL $1FF6
580     MOVE W, R16, R20
581     MOVE W, R18, R24
583     LIM H, R16, `LH SERIAL_SEND_BYTE
584     LIM L, R16, `LL SERIAL_SEND_BYTE
585     MOVE W, R16, R26
587     MOVE L, R2, R0
588     CALL	
589     NOP
591     MOVE L, R3, R0
592     CALL	
593     NOP
595     MOVE L, R4, R0
596     CALL	
597     NOP
599     MOVE L, R5, R0
600     CALL	
601     NOP
604     LIM H, R17, `LH $1FE5
605     LIM L, R17, `LL $1FE5
606     MOVE W, R17, R20
607     MOVE W, R24, R20
609     MOVE W, R31, R24	
611     LIM W, R16, $01
612     ADD W, R20, R20
613     MOVE W, R31, R24	
615     LIM H, R16, `LH $1FEF
616     LIM L, R16, `LL $1FEF
617     MOVE W, R16, R20
618     MOVE W, R24, R26
619     CALL
620     NOP
624 COMR_LOOP    LIM H, R17, `LH $1FF7
625     LIM L, R17, `LL $1FF7
626     MOVE W, R17, R20
627     MOVE W, R24, R4
629     LIM H, R17, `LH $1FF6
630     LIM L, R17, `LL $1FF6
631     MOVE W, R17, R20
632     MOVE W, R24, R3
635     LIM H, R17, `LH $FFFC
636     LIM L, R17, `LL $FFFC
637     MOVE W, R17, R22
638     MOVE W, R4, R25
641     LIM H, R16, `LH $2000
642     LIM L, R16, `LL $2000
643     MOVE W, R31, R6
644     MOVE W, R16, R5
647     MOVE W, R3, R16
648     SUB W, R5, R5
649     MOVE W, R4, R16
650     SUBC W, R6, R6
653     BITT W, R30, 3	
654     BRZ COMR_GREATER
655     NOP
658     LIM H, R17, `LH $1FF7
659     LIM L, R17, `LL $1FF7
660     MOVE W, R17, R20
661     MOVE W, R24, R4
663     LIM H, R17, `LH $1FF6
664     LIM L, R17, `LL $1FF6
665     MOVE W, R17, R20
666     MOVE W, R24, R3
668     BRA COMR_TRANSFER
672 COMR_GREATER    LIM H, R16, `LH $2000
673     LIM L, R16, `LL $2000
674     MOVE W, R31, R4
675     MOVE W, R16, R3
684 COMR_TRANSFER    LIM H, R17, `LH $1FE6
685     LIM L, R17, `LL $1FE6
686     MOVE W, R17, R20
687     MOVE W, R24, R20
688     MOVE W, R3, R24
690     LIM H, R17, `LH $3FFF
691     LIM L, R17, `LL $3FFF
692     MOVE W, R17, R20
693     MOVE W, R3, R24
696     LIM H, R16, `LH $1FEE
697     LIM L, R16, `LL $1FEE
698     MOVE W, R16, R20
699     MOVE W, R24, R26
700     CALL
701     NOP
704     LIM H, R16, `LH SERIAL_SEND_N_WORDS
705     LIM L, R16, `LL SERIAL_SEND_N_WORDS
706     MOVE W, R16, R26
707     CALL
708     NOP
711     LIM H, R17, `LH $1FF7
712     LIM L, R17, `LL $1FF7
713     MOVE W, R17, R20
714     MOVE W, R24, R4
716     LIM H, R17, `LH $1FF6
717     LIM L, R17, `LL $1FF6
718     MOVE W, R17, R20
719     MOVE W, R24, R3
722     MOVE W, R31, R6
724     LIM H, R17, `LH $3FFF
725     LIM L, R17, `LL $3FFF
726     MOVE W, R17, R20
727     MOVE W, R24, R5
730     MOVE W, R5, R16
731     SUB W, R3, R3
732     MOVE W, R6, R16
733     SUBC W, R4, R4
736     LIM H, R17, `LH $1FF7
737     LIM L, R17, `LL $1FF7
738     MOVE W, R17, R20
739     MOVE W, R4, R24
741     LIM H, R17, `LH $1FF6
742     LIM L, R17, `LL $1FF6
743     MOVE W, R17, R20
744     MOVE W, R3, R24
747     MOVE W, R4, R16
748     OR W, R3, R16
749     BRNZ COMR_LOOP
750     NOP
752     RET
753     NOP
763 COM_WRITE    LIM H, R17, `LH $FFFC
764     LIM L, R17, `LL $FFFC
765     MOVE W, R17, R22
766     LIM H, R16, $C0
767     LIM L, R16, $02
768     MOVE W, R16, R25
771     LIM H, R16, `LH SERIAL_GET_BYTE
772     LIM L, R16, `LL SERIAL_GET_BYTE
773     MOVE W, R16, R26
776     CALL	
777     NOP
778     MOVE S, R11, R11
779     MOVE H, R11, R17
782     CALL	
783     NOP
784     MOVE L, R11, R17
787     CALL	
788     NOP
789     MOVE S, R11, R11
790     MOVE H, R11, R18
793     CALL	
794     NOP
795     MOVE L, R11, R18
798     ROR W, R18, R18	
799     LIM H, R16, $7F
800     LIM L, R16, $FF
801     AND W, R18, R18	
803     ROR W, R17, R17	
804     NOT W, R16, R16
805     AND W, R17, R16	
806     OR W, R18, R18	
808     LIM H, R16, $7F
809     LIM L, R16, $FF
810     AND W, R17, R17 	
812     LIM H, R16, `LH $1FF7
813     LIM L, R16, `LL $1FF7
814     MOVE W, R16, R20
815     MOVE W, R17, R24
817     LIM H, R16, `LH $1FF6
818     LIM L, R16, `LL $1FF6
819     MOVE W, R16, R20
820     MOVE W, R18, R24
823     LIM H, R17, `LH $1FE5
824     LIM L, R17, `LL $1FE5
825     MOVE W, R17, R20
826     MOVE W, R24, R20
828     MOVE W, R31, R24	
830     LIM W, R16, $01
831     ADD W, R20, R20
832     MOVE W, R31, R24	
834     LIM H, R16, `LH $1FF0
835     LIM L, R16, `LL $1FF0
836     MOVE W, R16, R20
837     MOVE W, R24, R26
838     CALL
839     NOP
843 COMW_LOOP    LIM H, R17, `LH $1FF7
844     LIM L, R17, `LL $1FF7
845     MOVE W, R17, R20
846     MOVE W, R24, R4
848     LIM H, R17, `LH $1FF6
849     LIM L, R17, `LL $1FF6
850     MOVE W, R17, R20
851     MOVE W, R24, R3
854     LIM H, R17, `LH $FFFC
855     LIM L, R17, `LL $FFFC
856     MOVE W, R17, R22
857     MOVE W, R4, R25
860     LIM H, R16, `LH $2000
861     LIM L, R16, `LL $2000
862     MOVE W, R31, R6
863     MOVE W, R16, R5
866     MOVE W, R3, R16
867     SUB W, R5, R5
868     MOVE W, R4, R16
869     SUBC W, R6, R6
872     BITT W, R30, 3	
873     BRZ COMW_GREATER
874     NOP
877     LIM H, R17, `LH $1FF7
878     LIM L, R17, `LL $1FF7
879     MOVE W, R17, R20
880     MOVE W, R24, R4
882     LIM H, R17, `LH $1FF6
883     LIM L, R17, `LL $1FF6
884     MOVE W, R17, R20
885     MOVE W, R24, R3
887     BRA COMW_TRANSFER
891 COMW_GREATER    LIM H, R16, `LH $2000
892     LIM L, R16, `LL $2000
893     MOVE W, R31, R4
894     MOVE W, R16, R3
898 COMW_TRANSFER    MOVE W, R4, R17 
899     MOVE W, R3, R18	
901     MOVE W, R18, R16 
902     ADD W, R18, R18
903     MOVE W, R17, R16
904     ADDC W, R17, R17			
906     LIM H, R16, `LH SERIAL_SEND_BYTE
907     LIM L, R16, `LL SERIAL_SEND_BYTE
908     MOVE W, R16, R26
910     MOVE S, R17, R0			
911     CALL	
912     NOP
914     MOVE L, R17, R0
915     CALL	
916     NOP
918     MOVE S, R18, R0
919     CALL	
920     NOP
922     MOVE L, R18, R0
923     CALL	
924     NOP
927     LIM H, R17, `LH $1FE6
928     LIM L, R17, `LL $1FE6
929     MOVE W, R17, R20
930     MOVE W, R24, R20
931     MOVE W, R3, R24
933     LIM H, R17, `LH $3FFF
934     LIM L, R17, `LL $3FFF
935     MOVE W, R17, R20
936     MOVE W, R3, R24
939     LIM H, R16, `LH SERIAL_GET_N_WORDS
940     LIM L, R16, `LL SERIAL_GET_N_WORDS
941     MOVE W, R16, R26
942     CALL
943     NOP
946     LIM H, R16, `LH $1FED
947     LIM L, R16, `LL $1FED
948     MOVE W, R16, R20
949     MOVE W, R24, R26
950     CALL
951     NOP
954     LIM H, R17, `LH $1FF7
955     LIM L, R17, `LL $1FF7
956     MOVE W, R17, R20
957     MOVE W, R24, R4
959     LIM H, R17, `LH $1FF6
960     LIM L, R17, `LL $1FF6
961     MOVE W, R17, R20
962     MOVE W, R24, R3
965     MOVE W, R31, R6
967     LIM H, R17, `LH $3FFF
968     LIM L, R17, `LL $3FFF
969     MOVE W, R17, R20
970     MOVE W, R24, R5
973     MOVE W, R5, R16
974     SUB W, R3, R3
975     MOVE W, R6, R16
976     SUBC W, R4, R4
979     LIM H, R17, `LH $1FF7
980     LIM L, R17, `LL $1FF7
981     MOVE W, R17, R20
982     MOVE W, R4, R24
984     LIM H, R17, `LH $1FF6
985     LIM L, R17, `LL $1FF6
986     MOVE W, R17, R20
987     MOVE W, R3, R24
990     MOVE W, R4, R16
991     OR W, R3, R16
992     BRNZ COMW_LOOP
993     NOP
995     RET
996     NOP
1001 COM_VERIFY    LIM H, R16, `LH SERIAL_SEND_BYTE
1002     LIM L, R16, `LL SERIAL_SEND_BYTE
1003     MOVE W, R16, R26
1005     LIM L, R16, $E0
1006     MOVE L, R16, R0
1007     CALL	
1008     NOP
1010     LIM L, R16, $00
1011     MOVE L, R16, R0
1012     CALL	
1013     NOP
1015     RET
1016     NOP
1021 COM_UNLOCK_ALL    LIM H, R17, `LH $FFFC
1022     LIM L, R17, `LL $FFFC
1023     MOVE W, R17, R22
1024     LIM H, R16, $C0
1025     LIM L, R16, $04
1026     MOVE W, R16, R25
1034     LIM H, R16, `LH $1FEB
1035     LIM L, R16, `LL $1FEB
1036     MOVE W, R16, R20
1037     MOVE W, R24, R26
1038     CALL
1039     NOP
1041     LIM H, R16, `LH SERIAL_SEND_BYTE
1042     LIM L, R16, `LL SERIAL_SEND_BYTE
1043     MOVE W, R16, R26
1045     LIM L, R16, $55
1046     MOVE L, R16, R0
1047     CALL	
1048     NOP
1050     LIM L, R16, $AA
1051     MOVE L, R16, R0
1052     CALL	
1053     NOP
1055     RET
1056     NOP
1061 COM_LOCK_ALL    LIM H, R17, `LH $FFFC
1062     LIM L, R17, `LL $FFFC
1063     MOVE W, R17, R22
1064     LIM H, R16, $C0
1065     LIM L, R16, $05
1066     MOVE W, R16, R25
1074     LIM H, R16, `LH $1FEA
1075     LIM L, R16, `LL $1FEA
1076     MOVE W, R16, R20
1077     MOVE W, R24, R26
1078     CALL
1079     NOP
1081     LIM H, R16, `LH SERIAL_SEND_BYTE
1082     LIM L, R16, `LL SERIAL_SEND_BYTE
1083     MOVE W, R16, R26
1085     LIM L, R16, $55
1086     MOVE L, R16, R0
1087     CALL	
1088     NOP
1090     LIM L, R16, $AA
1091     MOVE L, R16, R0
1092     CALL	
1093     NOP
1095     RET
1096     NOP
1101 COM_GET_STATUS    LIM H, R16, `LH SERIAL_SEND_BYTE
1102     LIM L, R16, `LL SERIAL_SEND_BYTE
1103     MOVE W, R16, R26
1105     LIM L, R16, $E0
1106     MOVE L, R16, R0
1107     CALL	
1108     NOP
1110     LIM L, R16, $00
1111     MOVE L, R16, R0
1112     CALL	
1113     NOP
1115     RET
1116     NOP
1121 COM_ERASE_ALL    LIM H, R17, `LH $FFFA
1122     LIM L, R17, `LL $FFFA
1123     MOVE W, R17, R22
1124     LIM H, R16, $C0
1125     LIM L, R16, $07
1126     MOVE W, R16, R25
1134     LIM H, R16, `LH $1FEC
1135     LIM L, R16, `LL $1FEC
1136     MOVE W, R16, R20
1137     MOVE W, R24, R26
1138     CALL
1139     NOP
1141     LIM H, R16, `LH SERIAL_SEND_BYTE
1142     LIM L, R16, `LL SERIAL_SEND_BYTE
1143     MOVE W, R16, R26
1145     LIM L, R16, $55
1146     MOVE L, R16, R0
1147     CALL	
1148     NOP
1150     LIM L, R16, $AA
1151     MOVE L, R16, R0
1152     CALL	
1153     NOP
1155     RET
1156     NOP
1161 COM_LOCK_BLOCK    LIM H, R16, `LH $1FE8
1162     LIM L, R16, `LL $1FE8
1163     MOVE W, R16, R20
1164     MOVE W, R24, R26
1165     CALL
1166     NOP
1168     LIM H, R16, `LH SERIAL_SEND_BYTE
1169     LIM L, R16, `LL SERIAL_SEND_BYTE
1170     MOVE W, R16, R26
1172     LIM L, R16, $E0
1173     MOVE L, R16, R0
1174     CALL	
1175     NOP
1177     LIM L, R16, $00
1178     MOVE L, R16, R0
1179     CALL	
1180     NOP
1182     RET
1183     NOP
1188 COM_ERASE_BLOCK    LIM H, R16, `LH $1FF1
1189     LIM L, R16, `LL $1FF1
1190     MOVE W, R16, R20
1191     MOVE W, R24, R26
1192     CALL
1193     NOP
1195     LIM H, R16, `LH SERIAL_SEND_BYTE
1196     LIM L, R16, `LL SERIAL_SEND_BYTE
1197     MOVE W, R16, R26
1199     LIM L, R16, $E0
1200     MOVE L, R16, R0
1201     CALL	
1202     NOP
1204     LIM L, R16, $00
1205     MOVE L, R16, R0
1206     CALL	
1207     NOP
1209     RET
1210     NOP
1215 COM_SET_ADDRESS    LIM H, R16, `LH SERIAL_SEND_BYTE
1216     LIM L, R16, `LL SERIAL_SEND_BYTE
1217     MOVE W, R16, R26
1219     LIM L, R16, $E0
1220     MOVE L, R16, R0
1221     CALL	
1222     NOP
1224     LIM L, R16, $00
1225     MOVE L, R16, R0
1226     CALL	
1227     NOP
1229     RET
1230     NOP
1235 COM_GET_PLATFORM_DESCRIPTOR    LIM H, R16, `LH PLATFORM_DESCRIPTOR
1236     LIM L, R16, `LL PLATFORM_DESCRIPTOR
1237     MOVE W, R16, R20
1240 CGPD_LOOP    LIM H, R16, `LH SERIAL_SEND_BYTE
1241     LIM L, R16, `LL SERIAL_SEND_BYTE
1242     MOVE W, R16, R26
1244     MOVE L, R24, R0	
1245     CALL
1246     NOP
1248     LIM W, R16, $01
1249     ADD W, R20, R20	
1251     TEST L, R0
1252     BRNZ CGPD_LOOP
1253     NOP
1255     RET
1256     NOP
1261 COM_GET_TARGET_DESCRIPTOR    LIM H, R16, `LH $1FE7
1262     LIM L, R16, `LL $1FE7
1263     MOVE W, R16, R20				
1264     MOVE W, R24, R20					
1265     MOVE W, R24, R20 				
1268 CGTD_LOOP    LIM H, R16, `LH SERIAL_SEND_BYTE
1269     LIM L, R16, `LL SERIAL_SEND_BYTE
1270     MOVE W, R16, R26
1272     MOVE L, R24, R0	
1273     CALL
1274     NOP
1276     LIM W, R16, $01
1277     ADD W, R20, R20		
1279     TEST L, R0
1280     BRNZ CGTD_LOOP
1281     NOP
1283     RET
1284     NOP
1289 COM_GET_NUM_TARGETS    LIM H, R16, `LH SERIAL_SEND_BYTE
1290     LIM L, R16, `LL SERIAL_SEND_BYTE
1291     MOVE W, R16, R26
1293     LIM H, R16, `LH $03
1294     LIM L, R16, `LL $03
1295     MOVE W, R16, R0
1296     CALL 						
1297     NOP
1299     RET
1300     NOP
1305 COM_SET_TARGET    LIM H, R16, `LH SERIAL_SEND_BYTE
1306     LIM L, R16, `LL SERIAL_SEND_BYTE
1307     MOVE W, R16, R26
1309     LIM H, R16, `LH SERIAL_GET_BYTE
1310     LIM L, R16, `LL SERIAL_GET_BYTE
1311     MOVE W, R16, R26
1312     CALL 						
1313     NOP
1316 @PUSH_MACRO:    SET_TARGET:DE2_PROGRAMMER.INC
402     LIM L, R16, $00
403     XOR L, R11, R31
404     BRZ M_ST_FLASH
406     LIM L, R16, $01
407     XOR L, R11, R31
408     BRZ M_ST_SRAM
410     LIM L, R16, $02
411     XOR L, R11, R31
412     BRZ M_ST_SDRAM
413     NOP
415     MOVE W, R31, R11	
418 M_ST_FLASH    LIM H, R16, `LH $1FF0
419     LIM L, R16, `LL $1FF0
420     MOVE W, R16, R20
421     LIM H, R16, `LH FLASH_SET_ADDRESS_WRITE
422     LIM L, R16, `LL FLASH_SET_ADDRESS_WRITE
423     MOVE W, R16, R24
425     LIM H, R16, `LH $1FEF
426     LIM L, R16, `LL $1FEF
427     MOVE W, R16, R20
428     LIM H, R16, `LH FLASH_SET_ADDRESS_READ
429     LIM L, R16, `LL FLASH_SET_ADDRESS_READ
430     MOVE W, R16, R24
432     LIM H, R16, `LH $1FEE
433     LIM L, R16, `LL $1FEE
434     MOVE W, R16, R20
435     LIM H, R16, `LH FLASH_GET_N_WORDS
436     LIM L, R16, `LL FLASH_GET_N_WORDS
437     MOVE W, R16, R24
439     LIM H, R16, `LH $1FED
440     LIM L, R16, `LL $1FED
441     MOVE W, R16, R20
442     LIM H, R16, `LH FLASH_SEND_N_WORDS
443     LIM L, R16, `LL FLASH_SEND_N_WORDS
444     MOVE W, R16, R24
446     LIM H, R16, `LH $1FEC
447     LIM L, R16, `LL $1FEC
448     MOVE W, R16, R20
449     LIM H, R16, `LH FLASH_ERASE_ALL_BLOCKS
450     LIM L, R16, `LL FLASH_ERASE_ALL_BLOCKS
451     MOVE W, R16, R24
453     LIM H, R16, `LH $1FEB
454     LIM L, R16, `LL $1FEB
455     MOVE W, R16, R20
456     LIM H, R16, `LH FLASH_UNLOCK_ALL_BLOCKS
457     LIM L, R16, `LL FLASH_UNLOCK_ALL_BLOCKS
458     MOVE W, R16, R24
460     LIM H, R16, `LH $1FEA
461     LIM L, R16, `LL $1FEA
462     MOVE W, R16, R20
463     LIM H, R16, `LH FLASH_LOCK_ALL_BLOCKS
464     LIM L, R16, `LL FLASH_LOCK_ALL_BLOCKS
465     MOVE W, R16, R24
467     LIM H, R16, `LH $1FE9
468     LIM L, R16, `LL $1FE9
469     MOVE W, R16, R20
470     LIM H, R16, `LH FLASH_NULL
471     LIM L, R16, `LL FLASH_NULL
472     MOVE W, R16, R24
474     LIM H, R16, `LH $1FE8
475     LIM L, R16, `LL $1FE8
476     MOVE W, R16, R20
477     LIM H, R16, `LH FLASH_LOCK_BLOCK
478     LIM L, R16, `LL FLASH_LOCK_BLOCK
479     MOVE W, R16, R24
481     LIM H, R16, `LH $1FF1
482     LIM L, R16, `LL $1FF1
483     MOVE W, R16, R20
484     LIM H, R16, `LH FLASH_ERASE_BLOCK
485     LIM L, R16, `LL FLASH_ERASE_BLOCK
486     MOVE W, R16, R24
488     LIM H, R16, `LH $1FE6
489     LIM L, R16, `LL $1FE6
490     MOVE W, R16, R20
491     LIM H, R16, `LH $3FFE
492     LIM L, R16, `LL $3FFE
493     MOVE W, R16, R24
495     LIM H, R16, `LH $1FE5
496     LIM L, R16, `LL $1FE5
497     MOVE W, R16, R20
498     LIM H, R16, `LH $3FFA
499     LIM L, R16, `LL $3FFA
500     MOVE W, R16, R24
501     BRA M_ST_END
504 M_ST_SRAM    LIM H, R16, `LH $1FF0
505     LIM L, R16, `LL $1FF0
506     MOVE W, R16, R20
507     LIM H, R16, `LH SRAM_SET_ADDRESS_WRITE
508     LIM L, R16, `LL SRAM_SET_ADDRESS_WRITE
509     MOVE W, R16, R24
511     LIM H, R16, `LH $1FEF
512     LIM L, R16, `LL $1FEF
513     MOVE W, R16, R20
514     LIM H, R16, `LH SRAM_SET_ADDRESS_READ
515     LIM L, R16, `LL SRAM_SET_ADDRESS_READ
516     MOVE W, R16, R24		
518     LIM H, R16, `LH $1FEE
519     LIM L, R16, `LL $1FEE
520     MOVE W, R16, R20
521     LIM H, R16, `LH SRAM_GET_N_WORDS
522     LIM L, R16, `LL SRAM_GET_N_WORDS
523     MOVE W, R16, R24		
525     LIM H, R16, `LH $1FED
526     LIM L, R16, `LL $1FED
527     MOVE W, R16, R20
528     LIM H, R16, `LH SRAM_SEND_N_WORDS
529     LIM L, R16, `LL SRAM_SEND_N_WORDS
530     MOVE W, R16, R24		
532     LIM H, R16, `LH $1FEC
533     LIM L, R16, `LL $1FEC
534     MOVE W, R16, R20
535     LIM H, R16, `LH SRAM_NULL
536     LIM L, R16, `LL SRAM_NULL
537     MOVE W, R16, R24
539     LIM H, R16, `LH $1FEB
540     LIM L, R16, `LL $1FEB
541     MOVE W, R16, R20
542     LIM H, R16, `LH SRAM_NULL
543     LIM L, R16, `LL SRAM_NULL
544     MOVE W, R16, R24
546     LIM H, R16, `LH $1FEA
547     LIM L, R16, `LL $1FEA
548     MOVE W, R16, R20
549     LIM H, R16, `LH SRAM_NULL
550     LIM L, R16, `LL SRAM_NULL
551     MOVE W, R16, R24
553     LIM H, R16, `LH $1FE9
554     LIM L, R16, `LL $1FE9
555     MOVE W, R16, R20
556     LIM H, R16, `LH SRAM_NULL
557     LIM L, R16, `LL SRAM_NULL
558     MOVE W, R16, R24
560     LIM H, R16, `LH $1FE8
561     LIM L, R16, `LL $1FE8
562     MOVE W, R16, R20
563     LIM H, R16, `LH SRAM_NULL
564     LIM L, R16, `LL SRAM_NULL
565     MOVE W, R16, R24
567     LIM H, R16, `LH $1FF1
568     LIM L, R16, `LL $1FF1
569     MOVE W, R16, R20
570     LIM H, R16, `LH SRAM_NULL
571     LIM L, R16, `LL SRAM_NULL
572     MOVE W, R16, R24
574     LIM H, R16, `LH $1FE6
575     LIM L, R16, `LL $1FE6
576     MOVE W, R16, R20
577     LIM H, R16, `LH $3FFD
578     LIM L, R16, `LL $3FFD
579     MOVE W, R16, R24		
581     LIM H, R16, `LH $1FE5
582     LIM L, R16, `LL $1FE5
583     MOVE W, R16, R20
584     LIM H, R16, `LH $1FF4
585     LIM L, R16, `LL $1FF4
586     MOVE W, R16, R24
587     BRA M_ST_END
590 M_ST_SDRAM    LIM H, R16, `LH $1FF0
591     LIM L, R16, `LL $1FF0
592     MOVE W, R16, R20
593     LIM H, R16, `LH SDRAM_SET_ADDRESS_WRITE
594     LIM L, R16, `LL SDRAM_SET_ADDRESS_WRITE
595     MOVE W, R16, R24		
597     LIM H, R16, `LH $1FEF
598     LIM L, R16, `LL $1FEF
599     MOVE W, R16, R20
600     LIM H, R16, `LH SDRAM_SET_ADDRESS_READ
601     LIM L, R16, `LL SDRAM_SET_ADDRESS_READ
602     MOVE W, R16, R24		
604     LIM H, R16, `LH $1FEE
605     LIM L, R16, `LL $1FEE
606     MOVE W, R16, R20
607     LIM H, R16, `LH SDRAM_GET_N_WORDS
608     LIM L, R16, `LL SDRAM_GET_N_WORDS
609     MOVE W, R16, R24		
611     LIM H, R16, `LH $1FED
612     LIM L, R16, `LL $1FED
613     MOVE W, R16, R20
614     LIM H, R16, `LH SDRAM_SEND_N_WORDS
615     LIM L, R16, `LL SDRAM_SEND_N_WORDS
616     MOVE W, R16, R24		
618     LIM H, R16, `LH $1FEC
619     LIM L, R16, `LL $1FEC
620     MOVE W, R16, R20
621     LIM H, R16, `LH SDRAM_NULL
622     LIM L, R16, `LL SDRAM_NULL
623     MOVE W, R16, R24
625     LIM H, R16, `LH $1FEB
626     LIM L, R16, `LL $1FEB
627     MOVE W, R16, R20
628     LIM H, R16, `LH SDRAM_NULL
629     LIM L, R16, `LL SDRAM_NULL
630     MOVE W, R16, R24
632     LIM H, R16, `LH $1FEA
633     LIM L, R16, `LL $1FEA
634     MOVE W, R16, R20
635     LIM H, R16, `LH SDRAM_NULL
636     LIM L, R16, `LL SDRAM_NULL
637     MOVE W, R16, R24
639     LIM H, R16, `LH $1FE9
640     LIM L, R16, `LL $1FE9
641     MOVE W, R16, R20
642     LIM H, R16, `LH SDRAM_NULL
643     LIM L, R16, `LL SDRAM_NULL
644     MOVE W, R16, R24
646     LIM H, R16, `LH $1FE8
647     LIM L, R16, `LL $1FE8
648     MOVE W, R16, R20
649     LIM H, R16, `LH SDRAM_NULL
650     LIM L, R16, `LL SDRAM_NULL
651     MOVE W, R16, R24
653     LIM H, R16, `LH $1FF1
654     LIM L, R16, `LL $1FF1
655     MOVE W, R16, R20
656     LIM H, R16, `LH SDRAM_NULL
657     LIM L, R16, `LL SDRAM_NULL
658     MOVE W, R16, R24
660     LIM H, R16, `LH $1FE6
661     LIM L, R16, `LL $1FE6
662     MOVE W, R16, R20
663     LIM H, R16, `LH $3FFC
664     LIM L, R16, `LL $3FFC
665     MOVE W, R16, R24		
667     LIM H, R16, `LH $1FE5
668     LIM L, R16, `LL $1FE5
669     MOVE W, R16, R20
670     LIM H, R16, `LH $1FF2
671     LIM L, R16, `LL $1FF2
672     MOVE W, R16, R24		
675 M_ST_END    LIM H, R16, `LH $1FE4
676     LIM L, R16, `LL $1FE4
677     MOVE W, R16, R20
678     MOVE L, R11, R16
679     ADD L, R11, R16
680     LIM H, R17, `LH TARGET_SIZE
681     LIM L, R17, `LL TARGET_SIZE
682     MOVE H, R31, R16
683     ADD W, R17, R24
685     LIM H, R16, `LH $1FE7
686     LIM L, R16, `LL $1FE7
687     MOVE W, R16, R20
688     MOVE L, R11, R16
689     LIM H, R17, `LH TARGET_DESCRIPTORS
690     LIM L, R17, `LL TARGET_DESCRIPTORS
691     MOVE H, R31, R16
692     ADD W, R17, R24	
0 @POP_MACRO:    SET_TARGET
1318     RET
1319     NOP
1324 COM_TEST    LIM H, R17, `LH $FFFC
1325     LIM L, R17, `LL $FFFC
1326     MOVE W, R17, R22
1327     LIM H, R16, $C0
1328     LIM L, R16, $07
1329     MOVE W, R16, R25
1331     RET
1332     NOP
1336 @PUSH_MACRO:    PLATFORM_STRINGS:DE2_PROGRAMMER.INC
225 PLATFORM_DESCRIPTOR    DATA 't'
226     DATA 'e'
227     DATA 'r'
228     DATA 'a'
229     DATA 's'
230     DATA 'I'
231     DATA 'C'
232     DATA ' '
233     DATA 'D'
234     DATA 'E'
235     DATA '2'
236     DATA '\0'
239 TARGET_DESCRIPTORS    DATA `LW FLASH_DESCRIPTOR
240     DATA `LW SRAM_DESCRIPTOR
241     DATA `LW SDRAM_DESCRIPTOR
244 FLASH_DESCRIPTOR    DATA 'F'
245     DATA 'l'
246     DATA 'a'
247     DATA 's'
248     DATA 'h'
249     DATA '\0'
252 SRAM_DESCRIPTOR    DATA 'S'
253     DATA 'R'
254     DATA 'A'
255     DATA 'M'
256     DATA '\0'
259 SDRAM_DESCRIPTOR    DATA 'S'
260     DATA 'D'
261     DATA 'R'
262     DATA 'A'
263     DATA 'M'
264     DATA '\0'
267 TARGET_SIZE    DATA $0000	
268     DATA $0040
269     DATA $0000	
270     DATA $0008
271     DATA $0000	
272     DATA $0080
0 @POP_MACRO:    PLATFORM_STRINGS
1338     ORG $3FFF
1339     DATA $FFFF
0 @POP_FILE:    neonfox_programmer.asm
PUSH_FILE:     neonfox_programmer.asm

PUSH_FILE:     DE2_PROGRAMMER.INC

POP_FILE:     DE2_PROGRAMMER.INC

LINE:  60

ORG:     ORG 0

INST: BRA
LABL OR LABL REF: INT_RESET
END OF LINE
INST: NOP
END OF LINE
INST: RET
END OF LINE
INST: NOP
END OF LINE
INST: RET
END OF LINE
INST: NOP
END OF LINE
INST: RET
END OF LINE
INST: NOP
END OF LINE
INST: RET
END OF LINE
INST: NOP
END OF LINE
INST: RET
END OF LINE
INST: NOP
END OF LINE
INST: RET
END OF LINE
INST: NOP
END OF LINE
INST: RET
END OF LINE
INST: NOP
END OF LINE
INST: RET
END OF LINE
INST: NOP
END OF LINE
INST: RET
END OF LINE
INST: NOP
END OF LINE
INST: RET
END OF LINE
INST: NOP
END OF LINE
INST: RET
END OF LINE
INST: NOP
END OF LINE
INST: RET
END OF LINE
INST: NOP
END OF LINE
INST: RET
END OF LINE
INST: NOP
END OF LINE
INST: RET
END OF LINE
INST: NOP
END OF LINE
INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  98

LABL OR LABL REF: INT_RESET
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R16
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R17
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R18
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R19
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R0
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R1
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R2
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R3
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R4
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R5
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R7
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R10
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R11
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R12
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R13
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R14
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R15
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R21
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R27
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R26
END OF LINE
LINE:  124

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $FFFC
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $FFFC
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  130

PUSH_MACRO:     INIT_PLATFORM
	MACRO_FILE: DE2_PROGRAMMER.INC

LINE:  276

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_INIT
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_INIT
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: 433
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: 433
END OF LINE
INST: CALL
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R0
END OF LINE
LINE:  284

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_INIT
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_INIT
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  290

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SRAM_INIT
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SRAM_INIT
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  296

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SDRAM_INIT
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SDRAM_INIT
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  302

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FE7
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FE7
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: TARGET_DESCRIPTORS
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: TARGET_DESCRIPTORS
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  309

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF0
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF0
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_SET_ADDRESS_WRITE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_SET_ADDRESS_WRITE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  316

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_SET_ADDRESS_READ
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_SET_ADDRESS_READ
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  323

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_GET_N_WORDS
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_GET_N_WORDS
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  330

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FED
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FED
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_SEND_N_WORDS
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_SEND_N_WORDS
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  337

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEC
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEC
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_ERASE_ALL_BLOCKS
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_ERASE_ALL_BLOCKS
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  344

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_UNLOCK_ALL_BLOCKS
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_UNLOCK_ALL_BLOCKS
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  351

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEA
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_LOCK_ALL_BLOCKS
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_LOCK_ALL_BLOCKS
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  358

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FE9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FE9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_NULL
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_NULL
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  365

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FE8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FE8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_LOCK_BLOCK
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_LOCK_BLOCK
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  372

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF1
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF1
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_ERASE_BLOCK
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_ERASE_BLOCK
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  379

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FE6
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FE6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FFE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FFE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  386

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FE5
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FE5
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FFA
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FFA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  393

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FE4
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FE4
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: TARGET_SIZE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: TARGET_SIZE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
POP_MACRO:     INIT_PLATFORM

LINE:  132

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $FFFC
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $FFFC
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $02
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  138

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: MAIN
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: MAIN
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: JMP
END OF LINE
INST: NOP
END OF LINE
PUSH_FILE:     neonfox_serial_gen2.inc

LINE:  38

LABL OR LABL REF: SERIAL_INIT
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFEA
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFEA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R0
REGS: R25
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFEB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFEB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: RET
END OF LINE
INST: MOVE
TGT BYTE SEL: S
REGS: R0
REGS: R25
END OF LINE
LINE:  57

LABL OR LABL REF: SERIAL_GET_BYTE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFE9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFE9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  61

LABL OR LABL REF: SGB_WAIT
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 7
END OF LINE
INST: BRNZ
LABL OR LABL REF: SGB_WAIT
END OF LINE
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 3
END OF LINE
INST: BRZ
LABL OR LABL REF: SGB_WAIT
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFE8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: RET
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R25
REGS: R11
END OF LINE
LINE:  79

LABL OR LABL REF: SERIAL_SEND_BYTE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFE9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFE9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  84

LABL OR LABL REF: SSB_WAIT
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 7
END OF LINE
INST: BRNZ
LABL OR LABL REF: SSB_WAIT
END OF LINE
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 2
END OF LINE
INST: BRZ
LABL OR LABL REF: SSB_WAIT
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFE8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: RET
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R0
REGS: R25
END OF LINE
LINE:  97

LABL OR LABL REF: SERIAL_GET_N_WORDS
INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FFF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FFF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R3
END OF LINE
LINE:  103

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R5
END OF LINE
LINE:  108

INST: TEST
TGT BYTE SEL: W
REGS: R3
END OF LINE
INST: BRNZ
LABL OR LABL REF: SGNB_LOOP
END OF LINE
INST: NOP
END OF LINE
INST: RET
END OF LINE
LINE:  115

LABL OR LABL REF: SGNB_LOOP
INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `HH
LABL OR LABL REF: SERIAL_GET_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `HL
LABL OR LABL REF: SERIAL_GET_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_GET_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_GET_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R27
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
LINE:  122

INST: CALL
END OF LINE
INST: NOP
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R11
REGS: R6
END OF LINE
LINE:  126

INST: CALL
END OF LINE
INST: NOP
END OF LINE
INST: MOVE
TGT BYTE SEL: S
REGS: R11
REGS: R11
END OF LINE
INST: MOVE
TGT BYTE SEL: H
REGS: R11
REGS: R6
END OF LINE
LINE:  132

INST: MOVE
TGT BYTE SEL: W
REGS: R5
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R6
REGS: R24
END OF LINE
LINE:  136

INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R5
REGS: R5
END OF LINE
LINE:  140

INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: SUB
TGT BYTE SEL: W
REGS: R3
REGS: R3
END OF LINE
LINE:  144

INST: BRNZ
LABL OR LABL REF: SGNB_LOOP
END OF LINE
INST: NOP
END OF LINE
LINE:  147

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  154

LABL OR LABL REF: SERIAL_SEND_N_WORDS
INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FFF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FFF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R3
END OF LINE
LINE:  160

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R5
END OF LINE
LINE:  165

INST: TEST
TGT BYTE SEL: W
REGS: R3
END OF LINE
INST: BRNZ
LABL OR LABL REF: SSNB_LOOP
END OF LINE
INST: NOP
END OF LINE
INST: RET
END OF LINE
LINE:  172

LABL OR LABL REF: SSNB_LOOP
INST: MOVE
TGT BYTE SEL: W
REGS: R5
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R6
END OF LINE
LINE:  176

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `HH
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `HL
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R27
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
LINE:  183

INST: MOVE
TGT BYTE SEL: L
REGS: R6
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  187

INST: MOVE
TGT BYTE SEL: S
REGS: R6
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  192

INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R5
REGS: R5
END OF LINE
LINE:  196

INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: SUB
TGT BYTE SEL: W
REGS: R3
REGS: R3
END OF LINE
LINE:  200

INST: BRNZ
LABL OR LABL REF: SSNB_LOOP
END OF LINE
INST: NOP
END OF LINE
LINE:  203

INST: RET
END OF LINE
INST: NOP
END OF LINE
POP_FILE:     neonfox_serial_gen2.inc

PUSH_FILE:     DE2_FLASH.INC

LINE:  33

LABL OR LABL REF: FLASH_NULL
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $E0
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: RET
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R11
END OF LINE
LINE:  42

LABL OR LABL REF: FLASH_INIT
INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $FFD8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $FFD8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R25
END OF LINE
LINE:  47

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $FFD9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $FFD9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R25
END OF LINE
LINE:  53

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $F0
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  60

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  64

LABL OR LABL REF: FI_WAIT_STATUS
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FI_WAIT_STATUS
END OF LINE
LINE:  67

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDA
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R25
END OF LINE
LINE:  72

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R25
END OF LINE
LINE:  77

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  83

LABL OR LABL REF: FLASH_SET_ADDRESS_WRITE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FFB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FFB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R4
END OF LINE
LINE:  88

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FFA
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FFA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R3
END OF LINE
LINE:  93

INST: MOVE
TGT BYTE SEL: W
REGS: R4
REGS: R17
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R3
REGS: R18
END OF LINE
LINE:  96

INST: MOVE
TGT BYTE SEL: W
REGS: R18
REGS: R16
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R18
REGS: R18
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R16
END OF LINE
INST: ADDC
TGT BYTE SEL: W
REGS: R17
REGS: R17
END OF LINE
LINE:  101

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FF9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FF9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R24
END OF LINE
LINE:  106

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FF8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FF8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R18
REGS: R24
END OF LINE
LINE:  111

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  118

LABL OR LABL REF: FLASH_SET_ADDRESS_READ
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  124

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FFB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FFB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R4
END OF LINE
LINE:  129

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FFA
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FFA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R3
END OF LINE
LINE:  134

INST: MOVE
TGT BYTE SEL: W
REGS: R4
REGS: R17
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R3
REGS: R18
END OF LINE
LINE:  137

INST: MOVE
TGT BYTE SEL: W
REGS: R18
REGS: R16
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R18
REGS: R18
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R16
END OF LINE
INST: ADDC
TGT BYTE SEL: W
REGS: R17
REGS: R17
END OF LINE
LINE:  142

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FF9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FF9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R24
END OF LINE
LINE:  147

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FF8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FF8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R18
REGS: R24
END OF LINE
LINE:  152

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDC
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDC
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R25
END OF LINE
LINE:  157

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDD
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDD
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R18
REGS: R25
END OF LINE
LINE:  162

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  166

LABL OR LABL REF: FSAR_WAIT
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 1
END OF LINE
INST: BRZ
LABL OR LABL REF: FSAR_WAIT
END OF LINE
INST: NOP
END OF LINE
LINE:  170

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  176

LABL OR LABL REF: FLASH_SET_BYTE_ADDR_WRITE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FF9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FF9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R17
END OF LINE
LINE:  181

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FF8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FF8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R18
END OF LINE
LINE:  186

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R25
END OF LINE
LINE:  191

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R18
REGS: R25
END OF LINE
LINE:  196

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  203

LABL OR LABL REF: FLASH_SET_BYTE_ADDR_READ
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  209

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FF9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FF9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R17
END OF LINE
LINE:  214

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FF8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FF8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R18
END OF LINE
LINE:  219

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDC
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDC
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R25
END OF LINE
LINE:  224

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDD
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDD
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R18
REGS: R25
END OF LINE
LINE:  229

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  233

LABL OR LABL REF: FSBAR_WAIT
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 1
END OF LINE
INST: BRZ
LABL OR LABL REF: FSBAR_WAIT
END OF LINE
INST: NOP
END OF LINE
LINE:  237

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  243

LABL OR LABL REF: FLASH_GET_WORD
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R25
END OF LINE
LINE:  248

LABL OR LABL REF: FGW_WAIT_L
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 1
END OF LINE
INST: BRZ
LABL OR LABL REF: FGW_WAIT_L
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R25
REGS: R11
END OF LINE
LINE:  254

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R25
END OF LINE
LINE:  259

LABL OR LABL REF: FGW_WAIT_H
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 1
END OF LINE
INST: BRZ
LABL OR LABL REF: FGW_WAIT_H
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: S
REGS: R25
REGS: R16
END OF LINE
INST: RET
END OF LINE
INST: MOVE
TGT BYTE SEL: H
REGS: R16
REGS: R11
END OF LINE
LINE:  276

LABL OR LABL REF: FLASH_SEND_BYTE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_SET_BYTE_ADDR_READ
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_SET_BYTE_ADDR_READ
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  288

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  295

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $0A
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $AA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  302

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $AA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  309

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  313

LABL OR LABL REF: FSW_WAIT_FIRST
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FSW_WAIT_FIRST
END OF LINE
LINE:  322

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  329

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $05
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $55
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  336

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $55
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  343

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  347

LABL OR LABL REF: FSW_WAIT_SECOND
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FSW_WAIT_SECOND
END OF LINE
LINE:  356

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  363

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $0A
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $AA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  370

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $A0
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  377

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  381

LABL OR LABL REF: FSW_WAIT_THIRD
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FSW_WAIT_THIRD
END OF LINE
LINE:  390

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_SET_BYTE_ADDR_WRITE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_SET_BYTE_ADDR_WRITE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  402

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R0
REGS: R25
END OF LINE
LINE:  407

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  411

LABL OR LABL REF: FSW_WAIT_DATA
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FSW_WAIT_DATA
END OF LINE
LINE:  420

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R25
END OF LINE
LINE:  425

LABL OR LABL REF: FSW_WAIT_PREV
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 1
END OF LINE
INST: BRZ
LABL OR LABL REF: FSW_WAIT_PREV
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R25
REGS: R18
END OF LINE
LINE:  439

LABL OR LABL REF: FSW_WAIT_BUSY
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R25
END OF LINE
LINE:  444

LABL OR LABL REF: FSW_WAIT_STATUS
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 1
END OF LINE
INST: BRZ
LABL OR LABL REF: FSW_WAIT_STATUS
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R25
REGS: R16
END OF LINE
INST: XOR
TGT BYTE SEL: W
REGS: R18
REGS: R17
END OF LINE
INST: BITT
TGT BYTE SEL: W
REGS: R17
LITN: 6
END OF LINE
INST: BRZ
LABL OR LABL REF: FSW_DONE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R18
END OF LINE
LINE:  455

INST: BITT
TGT BYTE SEL: W
REGS: R16
LITN: 5
END OF LINE
INST: BRZ
LABL OR LABL REF: FSW_WAIT_BUSY
END OF LINE
LINE:  458

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R25
END OF LINE
LINE:  463

LABL OR LABL REF: FSW_TOGGLE_PREV
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 1
END OF LINE
INST: BRZ
LABL OR LABL REF: FSW_TOGGLE_PREV
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R25
REGS: R18
END OF LINE
LINE:  470

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R25
END OF LINE
LINE:  475

LABL OR LABL REF: FSW_TOGGLE_NEW
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 1
END OF LINE
INST: BRZ
LABL OR LABL REF: FSW_TOGGLE_NEW
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R25
REGS: R16
END OF LINE
INST: XOR
TGT BYTE SEL: W
REGS: R18
REGS: R17
END OF LINE
INST: BITT
TGT BYTE SEL: W
REGS: R17
LITN: 6
END OF LINE
INST: BRZ
LABL OR LABL REF: FSW_DONE
END OF LINE
LINE:  487

LABL OR LABL REF: FSW_ERROR
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $F0
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  494

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  498

LABL OR LABL REF: FSW_WAIT_RESET
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FSW_WAIT_RESET
END OF LINE
LINE:  501

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FF9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FF9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R17
END OF LINE
LINE:  506

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FF8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FF8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R18
END OF LINE
LINE:  511

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFFB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFFB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R25
END OF LINE
LINE:  516

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFFD
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFFD
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: RET
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R18
REGS: R25
END OF LINE
LINE:  529

LABL OR LABL REF: FSW_DONE
INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  535

LABL OR LABL REF: FLASH_ERASE_BLOCK
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_SET_BYTE_ADDR_READ
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_SET_BYTE_ADDR_READ
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  541

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  548

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $0A
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $AA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  555

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $AA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  562

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  566

LABL OR LABL REF: FEB_WAIT_FIRST
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FEB_WAIT_FIRST
END OF LINE
LINE:  569

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  576

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $05
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $55
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  583

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $55
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  590

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  594

LABL OR LABL REF: FEB_WAIT_SECOND
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FEB_WAIT_SECOND
END OF LINE
LINE:  597

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  604

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $0A
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $AA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  611

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $80
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  618

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  622

LABL OR LABL REF: FEB_WAIT_THIRD
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FEB_WAIT_THIRD
END OF LINE
LINE:  625

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  632

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $0A
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $AA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  639

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $AA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  646

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  650

LABL OR LABL REF: FEB_WAIT_FOURTH
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FEB_WAIT_FOURTH
END OF LINE
LINE:  653

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  660

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $05
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $55
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  667

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $55
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  674

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  678

LABL OR LABL REF: FEB_WAIT_FIFTH
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FEB_WAIT_FIFTH
END OF LINE
LINE:  681

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_SET_BYTE_ADDR_WRITE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_SET_BYTE_ADDR_WRITE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  687

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $30
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R16
REGS: R25
END OF LINE
LINE:  693

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  697

LABL OR LABL REF: FEB_WAIT_DATA
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FEB_WAIT_DATA
END OF LINE
LINE:  700

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R25
END OF LINE
LINE:  705

LABL OR LABL REF: FEB_WAIT_PREV
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 1
END OF LINE
INST: BRZ
LABL OR LABL REF: FEB_WAIT_PREV
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R25
REGS: R18
END OF LINE
LINE:  713

LABL OR LABL REF: FEB_WAIT_BUSY
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R25
END OF LINE
LINE:  718

LABL OR LABL REF: FEB_WAIT_STATUS
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 1
END OF LINE
INST: BRZ
LABL OR LABL REF: FEB_WAIT_STATUS
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R25
REGS: R16
END OF LINE
INST: XOR
TGT BYTE SEL: W
REGS: R18
REGS: R17
END OF LINE
INST: BITT
TGT BYTE SEL: W
REGS: R17
LITN: 6
END OF LINE
INST: BRNZ
LABL OR LABL REF: FEB_WAIT_BUSY
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R18
END OF LINE
LINE:  729

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  735

LABL OR LABL REF: FLASH_LOCK_BLOCK
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_SET_BYTE_ADDR_READ
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_SET_BYTE_ADDR_READ
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  741

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  748

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $0A
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $AA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  755

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $AA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  762

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  766

LABL OR LABL REF: FLB_WAIT_ENTRY_FIRST
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FLB_WAIT_ENTRY_FIRST
END OF LINE
LINE:  769

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  776

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $05
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $55
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  783

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $55
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  790

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  794

LABL OR LABL REF: FLB_WAIT_ENTRY_SECOND
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FLB_WAIT_ENTRY_SECOND
END OF LINE
LINE:  797

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  804

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $0A
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $AA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  811

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $C0
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  818

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  822

LABL OR LABL REF: FLB_WAIT_ENTRY_THIRD
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FLB_WAIT_ENTRY_THIRD
END OF LINE
LINE:  825

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $A0
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  832

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  836

LABL OR LABL REF: FLB_WAIT_PROGRAM_FIRST
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FLB_WAIT_PROGRAM_FIRST
END OF LINE
LINE:  839

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_SET_BYTE_ADDR_WRITE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_SET_BYTE_ADDR_WRITE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  845

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R16
REGS: R25
END OF LINE
LINE:  851

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  855

LABL OR LABL REF: FLB_WAIT_PROGRAM_SECOND
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FLB_WAIT_PROGRAM_SECOND
END OF LINE
LINE:  858

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R25
END OF LINE
LINE:  863

LABL OR LABL REF: FLB_WAIT_PREV
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 1
END OF LINE
INST: BRZ
LABL OR LABL REF: FLB_WAIT_PREV
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R25
REGS: R18
END OF LINE
LINE:  871

LABL OR LABL REF: FLB_WAIT_BUSY
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R25
END OF LINE
LINE:  876

LABL OR LABL REF: FLB_WAIT_STATUS
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 1
END OF LINE
INST: BRZ
LABL OR LABL REF: FLB_WAIT_STATUS
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R25
REGS: R16
END OF LINE
INST: XOR
TGT BYTE SEL: W
REGS: R18
REGS: R17
END OF LINE
INST: BITT
TGT BYTE SEL: W
REGS: R17
LITN: 6
END OF LINE
INST: BRNZ
LABL OR LABL REF: FLB_WAIT_BUSY
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R18
END OF LINE
LINE:  888

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $90
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  895

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  899

LABL OR LABL REF: FLB_WAIT_EXIT_FIRST
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FLB_WAIT_EXIT_FIRST
END OF LINE
LINE:  902

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  909

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  913

LABL OR LABL REF: FLB_WAIT_EXIT_SECOND
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FLB_WAIT_EXIT_SECOND
END OF LINE
INST: NOP
END OF LINE
LINE:  917

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  924

LABL OR LABL REF: FLASH_GET_N_WORDS
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  931

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FFE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FFE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R3
END OF LINE
LINE:  937

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R5
END OF LINE
LINE:  942

INST: TEST
TGT BYTE SEL: W
REGS: R3
END OF LINE
INST: BRNZ
LABL OR LABL REF: FGNB_LOOP
END OF LINE
INST: NOP
END OF LINE
INST: RET
END OF LINE
LINE:  949

LABL OR LABL REF: FGNB_LOOP
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_GET_WORD
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_GET_WORD
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  956

INST: MOVE
TGT BYTE SEL: W
REGS: R5
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R11
REGS: R24
END OF LINE
LINE:  960

INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R5
REGS: R5
END OF LINE
LINE:  964

INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: SUB
TGT BYTE SEL: W
REGS: R3
REGS: R3
END OF LINE
LINE:  968

INST: BRNZ
LABL OR LABL REF: FGNB_LOOP
END OF LINE
INST: NOP
END OF LINE
LINE:  971

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  978

LABL OR LABL REF: FLASH_SEND_N_WORDS
INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FFE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FFE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R3
END OF LINE
LINE:  984

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R5
END OF LINE
LINE:  989

INST: TEST
TGT BYTE SEL: W
REGS: R3
END OF LINE
INST: BRNZ
LABL OR LABL REF: FSNB_LOOP
END OF LINE
INST: NOP
END OF LINE
INST: RET
END OF LINE
LINE:  996

LABL OR LABL REF: FSNB_LOOP
INST: MOVE
TGT BYTE SEL: W
REGS: R5
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R6
END OF LINE
LINE:  1000

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_SEND_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_SEND_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R6
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1008

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FF9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FF9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R17
END OF LINE
LINE:  1013

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FF8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FF8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R18
END OF LINE
LINE:  1018

INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R18
REGS: R18
END OF LINE
INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $00
END OF LINE
INST: ADDC
TGT BYTE SEL: W
REGS: R17
REGS: R17
END OF LINE
LINE:  1023

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FF9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FF9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R24
END OF LINE
LINE:  1028

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FF8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FF8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R18
REGS: R24
END OF LINE
LINE:  1034

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_SEND_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_SEND_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: MOVE
TGT BYTE SEL: S
REGS: R6
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1042

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FF9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FF9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R17
END OF LINE
LINE:  1047

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FF8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FF8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R18
END OF LINE
LINE:  1052

INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R18
REGS: R18
END OF LINE
INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $00
END OF LINE
INST: ADDC
TGT BYTE SEL: W
REGS: R17
REGS: R17
END OF LINE
LINE:  1066

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FF9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FF9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R24
END OF LINE
LINE:  1071

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FF8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FF8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R18
REGS: R24
END OF LINE
LINE:  1077

INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R5
REGS: R5
END OF LINE
LINE:  1081

INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: SUB
TGT BYTE SEL: W
REGS: R3
REGS: R3
END OF LINE
LINE:  1085

INST: BRNZ
LABL OR LABL REF: FSNB_LOOP
END OF LINE
INST: NOP
END OF LINE
LINE:  1088

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  1094

LABL OR LABL REF: FLASH_UNLOCK_ALL_BLOCKS
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  1101

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $0A
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $AA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  1108

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $AA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  1115

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  1119

LABL OR LABL REF: FUB_WAIT_ENTRY_FIRST
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FUB_WAIT_ENTRY_FIRST
END OF LINE
LINE:  1122

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  1129

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $05
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $55
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  1136

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $55
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  1143

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  1147

LABL OR LABL REF: FUB_WAIT_ENTRY_SECOND
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FUB_WAIT_ENTRY_SECOND
END OF LINE
LINE:  1150

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  1157

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $0A
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $AA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  1164

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $C0
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  1171

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  1175

LABL OR LABL REF: FUB_WAIT_ENTRY_THIRD
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FUB_WAIT_ENTRY_THIRD
END OF LINE
LINE:  1178

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $80
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  1185

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  1189

LABL OR LABL REF: FUB_WAIT_ERASE_FIRST
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FUB_WAIT_ERASE_FIRST
END OF LINE
LINE:  1192

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  1199

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  1206

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $30
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R16
REGS: R25
END OF LINE
LINE:  1212

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  1216

LABL OR LABL REF: FUB_WAIT_ERASE_SECOND
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FUB_WAIT_ERASE_SECOND
END OF LINE
LINE:  1219

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R25
END OF LINE
LINE:  1224

LABL OR LABL REF: FUB_WAIT_PREV
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 1
END OF LINE
INST: BRZ
LABL OR LABL REF: FUB_WAIT_PREV
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R25
REGS: R18
END OF LINE
LINE:  1232

LABL OR LABL REF: FUB_WAIT_BUSY
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R25
END OF LINE
LINE:  1237

LABL OR LABL REF: FUB_WAIT_STATUS
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 1
END OF LINE
INST: BRZ
LABL OR LABL REF: FUB_WAIT_STATUS
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R25
REGS: R16
END OF LINE
INST: XOR
TGT BYTE SEL: W
REGS: R18
REGS: R17
END OF LINE
INST: BITT
TGT BYTE SEL: W
REGS: R17
LITN: 6
END OF LINE
INST: BRNZ
LABL OR LABL REF: FUB_WAIT_BUSY
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R18
END OF LINE
LINE:  1249

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $90
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  1256

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  1260

LABL OR LABL REF: FUB_WAIT_EXIT_FIRST
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FUB_WAIT_EXIT_FIRST
END OF LINE
LINE:  1263

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $00
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  1270

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFDF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFDF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  1274

LABL OR LABL REF: FUB_WAIT_EXIT_SECOND
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: FUB_WAIT_EXIT_SECOND
END OF LINE
INST: NOP
END OF LINE
LINE:  1278

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  1285

LABL OR LABL REF: FLASH_LOCK_ALL_BLOCKS
INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FF9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FF9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R24
END OF LINE
LINE:  1290

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FF8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FF8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R24
END OF LINE
LINE:  1296

LABL OR LABL REF: FLAB_LOOP
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_LOCK_BLOCK
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_LOCK_BLOCK
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1303

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FF9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FF9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R3
END OF LINE
LINE:  1308

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FF8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FF8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R4
END OF LINE
LINE:  1313

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFFC
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFFC
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R3
REGS: R25
END OF LINE
LINE:  1320

INST: BRNZ
LABL OR LABL REF: FLAB_BIG
END OF LINE
LINE:  1323

INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $20
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R4
REGS: R4
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R16
END OF LINE
INST: ADDC
TGT BYTE SEL: W
REGS: R3
REGS: R3
END OF LINE
INST: BRA
LABL OR LABL REF: FLAB_UPDATE
END OF LINE
LINE:  1331

LABL OR LABL REF: FLAB_BIG
INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R3
REGS: R3
END OF LINE
LINE:  1335

LABL OR LABL REF: FLAB_UPDATE
INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FF9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FF9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R3
REGS: R24
END OF LINE
LINE:  1340

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FF8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FF8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R4
REGS: R24
END OF LINE
LINE:  1345

INST: BITT
TGT BYTE SEL: W
REGS: R3
LITN: 6
END OF LINE
INST: BRZ
LABL OR LABL REF: FLAB_LOOP
END OF LINE
INST: NOP
END OF LINE
LINE:  1349

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  1356

LABL OR LABL REF: FLASH_ERASE_ALL_BLOCKS
INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FF9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FF9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R24
END OF LINE
LINE:  1361

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FF8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FF8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R24
END OF LINE
LINE:  1367

LABL OR LABL REF: FEAB_LOOP
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_ERASE_BLOCK
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_ERASE_BLOCK
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1374

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FF9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FF9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R3
END OF LINE
LINE:  1379

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FF8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FF8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R4
END OF LINE
LINE:  1384

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFFC
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFFC
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R3
REGS: R25
END OF LINE
LINE:  1391

INST: BRNZ
LABL OR LABL REF: FEAB_BIG
END OF LINE
LINE:  1394

INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $20
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R4
REGS: R4
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R16
END OF LINE
INST: ADDC
TGT BYTE SEL: W
REGS: R3
REGS: R3
END OF LINE
INST: BRA
LABL OR LABL REF: FEAB_UPDATE
END OF LINE
LINE:  1402

LABL OR LABL REF: FEAB_BIG
INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R3
REGS: R3
END OF LINE
LINE:  1406

LABL OR LABL REF: FEAB_UPDATE
INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FF9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FF9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R3
REGS: R24
END OF LINE
LINE:  1411

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FF8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FF8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R4
REGS: R24
END OF LINE
LINE:  1416

INST: BITT
TGT BYTE SEL: W
REGS: R3
LITN: 6
END OF LINE
INST: BRZ
LABL OR LABL REF: FEAB_LOOP
END OF LINE
INST: NOP
END OF LINE
LINE:  1420

INST: RET
END OF LINE
INST: NOP
END OF LINE
POP_FILE:     DE2_FLASH.INC

PUSH_FILE:     DE2_SRAM.INC

LINE:  33

LABL OR LABL REF: SRAM_NULL
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $E0
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: RET
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R11
END OF LINE
LINE:  42

LABL OR LABL REF: SRAM_INIT
INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  48

LABL OR LABL REF: SRAM_SET_ADDRESS_WRITE
INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FF5
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FF5
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R4
END OF LINE
LINE:  53

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FF4
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FF4
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R3
END OF LINE
LINE:  58

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $FFE0
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $FFE0
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R4
REGS: R25
END OF LINE
LINE:  63

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $FFE1
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $FFE1
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R3
REGS: R25
END OF LINE
LINE:  68

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  75

LABL OR LABL REF: SRAM_SET_ADDRESS_READ
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFE6
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFE6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  81

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FF5
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FF5
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R4
END OF LINE
LINE:  86

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FF4
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FF4
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R3
END OF LINE
LINE:  91

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $FFE4
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $FFE4
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R4
REGS: R25
END OF LINE
LINE:  96

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $FFE5
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $FFE5
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R3
REGS: R25
END OF LINE
LINE:  101

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFE7
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFE7
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  105

LABL OR LABL REF: SSAR_WAIT
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 1
END OF LINE
INST: BRZ
LABL OR LABL REF: SSAR_WAIT
END OF LINE
INST: NOP
END OF LINE
LINE:  109

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  115

LABL OR LABL REF: SRAM_GET_WORD
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFE7
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFE7
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R25
END OF LINE
LINE:  120

LABL OR LABL REF: SGW_WAIT
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 1
END OF LINE
INST: BRZ
LABL OR LABL REF: SGW_WAIT
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFE3
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: RET
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R25
REGS: R11
END OF LINE
LINE:  130

LABL OR LABL REF: SRAM_SEND_WORD
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFE3
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFE3
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R0
REGS: R25
END OF LINE
LINE:  135

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFE7
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFE7
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  139

LABL OR LABL REF: SWW_WAIT_DATA
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: SWW_WAIT_DATA
END OF LINE
INST: NOP
END OF LINE
LINE:  143

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  150

LABL OR LABL REF: SRAM_GET_N_WORDS
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFE6
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFE6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  157

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FFD
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FFD
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R3
END OF LINE
LINE:  163

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R5
END OF LINE
LINE:  168

INST: TEST
TGT BYTE SEL: W
REGS: R3
END OF LINE
INST: BRNZ
LABL OR LABL REF: SRGNB_LOOP
END OF LINE
INST: NOP
END OF LINE
INST: RET
END OF LINE
LINE:  175

LABL OR LABL REF: SRGNB_LOOP
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SRAM_GET_WORD
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SRAM_GET_WORD
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  182

INST: MOVE
TGT BYTE SEL: W
REGS: R5
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R11
REGS: R24
END OF LINE
LINE:  186

INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R5
REGS: R5
END OF LINE
LINE:  190

INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: SUB
TGT BYTE SEL: W
REGS: R3
REGS: R3
END OF LINE
LINE:  194

INST: BRNZ
LABL OR LABL REF: SRGNB_LOOP
END OF LINE
INST: NOP
END OF LINE
LINE:  197

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  204

LABL OR LABL REF: SRAM_SEND_N_WORDS
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFE2
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFE2
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  211

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FFD
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FFD
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R3
END OF LINE
LINE:  217

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R5
END OF LINE
LINE:  222

INST: TEST
TGT BYTE SEL: W
REGS: R3
END OF LINE
INST: BRNZ
LABL OR LABL REF: SRSNB_LOOP
END OF LINE
INST: NOP
END OF LINE
INST: RET
END OF LINE
LINE:  229

LABL OR LABL REF: SRSNB_LOOP
INST: MOVE
TGT BYTE SEL: W
REGS: R5
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R6
END OF LINE
LINE:  233

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SRAM_SEND_WORD
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SRAM_SEND_WORD
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
LINE:  237

INST: MOVE
TGT BYTE SEL: W
REGS: R6
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  242

INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R5
REGS: R5
END OF LINE
LINE:  246

INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: SUB
TGT BYTE SEL: W
REGS: R3
REGS: R3
END OF LINE
LINE:  250

INST: BRNZ
LABL OR LABL REF: SRSNB_LOOP
END OF LINE
INST: NOP
END OF LINE
LINE:  253

INST: RET
END OF LINE
INST: NOP
END OF LINE
POP_FILE:     DE2_SRAM.INC

PUSH_FILE:     DE2_SDRAM.INC

LINE:  47

LABL OR LABL REF: SDRAM_NULL
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $E0
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: RET
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R11
END OF LINE
LINE:  55

LABL OR LABL REF: SDRAM_INIT
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD2
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD2
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R25
END OF LINE
LINE:  60

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD6
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R25
END OF LINE
LINE:  66

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $FFD0
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $FFD0
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R25
END OF LINE
LINE:  71

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $FFD1
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $FFD1
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R22
END OF LINE
INST: RET
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R25
END OF LINE
LINE:  81

LABL OR LABL REF: SDRAM_SET_ADDRESS_WRITE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD2
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD2
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $04
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  87

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF3
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF3
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R17
END OF LINE
LINE:  92

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF2
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF2
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R18
END OF LINE
LINE:  97

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD0
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD0
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R25
END OF LINE
LINE:  102

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD1
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD1
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: RET
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R18
REGS: R25
END OF LINE
LINE:  112

LABL OR LABL REF: SDRAM_SET_ADDRESS_READ
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD6
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $04
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  118

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF3
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF3
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R17
END OF LINE
LINE:  123

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF2
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF2
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R18
END OF LINE
LINE:  128

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD4
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD4
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R25
END OF LINE
LINE:  133

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD5
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD5
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: RET
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R18
REGS: R25
END OF LINE
LINE:  142

LABL OR LABL REF: SDRAM_GET_WORD
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD7
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD7
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  146

LABL OR LABL REF: SDGW_WAIT
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 1
END OF LINE
INST: BRZ
LABL OR LABL REF: SDGW_WAIT
END OF LINE
LINE:  149

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD3
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD3
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R25
REGS: R11
END OF LINE
LINE:  154

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD7
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD7
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: RET
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R25
END OF LINE
LINE:  163

LABL OR LABL REF: SDRAM_SEND_WORD
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD7
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD7
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
LINE:  167

LABL OR LABL REF: SDSW_WAIT
INST: BITT
TGT BYTE SEL: W
REGS: R25
LITN: 0
END OF LINE
INST: BRZ
LABL OR LABL REF: SDSW_WAIT
END OF LINE
LINE:  170

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD3
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD3
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: RET
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R0
REGS: R25
END OF LINE
LINE:  180

LABL OR LABL REF: SDRAM_GET_N_WORDS
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD6
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $04
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  187

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FFC
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FFC
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R3
END OF LINE
LINE:  193

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R5
END OF LINE
LINE:  198

INST: TEST
TGT BYTE SEL: W
REGS: R3
END OF LINE
INST: BRNZ
LABL OR LABL REF: SDGNW_LOOP
END OF LINE
INST: NOP
END OF LINE
INST: RET
END OF LINE
LINE:  205

LABL OR LABL REF: SDGNW_LOOP
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SDRAM_GET_WORD
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SDRAM_GET_WORD
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  212

INST: MOVE
TGT BYTE SEL: W
REGS: R5
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R11
REGS: R24
END OF LINE
LINE:  216

INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R5
REGS: R5
END OF LINE
LINE:  220

INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: SUB
TGT BYTE SEL: W
REGS: R3
REGS: R3
END OF LINE
LINE:  224

INST: BRNZ
LABL OR LABL REF: SDGNW_LOOP
END OF LINE
INST: NOP
END OF LINE
LINE:  227

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  234

LABL OR LABL REF: SDRAM_SEND_N_WORDS
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $FFD2
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $FFD2
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $04
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  241

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FFC
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FFC
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R3
END OF LINE
LINE:  247

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R5
END OF LINE
LINE:  252

INST: TEST
TGT BYTE SEL: W
REGS: R3
END OF LINE
INST: BRNZ
LABL OR LABL REF: SDSNW_LOOP
END OF LINE
INST: NOP
END OF LINE
INST: RET
END OF LINE
LINE:  259

LABL OR LABL REF: SDSNW_LOOP
INST: MOVE
TGT BYTE SEL: W
REGS: R5
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R0
END OF LINE
LINE:  263

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SDRAM_SEND_WORD
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SDRAM_SEND_WORD
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  270

INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R5
REGS: R5
END OF LINE
LINE:  274

INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: SUB
TGT BYTE SEL: W
REGS: R3
REGS: R3
END OF LINE
LINE:  278

INST: BRNZ
LABL OR LABL REF: SDSNW_LOOP
END OF LINE
INST: NOP
END OF LINE
LINE:  281

INST: RET
END OF LINE
INST: NOP
END OF LINE
POP_FILE:     DE2_SDRAM.INC

LINE:  169

LABL OR LABL REF: MAIN
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_GET_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_GET_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  176

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $DE
END OF LINE
INST: XOR
TGT BYTE SEL: L
REGS: R11
REGS: R11
END OF LINE
INST: BRNZ
LABL OR LABL REF: MAIN
END OF LINE
INST: NOP
END OF LINE
LINE:  182

LABL OR LABL REF: COM_PING
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  186

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $AD
END OF LINE
INST: XOR
TGT BYTE SEL: L
REGS: R11
REGS: R11
END OF LINE
INST: BRNZ
LABL OR LABL REF: MAIN
END OF LINE
INST: NOP
END OF LINE
LINE:  191

INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  195

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $BE
END OF LINE
INST: XOR
TGT BYTE SEL: L
REGS: R11
REGS: R11
END OF LINE
INST: BRNZ
LABL OR LABL REF: MAIN
END OF LINE
INST: NOP
END OF LINE
LINE:  200

INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  204

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $EF
END OF LINE
INST: XOR
TGT BYTE SEL: L
REGS: R11
REGS: R11
END OF LINE
INST: BRNZ
LABL OR LABL REF: MAIN
END OF LINE
INST: NOP
END OF LINE
LINE:  210

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
LINE:  214

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $55
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R16
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  219

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $AA
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R16
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  224

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $F0
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R16
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  229

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $0F
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R16
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  235

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FE4
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FE4
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R20
END OF LINE
LINE:  240

INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R3
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R20
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R4
END OF LINE
LINE:  245

INST: MOVE
TGT BYTE SEL: S
REGS: R4
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  249

INST: MOVE
TGT BYTE SEL: L
REGS: R4
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  253

INST: MOVE
TGT BYTE SEL: S
REGS: R3
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  257

INST: MOVE
TGT BYTE SEL: L
REGS: R3
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  261

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $FFFC
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $FFFC
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $BE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $EF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  270

LABL OR LABL REF: M_COMMAND
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_GET_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_GET_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  276

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $DE
END OF LINE
INST: XOR
TGT BYTE SEL: L
REGS: R11
REGS: R31
END OF LINE
INST: BRZ
LABL OR LABL REF: COM_PING
END OF LINE
INST: NOP
END OF LINE
LINE:  282

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $01
END OF LINE
INST: XOR
TGT BYTE SEL: L
REGS: R11
REGS: R31
END OF LINE
INST: BRNZ
LABL OR LABL REF: M_NOT_READ
END OF LINE
INST: NOP
END OF LINE
LINE:  287

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: COM_READ
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: COM_READ
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  293

INST: BRA
LABL OR LABL REF: M_COMMAND
END OF LINE
INST: NOP
END OF LINE
LINE:  297

LABL OR LABL REF: M_NOT_READ
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $02
END OF LINE
INST: XOR
TGT BYTE SEL: L
REGS: R11
REGS: R31
END OF LINE
INST: BRNZ
LABL OR LABL REF: M_NOT_WRITE
END OF LINE
INST: NOP
END OF LINE
LINE:  302

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: COM_WRITE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: COM_WRITE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  308

INST: BRA
LABL OR LABL REF: M_COMMAND
END OF LINE
INST: NOP
END OF LINE
LINE:  312

LABL OR LABL REF: M_NOT_WRITE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $04
END OF LINE
INST: XOR
TGT BYTE SEL: L
REGS: R11
REGS: R31
END OF LINE
INST: BRNZ
LABL OR LABL REF: M_NOT_UNLOCK_ALL
END OF LINE
INST: NOP
END OF LINE
LINE:  317

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: COM_UNLOCK_ALL
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: COM_UNLOCK_ALL
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  323

INST: BRA
LABL OR LABL REF: M_COMMAND
END OF LINE
INST: NOP
END OF LINE
LINE:  327

LABL OR LABL REF: M_NOT_UNLOCK_ALL
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $05
END OF LINE
INST: XOR
TGT BYTE SEL: L
REGS: R11
REGS: R31
END OF LINE
INST: BRNZ
LABL OR LABL REF: M_NOT_LOCK_ALL
END OF LINE
INST: NOP
END OF LINE
LINE:  332

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: COM_LOCK_ALL
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: COM_LOCK_ALL
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  338

INST: BRA
LABL OR LABL REF: M_COMMAND
END OF LINE
INST: NOP
END OF LINE
LINE:  342

LABL OR LABL REF: M_NOT_LOCK_ALL
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $06
END OF LINE
INST: XOR
TGT BYTE SEL: L
REGS: R11
REGS: R31
END OF LINE
INST: BRNZ
LABL OR LABL REF: M_NOT_GET_STATUS
END OF LINE
INST: NOP
END OF LINE
LINE:  347

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: COM_GET_STATUS
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: COM_GET_STATUS
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  353

INST: BRA
LABL OR LABL REF: M_COMMAND
END OF LINE
INST: NOP
END OF LINE
LINE:  357

LABL OR LABL REF: M_NOT_GET_STATUS
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $07
END OF LINE
INST: XOR
TGT BYTE SEL: L
REGS: R11
REGS: R31
END OF LINE
INST: BRNZ
LABL OR LABL REF: M_NOT_ERASE_ALL
END OF LINE
INST: NOP
END OF LINE
LINE:  362

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: COM_ERASE_ALL
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: COM_ERASE_ALL
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  368

INST: BRA
LABL OR LABL REF: M_COMMAND
END OF LINE
INST: NOP
END OF LINE
LINE:  372

LABL OR LABL REF: M_NOT_ERASE_ALL
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $08
END OF LINE
INST: XOR
TGT BYTE SEL: L
REGS: R11
REGS: R31
END OF LINE
INST: BRNZ
LABL OR LABL REF: M_NOT_LOCK_BLOCK
END OF LINE
INST: NOP
END OF LINE
LINE:  377

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: COM_LOCK_BLOCK
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: COM_LOCK_BLOCK
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  383

INST: BRA
LABL OR LABL REF: M_COMMAND
END OF LINE
INST: NOP
END OF LINE
LINE:  387

LABL OR LABL REF: M_NOT_LOCK_BLOCK
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $09
END OF LINE
INST: XOR
TGT BYTE SEL: L
REGS: R11
REGS: R31
END OF LINE
INST: BRNZ
LABL OR LABL REF: M_NOT_ERASE_BLOCK
END OF LINE
INST: NOP
END OF LINE
LINE:  392

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: COM_ERASE_BLOCK
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: COM_ERASE_BLOCK
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  398

INST: BRA
LABL OR LABL REF: M_COMMAND
END OF LINE
INST: NOP
END OF LINE
LINE:  402

LABL OR LABL REF: M_NOT_ERASE_BLOCK
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $0A
END OF LINE
INST: XOR
TGT BYTE SEL: L
REGS: R11
REGS: R31
END OF LINE
INST: BRNZ
LABL OR LABL REF: M_NOT_SET_ADDRESS
END OF LINE
INST: NOP
END OF LINE
LINE:  407

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: COM_SET_ADDRESS
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: COM_SET_ADDRESS
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  413

INST: BRA
LABL OR LABL REF: M_COMMAND
END OF LINE
INST: NOP
END OF LINE
LINE:  417

LABL OR LABL REF: M_NOT_SET_ADDRESS
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $0B
END OF LINE
INST: XOR
TGT BYTE SEL: L
REGS: R11
REGS: R31
END OF LINE
INST: BRNZ
LABL OR LABL REF: M_NOT_GET_PLATFORM_DESCRIPTOR
END OF LINE
INST: NOP
END OF LINE
LINE:  422

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: COM_GET_PLATFORM_DESCRIPTOR
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: COM_GET_PLATFORM_DESCRIPTOR
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  428

INST: BRA
LABL OR LABL REF: M_COMMAND
END OF LINE
INST: NOP
END OF LINE
LINE:  432

LABL OR LABL REF: M_NOT_GET_PLATFORM_DESCRIPTOR
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $0C
END OF LINE
INST: XOR
TGT BYTE SEL: L
REGS: R11
REGS: R31
END OF LINE
INST: BRNZ
LABL OR LABL REF: M_NOT_GET_TARGET_DESCRIPTOR
END OF LINE
INST: NOP
END OF LINE
LINE:  437

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: COM_GET_TARGET_DESCRIPTOR
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: COM_GET_TARGET_DESCRIPTOR
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  443

INST: BRA
LABL OR LABL REF: M_COMMAND
END OF LINE
INST: NOP
END OF LINE
LINE:  447

LABL OR LABL REF: M_NOT_GET_TARGET_DESCRIPTOR
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $0D
END OF LINE
INST: XOR
TGT BYTE SEL: L
REGS: R11
REGS: R31
END OF LINE
INST: BRNZ
LABL OR LABL REF: M_NOT_GET_NUM_TARGETS
END OF LINE
INST: NOP
END OF LINE
LINE:  452

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: COM_GET_NUM_TARGETS
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: COM_GET_NUM_TARGETS
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  458

INST: BRA
LABL OR LABL REF: M_COMMAND
END OF LINE
INST: NOP
END OF LINE
LINE:  462

LABL OR LABL REF: M_NOT_GET_NUM_TARGETS
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $0E
END OF LINE
INST: XOR
TGT BYTE SEL: L
REGS: R11
REGS: R31
END OF LINE
INST: BRNZ
LABL OR LABL REF: M_NOT_SET_TARGET
END OF LINE
INST: NOP
END OF LINE
LINE:  467

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: COM_SET_TARGET
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: COM_SET_TARGET
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  473

INST: BRA
LABL OR LABL REF: M_COMMAND
END OF LINE
INST: NOP
END OF LINE
LINE:  477

LABL OR LABL REF: M_NOT_SET_TARGET
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $0F
END OF LINE
INST: XOR
TGT BYTE SEL: L
REGS: R11
REGS: R31
END OF LINE
INST: BRNZ
LABL OR LABL REF: M_NOT_TEST
END OF LINE
INST: NOP
END OF LINE
LINE:  482

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: COM_TEST
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: COM_TEST
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  488

INST: BRA
LABL OR LABL REF: M_COMMAND
END OF LINE
INST: NOP
END OF LINE
LINE:  492

LABL OR LABL REF: M_NOT_TEST
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
LINE:  496

INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  500

INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  503

INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  506

INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  509

INST: BRA
LABL OR LABL REF: MAIN
END OF LINE
INST: NOP
END OF LINE
LINE:  520

LABL OR LABL REF: COM_READ
INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $FFFC
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $FFFC
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $C0
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $01
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  528

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_GET_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_GET_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
LINE:  533

INST: CALL
END OF LINE
INST: NOP
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R11
REGS: R2
END OF LINE
INST: MOVE
TGT BYTE SEL: S
REGS: R11
REGS: R11
END OF LINE
INST: MOVE
TGT BYTE SEL: H
REGS: R11
REGS: R17
END OF LINE
LINE:  540

INST: CALL
END OF LINE
INST: NOP
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R11
REGS: R3
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R11
REGS: R17
END OF LINE
LINE:  546

INST: CALL
END OF LINE
INST: NOP
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R11
REGS: R4
END OF LINE
INST: MOVE
TGT BYTE SEL: S
REGS: R11
REGS: R11
END OF LINE
INST: MOVE
TGT BYTE SEL: H
REGS: R11
REGS: R18
END OF LINE
LINE:  553

INST: CALL
END OF LINE
INST: NOP
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R11
REGS: R5
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R11
REGS: R18
END OF LINE
LINE:  559

INST: ROR
TGT BYTE SEL: W
REGS: R18
REGS: R18
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $7F
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $FF
END OF LINE
INST: AND
TGT BYTE SEL: W
REGS: R18
REGS: R18
END OF LINE
LINE:  564

INST: ROR
TGT BYTE SEL: W
REGS: R17
REGS: R17
END OF LINE
INST: NOT
TGT BYTE SEL: W
REGS: R16
REGS: R16
END OF LINE
INST: AND
TGT BYTE SEL: W
REGS: R17
REGS: R16
END OF LINE
INST: OR
TGT BYTE SEL: W
REGS: R18
REGS: R18
END OF LINE
LINE:  569

INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $7F
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $FF
END OF LINE
INST: AND
TGT BYTE SEL: W
REGS: R17
REGS: R17
END OF LINE
LINE:  573

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF7
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF7
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R24
END OF LINE
LINE:  578

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF6
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R18
REGS: R24
END OF LINE
LINE:  583

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
LINE:  587

INST: MOVE
TGT BYTE SEL: L
REGS: R2
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  591

INST: MOVE
TGT BYTE SEL: L
REGS: R3
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  595

INST: MOVE
TGT BYTE SEL: L
REGS: R4
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  599

INST: MOVE
TGT BYTE SEL: L
REGS: R5
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  604

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FE5
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FE5
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R20
END OF LINE
LINE:  609

INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R24
END OF LINE
LINE:  611

INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R20
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R24
END OF LINE
LINE:  615

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  624

LABL OR LABL REF: COMR_LOOP
INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FF7
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FF7
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R4
END OF LINE
LINE:  629

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FF6
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FF6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R3
END OF LINE
LINE:  635

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $FFFC
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $FFFC
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R4
REGS: R25
END OF LINE
LINE:  641

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $2000
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $2000
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R5
END OF LINE
LINE:  647

INST: MOVE
TGT BYTE SEL: W
REGS: R3
REGS: R16
END OF LINE
INST: SUB
TGT BYTE SEL: W
REGS: R5
REGS: R5
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R4
REGS: R16
END OF LINE
INST: SUBC
TGT BYTE SEL: W
REGS: R6
REGS: R6
END OF LINE
LINE:  653

INST: BITT
TGT BYTE SEL: W
REGS: R30
LITN: 3
END OF LINE
INST: BRZ
LABL OR LABL REF: COMR_GREATER
END OF LINE
INST: NOP
END OF LINE
LINE:  658

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FF7
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FF7
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R4
END OF LINE
LINE:  663

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FF6
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FF6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R3
END OF LINE
LINE:  668

INST: BRA
LABL OR LABL REF: COMR_TRANSFER
END OF LINE
LINE:  672

LABL OR LABL REF: COMR_GREATER
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $2000
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $2000
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R4
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R3
END OF LINE
LINE:  684

LABL OR LABL REF: COMR_TRANSFER
INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FE6
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FE6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R3
REGS: R24
END OF LINE
LINE:  690

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FFF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FFF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R3
REGS: R24
END OF LINE
LINE:  696

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  704

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_SEND_N_WORDS
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_SEND_N_WORDS
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  711

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FF7
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FF7
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R4
END OF LINE
LINE:  716

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FF6
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FF6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R3
END OF LINE
LINE:  722

INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R6
END OF LINE
LINE:  724

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FFF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FFF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R5
END OF LINE
LINE:  730

INST: MOVE
TGT BYTE SEL: W
REGS: R5
REGS: R16
END OF LINE
INST: SUB
TGT BYTE SEL: W
REGS: R3
REGS: R3
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R6
REGS: R16
END OF LINE
INST: SUBC
TGT BYTE SEL: W
REGS: R4
REGS: R4
END OF LINE
LINE:  736

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FF7
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FF7
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R4
REGS: R24
END OF LINE
LINE:  741

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FF6
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FF6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R3
REGS: R24
END OF LINE
LINE:  747

INST: MOVE
TGT BYTE SEL: W
REGS: R4
REGS: R16
END OF LINE
INST: OR
TGT BYTE SEL: W
REGS: R3
REGS: R16
END OF LINE
INST: BRNZ
LABL OR LABL REF: COMR_LOOP
END OF LINE
INST: NOP
END OF LINE
LINE:  752

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  763

LABL OR LABL REF: COM_WRITE
INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $FFFC
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $FFFC
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $C0
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $02
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  771

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_GET_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_GET_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
LINE:  776

INST: CALL
END OF LINE
INST: NOP
END OF LINE
INST: MOVE
TGT BYTE SEL: S
REGS: R11
REGS: R11
END OF LINE
INST: MOVE
TGT BYTE SEL: H
REGS: R11
REGS: R17
END OF LINE
LINE:  782

INST: CALL
END OF LINE
INST: NOP
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R11
REGS: R17
END OF LINE
LINE:  787

INST: CALL
END OF LINE
INST: NOP
END OF LINE
INST: MOVE
TGT BYTE SEL: S
REGS: R11
REGS: R11
END OF LINE
INST: MOVE
TGT BYTE SEL: H
REGS: R11
REGS: R18
END OF LINE
LINE:  793

INST: CALL
END OF LINE
INST: NOP
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R11
REGS: R18
END OF LINE
LINE:  798

INST: ROR
TGT BYTE SEL: W
REGS: R18
REGS: R18
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $7F
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $FF
END OF LINE
INST: AND
TGT BYTE SEL: W
REGS: R18
REGS: R18
END OF LINE
LINE:  803

INST: ROR
TGT BYTE SEL: W
REGS: R17
REGS: R17
END OF LINE
INST: NOT
TGT BYTE SEL: W
REGS: R16
REGS: R16
END OF LINE
INST: AND
TGT BYTE SEL: W
REGS: R17
REGS: R16
END OF LINE
INST: OR
TGT BYTE SEL: W
REGS: R18
REGS: R18
END OF LINE
LINE:  808

INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $7F
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $FF
END OF LINE
INST: AND
TGT BYTE SEL: W
REGS: R17
REGS: R17
END OF LINE
LINE:  812

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF7
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF7
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R24
END OF LINE
LINE:  817

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF6
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R18
REGS: R24
END OF LINE
LINE:  823

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FE5
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FE5
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R20
END OF LINE
LINE:  828

INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R24
END OF LINE
LINE:  830

INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R20
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R24
END OF LINE
LINE:  834

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF0
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF0
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  843

LABL OR LABL REF: COMW_LOOP
INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FF7
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FF7
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R4
END OF LINE
LINE:  848

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FF6
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FF6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R3
END OF LINE
LINE:  854

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $FFFC
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $FFFC
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R22
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R4
REGS: R25
END OF LINE
LINE:  860

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $2000
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $2000
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R5
END OF LINE
LINE:  866

INST: MOVE
TGT BYTE SEL: W
REGS: R3
REGS: R16
END OF LINE
INST: SUB
TGT BYTE SEL: W
REGS: R5
REGS: R5
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R4
REGS: R16
END OF LINE
INST: SUBC
TGT BYTE SEL: W
REGS: R6
REGS: R6
END OF LINE
LINE:  872

INST: BITT
TGT BYTE SEL: W
REGS: R30
LITN: 3
END OF LINE
INST: BRZ
LABL OR LABL REF: COMW_GREATER
END OF LINE
INST: NOP
END OF LINE
LINE:  877

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FF7
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FF7
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R4
END OF LINE
LINE:  882

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FF6
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FF6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R3
END OF LINE
LINE:  887

INST: BRA
LABL OR LABL REF: COMW_TRANSFER
END OF LINE
LINE:  891

LABL OR LABL REF: COMW_GREATER
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $2000
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $2000
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R4
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R3
END OF LINE
LINE:  898

LABL OR LABL REF: COMW_TRANSFER
INST: MOVE
TGT BYTE SEL: W
REGS: R4
REGS: R17
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R3
REGS: R18
END OF LINE
LINE:  901

INST: MOVE
TGT BYTE SEL: W
REGS: R18
REGS: R16
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R18
REGS: R18
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R16
END OF LINE
INST: ADDC
TGT BYTE SEL: W
REGS: R17
REGS: R17
END OF LINE
LINE:  906

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
LINE:  910

INST: MOVE
TGT BYTE SEL: S
REGS: R17
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  914

INST: MOVE
TGT BYTE SEL: L
REGS: R17
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  918

INST: MOVE
TGT BYTE SEL: S
REGS: R18
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  922

INST: MOVE
TGT BYTE SEL: L
REGS: R18
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  927

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FE6
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FE6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R3
REGS: R24
END OF LINE
LINE:  933

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FFF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FFF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R3
REGS: R24
END OF LINE
LINE:  939

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_GET_N_WORDS
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_GET_N_WORDS
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  946

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FED
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FED
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  954

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FF7
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FF7
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R4
END OF LINE
LINE:  959

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FF6
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FF6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R3
END OF LINE
LINE:  965

INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R6
END OF LINE
LINE:  967

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $3FFF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $3FFF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R5
END OF LINE
LINE:  973

INST: MOVE
TGT BYTE SEL: W
REGS: R5
REGS: R16
END OF LINE
INST: SUB
TGT BYTE SEL: W
REGS: R3
REGS: R3
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R6
REGS: R16
END OF LINE
INST: SUBC
TGT BYTE SEL: W
REGS: R4
REGS: R4
END OF LINE
LINE:  979

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FF7
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FF7
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R4
REGS: R24
END OF LINE
LINE:  984

INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $1FF6
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $1FF6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R3
REGS: R24
END OF LINE
LINE:  990

INST: MOVE
TGT BYTE SEL: W
REGS: R4
REGS: R16
END OF LINE
INST: OR
TGT BYTE SEL: W
REGS: R3
REGS: R16
END OF LINE
INST: BRNZ
LABL OR LABL REF: COMW_LOOP
END OF LINE
INST: NOP
END OF LINE
LINE:  995

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  1001

LABL OR LABL REF: COM_VERIFY
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
LINE:  1005

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $E0
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R16
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1010

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R16
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1015

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  1021

LABL OR LABL REF: COM_UNLOCK_ALL
INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $FFFC
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $FFFC
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $C0
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $04
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  1034

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1041

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
LINE:  1045

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $55
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R16
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1050

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $AA
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R16
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1055

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  1061

LABL OR LABL REF: COM_LOCK_ALL
INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $FFFC
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $FFFC
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $C0
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $05
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  1074

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEA
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1081

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
LINE:  1085

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $55
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R16
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1090

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $AA
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R16
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1095

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  1101

LABL OR LABL REF: COM_GET_STATUS
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
LINE:  1105

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $E0
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R16
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1110

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R16
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1115

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  1121

LABL OR LABL REF: COM_ERASE_ALL
INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $FFFA
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $FFFA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $C0
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $07
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  1134

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEC
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEC
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1141

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
LINE:  1145

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $55
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R16
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1150

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $AA
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R16
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1155

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  1161

LABL OR LABL REF: COM_LOCK_BLOCK
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FE8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FE8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1168

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
LINE:  1172

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $E0
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R16
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1177

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R16
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1182

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  1188

LABL OR LABL REF: COM_ERASE_BLOCK
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF1
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF1
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1195

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
LINE:  1199

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $E0
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R16
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1204

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R16
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1209

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  1215

LABL OR LABL REF: COM_SET_ADDRESS
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
LINE:  1219

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $E0
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R16
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1224

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R16
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1229

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  1235

LABL OR LABL REF: COM_GET_PLATFORM_DESCRIPTOR
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: PLATFORM_DESCRIPTOR
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: PLATFORM_DESCRIPTOR
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
LINE:  1240

LABL OR LABL REF: CGPD_LOOP
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
LINE:  1244

INST: MOVE
TGT BYTE SEL: L
REGS: R24
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1248

INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R20
REGS: R20
END OF LINE
LINE:  1251

INST: TEST
TGT BYTE SEL: L
REGS: R0
END OF LINE
INST: BRNZ
LABL OR LABL REF: CGPD_LOOP
END OF LINE
INST: NOP
END OF LINE
LINE:  1255

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  1261

LABL OR LABL REF: COM_GET_TARGET_DESCRIPTOR
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FE7
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FE7
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R24
REGS: R20
END OF LINE
LINE:  1268

LABL OR LABL REF: CGTD_LOOP
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
LINE:  1272

INST: MOVE
TGT BYTE SEL: L
REGS: R24
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1276

INST: LIM
TGT BYTE SEL: W
REGS: R16
LITN: $01
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R20
REGS: R20
END OF LINE
LINE:  1279

INST: TEST
TGT BYTE SEL: L
REGS: R0
END OF LINE
INST: BRNZ
LABL OR LABL REF: CGTD_LOOP
END OF LINE
INST: NOP
END OF LINE
LINE:  1283

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  1289

LABL OR LABL REF: COM_GET_NUM_TARGETS
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
LINE:  1293

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $03
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $03
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R0
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1299

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  1305

LABL OR LABL REF: COM_SET_TARGET
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_SEND_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
LINE:  1309

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SERIAL_GET_BYTE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SERIAL_GET_BYTE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R26
END OF LINE
INST: CALL
END OF LINE
INST: NOP
END OF LINE
LINE:  1316

PUSH_MACRO:     SET_TARGET
	MACRO_FILE: DE2_PROGRAMMER.INC

LINE:  402

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $00
END OF LINE
INST: XOR
TGT BYTE SEL: L
REGS: R11
REGS: R31
END OF LINE
INST: BRZ
LABL OR LABL REF: M_ST_FLASH
END OF LINE
LINE:  406

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $01
END OF LINE
INST: XOR
TGT BYTE SEL: L
REGS: R11
REGS: R31
END OF LINE
INST: BRZ
LABL OR LABL REF: M_ST_SRAM
END OF LINE
LINE:  410

INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $02
END OF LINE
INST: XOR
TGT BYTE SEL: L
REGS: R11
REGS: R31
END OF LINE
INST: BRZ
LABL OR LABL REF: M_ST_SDRAM
END OF LINE
INST: NOP
END OF LINE
LINE:  415

INST: MOVE
TGT BYTE SEL: W
REGS: R31
REGS: R11
END OF LINE
LINE:  418

LABL OR LABL REF: M_ST_FLASH
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF0
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF0
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_SET_ADDRESS_WRITE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_SET_ADDRESS_WRITE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  425

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_SET_ADDRESS_READ
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_SET_ADDRESS_READ
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  432

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_GET_N_WORDS
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_GET_N_WORDS
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  439

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FED
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FED
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_SEND_N_WORDS
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_SEND_N_WORDS
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  446

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEC
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEC
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_ERASE_ALL_BLOCKS
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_ERASE_ALL_BLOCKS
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  453

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_UNLOCK_ALL_BLOCKS
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_UNLOCK_ALL_BLOCKS
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  460

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEA
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_LOCK_ALL_BLOCKS
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_LOCK_ALL_BLOCKS
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  467

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FE9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FE9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_NULL
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_NULL
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  474

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FE8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FE8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_LOCK_BLOCK
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_LOCK_BLOCK
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  481

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF1
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF1
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: FLASH_ERASE_BLOCK
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: FLASH_ERASE_BLOCK
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  488

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FE6
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FE6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FFE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FFE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  495

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FE5
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FE5
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FFA
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FFA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
INST: BRA
LABL OR LABL REF: M_ST_END
END OF LINE
LINE:  504

LABL OR LABL REF: M_ST_SRAM
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF0
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF0
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SRAM_SET_ADDRESS_WRITE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SRAM_SET_ADDRESS_WRITE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  511

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SRAM_SET_ADDRESS_READ
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SRAM_SET_ADDRESS_READ
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  518

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SRAM_GET_N_WORDS
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SRAM_GET_N_WORDS
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  525

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FED
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FED
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SRAM_SEND_N_WORDS
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SRAM_SEND_N_WORDS
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  532

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEC
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEC
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SRAM_NULL
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SRAM_NULL
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  539

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SRAM_NULL
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SRAM_NULL
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  546

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEA
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SRAM_NULL
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SRAM_NULL
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  553

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FE9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FE9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SRAM_NULL
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SRAM_NULL
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  560

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FE8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FE8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SRAM_NULL
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SRAM_NULL
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  567

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF1
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF1
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SRAM_NULL
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SRAM_NULL
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  574

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FE6
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FE6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FFD
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FFD
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  581

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FE5
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FE5
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF4
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF4
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
INST: BRA
LABL OR LABL REF: M_ST_END
END OF LINE
LINE:  590

LABL OR LABL REF: M_ST_SDRAM
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF0
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF0
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SDRAM_SET_ADDRESS_WRITE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SDRAM_SET_ADDRESS_WRITE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  597

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEF
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEF
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SDRAM_SET_ADDRESS_READ
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SDRAM_SET_ADDRESS_READ
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  604

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEE
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SDRAM_GET_N_WORDS
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SDRAM_GET_N_WORDS
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  611

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FED
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FED
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SDRAM_SEND_N_WORDS
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SDRAM_SEND_N_WORDS
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  618

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEC
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEC
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SDRAM_NULL
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SDRAM_NULL
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  625

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEB
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEB
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SDRAM_NULL
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SDRAM_NULL
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  632

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FEA
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FEA
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SDRAM_NULL
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SDRAM_NULL
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  639

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FE9
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FE9
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SDRAM_NULL
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SDRAM_NULL
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  646

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FE8
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FE8
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SDRAM_NULL
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SDRAM_NULL
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  653

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF1
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF1
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LABL OR LABL REF: SDRAM_NULL
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LABL OR LABL REF: SDRAM_NULL
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  660

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FE6
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FE6
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $3FFC
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $3FFC
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  667

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FE5
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FE5
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FF2
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FF2
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R24
END OF LINE
LINE:  675

LABL OR LABL REF: M_ST_END
INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FE4
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FE4
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R11
REGS: R16
END OF LINE
INST: ADD
TGT BYTE SEL: L
REGS: R11
REGS: R16
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LABL OR LABL REF: TARGET_SIZE
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LABL OR LABL REF: TARGET_SIZE
END OF LINE
INST: MOVE
TGT BYTE SEL: H
REGS: R31
REGS: R16
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R17
REGS: R24
END OF LINE
LINE:  685

INST: LIM
TGT BYTE SEL: H
REGS: R16
LIT BSEL: `LH
LITN: $1FE7
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LIT BSEL: `LL
LITN: $1FE7
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R20
END OF LINE
INST: MOVE
TGT BYTE SEL: L
REGS: R11
REGS: R16
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LABL OR LABL REF: TARGET_DESCRIPTORS
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LABL OR LABL REF: TARGET_DESCRIPTORS
END OF LINE
INST: MOVE
TGT BYTE SEL: H
REGS: R31
REGS: R16
END OF LINE
INST: ADD
TGT BYTE SEL: W
REGS: R17
REGS: R24
END OF LINE
POP_MACRO:     SET_TARGET

LINE:  1318

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  1324

LABL OR LABL REF: COM_TEST
INST: LIM
TGT BYTE SEL: H
REGS: R17
LIT BSEL: `LH
LITN: $FFFC
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R17
LIT BSEL: `LL
LITN: $FFFC
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R17
REGS: R22
END OF LINE
INST: LIM
TGT BYTE SEL: H
REGS: R16
LITN: $C0
END OF LINE
INST: LIM
TGT BYTE SEL: L
REGS: R16
LITN: $07
END OF LINE
INST: MOVE
TGT BYTE SEL: W
REGS: R16
REGS: R25
END OF LINE
LINE:  1331

INST: RET
END OF LINE
INST: NOP
END OF LINE
LINE:  1336

PUSH_MACRO:     PLATFORM_STRINGS
	MACRO_FILE: DE2_PROGRAMMER.INC

LINE:  225

LABL OR LABL REF: PLATFORM_DESCRIPTOR
INST: DATA
LITC: 't'
END OF LINE
INST: DATA
LITC: 'e'
END OF LINE
INST: DATA
LITC: 'r'
END OF LINE
INST: DATA
LITC: 'a'
END OF LINE
INST: DATA
LITC: 's'
END OF LINE
INST: DATA
LITC: 'I'
END OF LINE
INST: DATA
LITC: 'C'
END OF LINE
INST: DATA
LITC: ' '
END OF LINE
INST: DATA
LITC: 'D'
END OF LINE
INST: DATA
LITC: 'E'
END OF LINE
INST: DATA
LITC: '2'
END OF LINE
INST: DATA
LITC: '\0'
END OF LINE
LINE:  239

LABL OR LABL REF: TARGET_DESCRIPTORS
INST: DATA
LIT WSEL: `LW
LABL OR LABL REF: FLASH_DESCRIPTOR
END OF LINE
INST: DATA
LIT WSEL: `LW
LABL OR LABL REF: SRAM_DESCRIPTOR
END OF LINE
INST: DATA
LIT WSEL: `LW
LABL OR LABL REF: SDRAM_DESCRIPTOR
END OF LINE
LINE:  244

LABL OR LABL REF: FLASH_DESCRIPTOR
INST: DATA
LITC: 'F'
END OF LINE
INST: DATA
LITC: 'l'
END OF LINE
INST: DATA
LITC: 'a'
END OF LINE
INST: DATA
LITC: 's'
END OF LINE
INST: DATA
LITC: 'h'
END OF LINE
INST: DATA
LITC: '\0'
END OF LINE
LINE:  252

LABL OR LABL REF: SRAM_DESCRIPTOR
INST: DATA
LITC: 'S'
END OF LINE
INST: DATA
LITC: 'R'
END OF LINE
INST: DATA
LITC: 'A'
END OF LINE
INST: DATA
LITC: 'M'
END OF LINE
INST: DATA
LITC: '\0'
END OF LINE
LINE:  259

LABL OR LABL REF: SDRAM_DESCRIPTOR
INST: DATA
LITC: 'S'
END OF LINE
INST: DATA
LITC: 'D'
END OF LINE
INST: DATA
LITC: 'R'
END OF LINE
INST: DATA
LITC: 'A'
END OF LINE
INST: DATA
LITC: 'M'
END OF LINE
INST: DATA
LITC: '\0'
END OF LINE
LINE:  267

LABL OR LABL REF: TARGET_SIZE
INST: DATA
LITN: $0000
END OF LINE
INST: DATA
LITN: $0040
END OF LINE
INST: DATA
LITN: $0000
END OF LINE
INST: DATA
LITN: $0008
END OF LINE
INST: DATA
LITN: $0000
END OF LINE
INST: DATA
LITN: $0080
END OF LINE
POP_MACRO:     PLATFORM_STRINGS

LINE:  1338

ORG:     ORG $3FFF

INST: DATA
LITN: $FFFF
END OF LINE
POP_FILE:     neonfox_programmer.asm

0	D0 20	BRA	255 4294967295
1	C0 0	NOP	
2	B2 0	RET	
3	C0 0	NOP	
4	B2 0	RET	
5	C0 0	NOP	
6	B2 0	RET	
7	C0 0	NOP	
8	B2 0	RET	
9	C0 0	NOP	
A	B2 0	RET	
B	C0 0	NOP	
C	B2 0	RET	
D	C0 0	NOP	
E	B2 0	RET	
F	C0 0	NOP	
10	B2 0	RET	
11	C0 0	NOP	
12	B2 0	RET	
13	C0 0	NOP	
14	B2 0	RET	
15	C0 0	NOP	
16	B2 0	RET	
17	C0 0	NOP	
18	B2 0	RET	
19	C0 0	NOP	
1A	B2 0	RET	
1B	C0 0	NOP	
1C	B2 0	RET	
1D	C0 0	NOP	
1E	B2 0	RET	
1F	C0 0	NOP	
20	4F F0	MOVE	3 31 16
21	4F F1	MOVE	3 31 17
22	4F F2	MOVE	3 31 18
23	4F F3	MOVE	3 31 19
24	4F E0	MOVE	3 31 0
25	4F E1	MOVE	3 31 1
26	4F E2	MOVE	3 31 2
27	4F E3	MOVE	3 31 3
28	4F E4	MOVE	3 31 4
29	4F E5	MOVE	3 31 5
2A	4F E6	MOVE	3 31 6
2B	4F E7	MOVE	3 31 7
2C	4F E8	MOVE	3 31 8
2D	4F E9	MOVE	3 31 9
2E	4F EA	MOVE	3 31 10
2F	4F EB	MOVE	3 31 11
30	4F EC	MOVE	3 31 12
31	4F ED	MOVE	3 31 13
32	4F EE	MOVE	3 31 14
33	4F EF	MOVE	3 31 15
34	4F F5	MOVE	3 31 21
35	4F F4	MOVE	3 31 20
36	4F F6	MOVE	3 31 22
37	4F FB	MOVE	3 31 27
38	4F FA	MOVE	3 31 26
39	E9 FF	LIM	2 17 255
3A	E5 FC	LIM	1 17 252
3B	4E 36	MOVE	3 17 22
3C	EC 1	LIM	3 16 1
3D	4E 19	MOVE	3 16 25
3E	E8 0	LIM	2 16 0
3F	E4 B2	LIM	1 16 178
40	4E 1A	MOVE	3 16 26
41	E8 1	LIM	2 16 1
42	E4 B1	LIM	1 16 177
43	B0 0	CALL	
44	4E 0	MOVE	3 16 0
45	E8 1	LIM	2 16 1
46	E4 18	LIM	1 16 24
47	4E 1A	MOVE	3 16 26
48	B0 0	CALL	
49	C0 0	NOP	
4A	E8 4	LIM	2 16 4
4B	E4 F9	LIM	1 16 249
4C	4E 1A	MOVE	3 16 26
4D	B0 0	CALL	
4E	C0 0	NOP	
4F	E8 5	LIM	2 16 5
50	E4 83	LIM	1 16 131
51	4E 1A	MOVE	3 16 26
52	B0 0	CALL	
53	C0 0	NOP	
54	E8 1F	LIM	2 16 31
55	E4 E7	LIM	1 16 231
56	4E 14	MOVE	3 16 20
57	E8 A	LIM	2 16 10
58	E4 2D	LIM	1 16 45
59	4E 18	MOVE	3 16 24
5A	E8 1F	LIM	2 16 31
5B	E4 F0	LIM	1 16 240
5C	4E 14	MOVE	3 16 20
5D	E8 1	LIM	2 16 1
5E	E4 35	LIM	1 16 53
5F	4E 18	MOVE	3 16 24
60	E8 1F	LIM	2 16 31
61	E4 EF	LIM	1 16 239
62	4E 14	MOVE	3 16 20
63	E8 1	LIM	2 16 1
64	E4 4D	LIM	1 16 77
65	4E 18	MOVE	3 16 24
66	E8 1F	LIM	2 16 31
67	E4 EE	LIM	1 16 238
68	4E 14	MOVE	3 16 20
69	E8 3	LIM	2 16 3
6A	E4 98	LIM	1 16 152
6B	4E 18	MOVE	3 16 24
6C	E8 1F	LIM	2 16 31
6D	E4 ED	LIM	1 16 237
6E	4E 14	MOVE	3 16 20
6F	E8 3	LIM	2 16 3
70	E4 B7	LIM	1 16 183
71	4E 18	MOVE	3 16 24
72	E8 1F	LIM	2 16 31
73	E4 EC	LIM	1 16 236
74	4E 14	MOVE	3 16 20
75	E8 4	LIM	2 16 4
76	E4 C6	LIM	1 16 198
77	4E 18	MOVE	3 16 24
78	E8 1F	LIM	2 16 31
79	E4 EB	LIM	1 16 235
7A	4E 14	MOVE	3 16 20
7B	E8 4	LIM	2 16 4
7C	E4 0	LIM	1 16 0
7D	4E 18	MOVE	3 16 24
7E	E8 1F	LIM	2 16 31
7F	E4 EA	LIM	1 16 234
80	4E 14	MOVE	3 16 20
81	E8 4	LIM	2 16 4
82	E4 97	LIM	1 16 151
83	4E 18	MOVE	3 16 24
84	E8 1F	LIM	2 16 31
85	E4 E9	LIM	1 16 233
86	4E 14	MOVE	3 16 20
87	E8 1	LIM	2 16 1
88	E4 14	LIM	1 16 20
89	4E 18	MOVE	3 16 24
8A	E8 1F	LIM	2 16 31
8B	E4 E8	LIM	1 16 232
8C	4E 14	MOVE	3 16 20
8D	E8 3	LIM	2 16 3
8E	E4 3	LIM	1 16 3
8F	4E 18	MOVE	3 16 24
90	E8 1F	LIM	2 16 31
91	E4 F1	LIM	1 16 241
92	4E 14	MOVE	3 16 20
93	E8 2	LIM	2 16 2
94	E4 62	LIM	1 16 98
95	4E 18	MOVE	3 16 24
96	E8 1F	LIM	2 16 31
97	E4 E6	LIM	1 16 230
98	4E 14	MOVE	3 16 20
99	E8 3F	LIM	2 16 63
9A	E4 FE	LIM	1 16 254
9B	4E 18	MOVE	3 16 24
9C	E8 1F	LIM	2 16 31
9D	E4 E5	LIM	1 16 229
9E	4E 14	MOVE	3 16 20
9F	E8 3F	LIM	2 16 63
A0	E4 FA	LIM	1 16 250
A1	4E 18	MOVE	3 16 24
A2	E8 1F	LIM	2 16 31
A3	E4 E4	LIM	1 16 228
A4	4E 14	MOVE	3 16 20
A5	E8 A	LIM	2 16 10
A6	E4 41	LIM	1 16 65
A7	4E 18	MOVE	3 16 24
A8	E9 FF	LIM	2 17 255
A9	E5 FC	LIM	1 17 252
AA	4E 36	MOVE	3 17 22
AB	EC 2	LIM	3 16 2
AC	4E 19	MOVE	3 16 25
AD	E8 6	LIM	2 16 6
AE	E4 16	LIM	1 16 22
AF	4E 1A	MOVE	3 16 26
B0	B1 0	JMP	
B1	C0 0	NOP	
B2	E8 FF	LIM	2 16 255
B3	E4 EA	LIM	1 16 234
B4	4E 16	MOVE	3 16 22
B5	44 19	MOVE	1 0 25
B6	E8 FF	LIM	2 16 255
B7	E4 EB	LIM	1 16 235
B8	4E 16	MOVE	3 16 22
B9	B2 0	RET	
BA	40 19	MOVE	0 0 25
BB	E8 FF	LIM	2 16 255
BC	E4 E9	LIM	1 16 233
BD	4E 16	MOVE	3 16 22
BE	F3 27	BITT	25 7
BF	DB FF	BRNZ	255 4294967295
C0	F3 23	BITT	25 3
C1	CB FD	BRZ	255 4294967295
C2	E4 E8	LIM	1 16 232
C3	4E 16	MOVE	3 16 22
C4	B2 0	RET	
C5	47 2B	MOVE	1 25 11
C6	E8 FF	LIM	2 16 255
C7	E4 E9	LIM	1 16 233
C8	4E 16	MOVE	3 16 22
C9	F3 27	BITT	25 7
CA	DB FF	BRNZ	255 4294967295
CB	F3 22	BITT	25 2
CC	CB FD	BRZ	255 4294967295
CD	E4 E8	LIM	1 16 232
CE	4E 16	MOVE	3 16 22
CF	B2 0	RET	
D0	44 19	MOVE	1 0 25
D1	E9 3F	LIM	2 17 63
D2	E5 FF	LIM	1 17 255
D3	4E 34	MOVE	3 17 20
D4	4F 3	MOVE	3 24 3
D5	E8 1F	LIM	2 16 31
D6	E4 F8	LIM	1 16 248
D7	4E 5	MOVE	3 16 5
D8	4C 63	TEST	3 3
D9	D8 3	BRNZ	255 4294967295
DA	C0 0	NOP	
DB	B2 0	RET	
DC	E9 0	LIM	2 17 0
DD	E5 0	LIM	1 17 0
DE	E8 0	LIM	2 16 0
DF	E4 BB	LIM	1 16 187
E0	4E 3B	MOVE	3 17 27
E1	4E 1A	MOVE	3 16 26
E2	B0 0	CALL	
E3	C0 0	NOP	
E4	45 66	MOVE	1 11 6
E5	B0 0	CALL	
E6	C0 0	NOP	
E7	41 6B	MOVE	0 11 11
E8	49 66	MOVE	2 11 6
E9	4C B4	MOVE	3 5 20
EA	4C D8	MOVE	3 6 24
EB	EC 1	LIM	3 16 1
EC	C A5	ADD	3 5 5
ED	EC 1	LIM	3 16 1
EE	2C 63	SUB	3 3 3
EF	DB ED	BRNZ	255 4294967295
F0	C0 0	NOP	
F1	B2 0	RET	
F2	C0 0	NOP	
F3	E9 3F	LIM	2 17 63
F4	E5 FF	LIM	1 17 255
F5	4E 34	MOVE	3 17 20
F6	4F 3	MOVE	3 24 3
F7	E8 1F	LIM	2 16 31
F8	E4 F8	LIM	1 16 248
F9	4E 5	MOVE	3 16 5
FA	4C 63	TEST	3 3
FB	D8 3	BRNZ	255 4294967295
FC	C0 0	NOP	
FD	B2 0	RET	
FE	4C B4	MOVE	3 5 20
FF	4F 6	MOVE	3 24 6
100	E9 0	LIM	2 17 0
101	E5 0	LIM	1 17 0
102	E8 0	LIM	2 16 0
103	E4 C6	LIM	1 16 198
104	4E 3B	MOVE	3 17 27
105	4E 1A	MOVE	3 16 26
106	44 C0	MOVE	1 6 0
107	B0 0	CALL	
108	C0 0	NOP	
109	40 C0	MOVE	0 6 0
10A	B0 0	CALL	
10B	C0 0	NOP	
10C	EC 1	LIM	3 16 1
10D	C A5	ADD	3 5 5
10E	EC 1	LIM	3 16 1
10F	2C 63	SUB	3 3 3
110	DB EE	BRNZ	255 4294967295
111	C0 0	NOP	
112	B2 0	RET	
113	C0 0	NOP	
114	E8 E0	LIM	2 16 224
115	E4 0	LIM	1 16 0
116	B2 0	RET	
117	4E B	MOVE	3 16 11
118	E9 FF	LIM	2 17 255
119	E5 D8	LIM	1 17 216
11A	4E 36	MOVE	3 17 22
11B	4F F9	MOVE	3 31 25
11C	E9 FF	LIM	2 17 255
11D	E5 D9	LIM	1 17 217
11E	4E 36	MOVE	3 17 22
11F	4F F9	MOVE	3 31 25
120	E8 FF	LIM	2 16 255
121	E4 DB	LIM	1 16 219
122	4E 16	MOVE	3 16 22
123	E8 0	LIM	2 16 0
124	E4 F0	LIM	1 16 240
125	4E 19	MOVE	3 16 25
126	E8 FF	LIM	2 16 255
127	E4 DF	LIM	1 16 223
128	4E 16	MOVE	3 16 22
129	F3 20	BITT	25 0
12A	CB FF	BRZ	255 4294967295
12B	E8 FF	LIM	2 16 255
12C	E4 DA	LIM	1 16 218
12D	4E 16	MOVE	3 16 22
12E	4F F9	MOVE	3 31 25
12F	E8 FF	LIM	2 16 255
130	E4 DE	LIM	1 16 222
131	4E 16	MOVE	3 16 22
132	4F F9	MOVE	3 31 25
133	B2 0	RET	
134	C0 0	NOP	
135	E8 3F	LIM	2 16 63
136	E4 FB	LIM	1 16 251
137	4E 14	MOVE	3 16 20
138	4F 4	MOVE	3 24 4
139	E8 3F	LIM	2 16 63
13A	E4 FA	LIM	1 16 250
13B	4E 14	MOVE	3 16 20
13C	4F 3	MOVE	3 24 3
13D	4C 91	MOVE	3 4 17
13E	4C 72	MOVE	3 3 18
13F	4E 50	MOVE	3 18 16
140	E 52	ADD	3 18 18
141	4E 30	MOVE	3 17 16
142	1E 31	ADDC	3 17 17
143	E8 3F	LIM	2 16 63
144	E4 F9	LIM	1 16 249
145	4E 14	MOVE	3 16 20
146	4E 38	MOVE	3 17 24
147	E8 3F	LIM	2 16 63
148	E4 F8	LIM	1 16 248
149	4E 14	MOVE	3 16 20
14A	4E 58	MOVE	3 18 24
14B	B2 0	RET	
14C	C0 0	NOP	
14D	E8 FF	LIM	2 16 255
14E	E4 DE	LIM	1 16 222
14F	4E 16	MOVE	3 16 22
150	EC 0	LIM	3 16 0
151	4E 19	MOVE	3 16 25
152	E8 3F	LIM	2 16 63
153	E4 FB	LIM	1 16 251
154	4E 14	MOVE	3 16 20
155	4F 4	MOVE	3 24 4
156	E8 3F	LIM	2 16 63
157	E4 FA	LIM	1 16 250
158	4E 14	MOVE	3 16 20
159	4F 3	MOVE	3 24 3
15A	4C 91	MOVE	3 4 17
15B	4C 72	MOVE	3 3 18
15C	4E 50	MOVE	3 18 16
15D	E 52	ADD	3 18 18
15E	4E 30	MOVE	3 17 16
15F	1E 31	ADDC	3 17 17
160	E8 3F	LIM	2 16 63
161	E4 F9	LIM	1 16 249
162	4E 14	MOVE	3 16 20
163	4E 38	MOVE	3 17 24
164	E8 3F	LIM	2 16 63
165	E4 F8	LIM	1 16 248
166	4E 14	MOVE	3 16 20
167	4E 58	MOVE	3 18 24
168	E8 FF	LIM	2 16 255
169	E4 DC	LIM	1 16 220
16A	4E 16	MOVE	3 16 22
16B	4E 39	MOVE	3 17 25
16C	E8 FF	LIM	2 16 255
16D	E4 DD	LIM	1 16 221
16E	4E 16	MOVE	3 16 22
16F	4E 59	MOVE	3 18 25
170	E8 FF	LIM	2 16 255
171	E4 DF	LIM	1 16 223
172	4E 16	MOVE	3 16 22
173	F3 21	BITT	25 1
174	CB FF	BRZ	255 4294967295
175	C0 0	NOP	
176	B2 0	RET	
177	C0 0	NOP	
178	E8 3F	LIM	2 16 63
179	E4 F9	LIM	1 16 249
17A	4E 14	MOVE	3 16 20
17B	4F 11	MOVE	3 24 17
17C	E8 3F	LIM	2 16 63
17D	E4 F8	LIM	1 16 248
17E	4E 14	MOVE	3 16 20
17F	4F 12	MOVE	3 24 18
180	E8 FF	LIM	2 16 255
181	E4 D8	LIM	1 16 216
182	4E 16	MOVE	3 16 22
183	4E 39	MOVE	3 17 25
184	E8 FF	LIM	2 16 255
185	E4 D9	LIM	1 16 217
186	4E 16	MOVE	3 16 22
187	4E 59	MOVE	3 18 25
188	B2 0	RET	
189	C0 0	NOP	
18A	E8 FF	LIM	2 16 255
18B	E4 DE	LIM	1 16 222
18C	4E 16	MOVE	3 16 22
18D	EC 0	LIM	3 16 0
18E	4E 19	MOVE	3 16 25
18F	E8 3F	LIM	2 16 63
190	E4 F9	LIM	1 16 249
191	4E 14	MOVE	3 16 20
192	4F 11	MOVE	3 24 17
193	E8 3F	LIM	2 16 63
194	E4 F8	LIM	1 16 248
195	4E 14	MOVE	3 16 20
196	4F 12	MOVE	3 24 18
197	E8 FF	LIM	2 16 255
198	E4 DC	LIM	1 16 220
199	4E 16	MOVE	3 16 22
19A	4E 39	MOVE	3 17 25
19B	E8 FF	LIM	2 16 255
19C	E4 DD	LIM	1 16 221
19D	4E 16	MOVE	3 16 22
19E	4E 59	MOVE	3 18 25
19F	E8 FF	LIM	2 16 255
1A0	E4 DF	LIM	1 16 223
1A1	4E 16	MOVE	3 16 22
1A2	F3 21	BITT	25 1
1A3	CB FF	BRZ	255 4294967295
1A4	C0 0	NOP	
1A5	B2 0	RET	
1A6	C0 0	NOP	
1A7	E8 FF	LIM	2 16 255
1A8	E4 DF	LIM	1 16 223
1A9	4E 16	MOVE	3 16 22
1AA	4F F9	MOVE	3 31 25
1AB	F3 21	BITT	25 1
1AC	CB FF	BRZ	255 4294967295
1AD	E4 DB	LIM	1 16 219
1AE	4E 16	MOVE	3 16 22
1AF	47 2B	MOVE	1 25 11
1B0	E8 FF	LIM	2 16 255
1B1	E4 DF	LIM	1 16 223
1B2	4E 16	MOVE	3 16 22
1B3	4F F9	MOVE	3 31 25
1B4	F3 21	BITT	25 1
1B5	CB FF	BRZ	255 4294967295
1B6	E4 DB	LIM	1 16 219
1B7	4E 16	MOVE	3 16 22
1B8	43 30	MOVE	0 25 16
1B9	B2 0	RET	
1BA	4A B	MOVE	2 16 11
1BB	E8 1	LIM	2 16 1
1BC	E4 8A	LIM	1 16 138
1BD	4E 1A	MOVE	3 16 26
1BE	B0 0	CALL	
1BF	C0 0	NOP	
1C0	E8 FF	LIM	2 16 255
1C1	E4 D8	LIM	1 16 216
1C2	4E 16	MOVE	3 16 22
1C3	E8 0	LIM	2 16 0
1C4	E4 0	LIM	1 16 0
1C5	4E 19	MOVE	3 16 25
1C6	E8 FF	LIM	2 16 255
1C7	E4 D9	LIM	1 16 217
1C8	4E 16	MOVE	3 16 22
1C9	E8 A	LIM	2 16 10
1CA	E4 AA	LIM	1 16 170
1CB	4E 19	MOVE	3 16 25
1CC	E8 FF	LIM	2 16 255
1CD	E4 DB	LIM	1 16 219
1CE	4E 16	MOVE	3 16 22
1CF	E8 0	LIM	2 16 0
1D0	E4 AA	LIM	1 16 170
1D1	4E 19	MOVE	3 16 25
1D2	E8 FF	LIM	2 16 255
1D3	E4 DF	LIM	1 16 223
1D4	4E 16	MOVE	3 16 22
1D5	F3 20	BITT	25 0
1D6	CB FF	BRZ	255 4294967295
1D7	E8 FF	LIM	2 16 255
1D8	E4 D8	LIM	1 16 216
1D9	4E 16	MOVE	3 16 22
1DA	E8 0	LIM	2 16 0
1DB	E4 0	LIM	1 16 0
1DC	4E 19	MOVE	3 16 25
1DD	E8 FF	LIM	2 16 255
1DE	E4 D9	LIM	1 16 217
1DF	4E 16	MOVE	3 16 22
1E0	E8 5	LIM	2 16 5
1E1	E4 55	LIM	1 16 85
1E2	4E 19	MOVE	3 16 25
1E3	E8 FF	LIM	2 16 255
1E4	E4 DB	LIM	1 16 219
1E5	4E 16	MOVE	3 16 22
1E6	E8 0	LIM	2 16 0
1E7	E4 55	LIM	1 16 85
1E8	4E 19	MOVE	3 16 25
1E9	E8 FF	LIM	2 16 255
1EA	E4 DF	LIM	1 16 223
1EB	4E 16	MOVE	3 16 22
1EC	F3 20	BITT	25 0
1ED	CB FF	BRZ	255 4294967295
1EE	E8 FF	LIM	2 16 255
1EF	E4 D8	LIM	1 16 216
1F0	4E 16	MOVE	3 16 22
1F1	E8 0	LIM	2 16 0
1F2	E4 0	LIM	1 16 0
1F3	4E 19	MOVE	3 16 25
1F4	E8 FF	LIM	2 16 255
1F5	E4 D9	LIM	1 16 217
1F6	4E 16	MOVE	3 16 22
1F7	E8 A	LIM	2 16 10
1F8	E4 AA	LIM	1 16 170
1F9	4E 19	MOVE	3 16 25
1FA	E8 FF	LIM	2 16 255
1FB	E4 DB	LIM	1 16 219
1FC	4E 16	MOVE	3 16 22
1FD	E8 0	LIM	2 16 0
1FE	E4 A0	LIM	1 16 160
1FF	4E 19	MOVE	3 16 25
200	E8 FF	LIM	2 16 255
201	E4 DF	LIM	1 16 223
202	4E 16	MOVE	3 16 22
203	F3 20	BITT	25 0
204	CB FF	BRZ	255 4294967295
205	E8 1	LIM	2 16 1
206	E4 78	LIM	1 16 120
207	4E 1A	MOVE	3 16 26
208	B0 0	CALL	
209	C0 0	NOP	
20A	E8 FF	LIM	2 16 255
20B	E4 DB	LIM	1 16 219
20C	4E 16	MOVE	3 16 22
20D	44 19	MOVE	1 0 25
20E	E8 FF	LIM	2 16 255
20F	E4 DF	LIM	1 16 223
210	4E 16	MOVE	3 16 22
211	F3 20	BITT	25 0
212	CB FF	BRZ	255 4294967295
213	E8 FF	LIM	2 16 255
214	E4 DF	LIM	1 16 223
215	4E 16	MOVE	3 16 22
216	4F F9	MOVE	3 31 25
217	F3 21	BITT	25 1
218	CB FF	BRZ	255 4294967295
219	E8 FF	LIM	2 16 255
21A	E4 DB	LIM	1 16 219
21B	4E 16	MOVE	3 16 22
21C	4F 32	MOVE	3 25 18
21D	E8 FF	LIM	2 16 255
21E	E4 DF	LIM	1 16 223
21F	4E 16	MOVE	3 16 22
220	4F F9	MOVE	3 31 25
221	F3 21	BITT	25 1
222	CB FF	BRZ	255 4294967295
223	E8 FF	LIM	2 16 255
224	E4 DB	LIM	1 16 219
225	4E 16	MOVE	3 16 22
226	4F 30	MOVE	3 25 16
227	9E 51	XOR	3 18 17
228	F2 26	BITT	17 6
229	C8 37	BRZ	255 4294967295
22A	4E 12	MOVE	3 16 18
22B	F2 5	BITT	16 5
22C	CB F1	BRZ	255 4294967295
22D	E8 FF	LIM	2 16 255
22E	E4 DF	LIM	1 16 223
22F	4E 16	MOVE	3 16 22
230	4F F9	MOVE	3 31 25
231	F3 21	BITT	25 1
232	CB FF	BRZ	255 4294967295
233	E8 FF	LIM	2 16 255
234	E4 DB	LIM	1 16 219
235	4E 16	MOVE	3 16 22
236	4F 32	MOVE	3 25 18
237	E8 FF	LIM	2 16 255
238	E4 DF	LIM	1 16 223
239	4E 16	MOVE	3 16 22
23A	4F F9	MOVE	3 31 25
23B	F3 21	BITT	25 1
23C	CB FF	BRZ	255 4294967295
23D	E8 FF	LIM	2 16 255
23E	E4 DB	LIM	1 16 219
23F	4E 16	MOVE	3 16 22
240	4F 30	MOVE	3 25 16
241	9E 51	XOR	3 18 17
242	F2 26	BITT	17 6
243	C8 1D	BRZ	255 4294967295
244	E8 FF	LIM	2 16 255
245	E4 DB	LIM	1 16 219
246	4E 16	MOVE	3 16 22
247	E8 0	LIM	2 16 0
248	E4 F0	LIM	1 16 240
249	4E 19	MOVE	3 16 25
24A	E8 FF	LIM	2 16 255
24B	E4 DF	LIM	1 16 223
24C	4E 16	MOVE	3 16 22
24D	F3 20	BITT	25 0
24E	CB FF	BRZ	255 4294967295
24F	E8 3F	LIM	2 16 63
250	E4 F9	LIM	1 16 249
251	4E 14	MOVE	3 16 20
252	4F 11	MOVE	3 24 17
253	E8 3F	LIM	2 16 63
254	E4 F8	LIM	1 16 248
255	4E 14	MOVE	3 16 20
256	4F 12	MOVE	3 24 18
257	E8 FF	LIM	2 16 255
258	E4 FB	LIM	1 16 251
259	4E 16	MOVE	3 16 22
25A	4E 39	MOVE	3 17 25
25B	E8 FF	LIM	2 16 255
25C	E4 FD	LIM	1 16 253
25D	4E 16	MOVE	3 16 22
25E	B2 0	RET	
25F	4E 59	MOVE	3 18 25
260	B2 0	RET	
261	C0 0	NOP	
262	E8 1	LIM	2 16 1
263	E4 8A	LIM	1 16 138
264	4E 1A	MOVE	3 16 26
265	B0 0	CALL	
266	C0 0	NOP	
267	E8 FF	LIM	2 16 255
268	E4 D8	LIM	1 16 216
269	4E 16	MOVE	3 16 22
26A	E8 0	LIM	2 16 0
26B	E4 0	LIM	1 16 0
26C	4E 19	MOVE	3 16 25
26D	E8 FF	LIM	2 16 255
26E	E4 D9	LIM	1 16 217
26F	4E 16	MOVE	3 16 22
270	E8 A	LIM	2 16 10
271	E4 AA	LIM	1 16 170
272	4E 19	MOVE	3 16 25
273	E8 FF	LIM	2 16 255
274	E4 DB	LIM	1 16 219
275	4E 16	MOVE	3 16 22
276	E8 0	LIM	2 16 0
277	E4 AA	LIM	1 16 170
278	4E 19	MOVE	3 16 25
279	E8 FF	LIM	2 16 255
27A	E4 DF	LIM	1 16 223
27B	4E 16	MOVE	3 16 22
27C	F3 20	BITT	25 0
27D	CB FF	BRZ	255 4294967295
27E	E8 FF	LIM	2 16 255
27F	E4 D8	LIM	1 16 216
280	4E 16	MOVE	3 16 22
281	E8 0	LIM	2 16 0
282	E4 0	LIM	1 16 0
283	4E 19	MOVE	3 16 25
284	E8 FF	LIM	2 16 255
285	E4 D9	LIM	1 16 217
286	4E 16	MOVE	3 16 22
287	E8 5	LIM	2 16 5
288	E4 55	LIM	1 16 85
289	4E 19	MOVE	3 16 25
28A	E8 FF	LIM	2 16 255
28B	E4 DB	LIM	1 16 219
28C	4E 16	MOVE	3 16 22
28D	E8 0	LIM	2 16 0
28E	E4 55	LIM	1 16 85
28F	4E 19	MOVE	3 16 25
290	E8 FF	LIM	2 16 255
291	E4 DF	LIM	1 16 223
292	4E 16	MOVE	3 16 22
293	F3 20	BITT	25 0
294	CB FF	BRZ	255 4294967295
295	E8 FF	LIM	2 16 255
296	E4 D8	LIM	1 16 216
297	4E 16	MOVE	3 16 22
298	E8 0	LIM	2 16 0
299	E4 0	LIM	1 16 0
29A	4E 19	MOVE	3 16 25
29B	E8 FF	LIM	2 16 255
29C	E4 D9	LIM	1 16 217
29D	4E 16	MOVE	3 16 22
29E	E8 A	LIM	2 16 10
29F	E4 AA	LIM	1 16 170
2A0	4E 19	MOVE	3 16 25
2A1	E8 FF	LIM	2 16 255
2A2	E4 DB	LIM	1 16 219
2A3	4E 16	MOVE	3 16 22
2A4	E8 0	LIM	2 16 0
2A5	E4 80	LIM	1 16 128
2A6	4E 19	MOVE	3 16 25
2A7	E8 FF	LIM	2 16 255
2A8	E4 DF	LIM	1 16 223
2A9	4E 16	MOVE	3 16 22
2AA	F3 20	BITT	25 0
2AB	CB FF	BRZ	255 4294967295
2AC	E8 FF	LIM	2 16 255
2AD	E4 D8	LIM	1 16 216
2AE	4E 16	MOVE	3 16 22
2AF	E8 0	LIM	2 16 0
2B0	E4 0	LIM	1 16 0
2B1	4E 19	MOVE	3 16 25
2B2	E8 FF	LIM	2 16 255
2B3	E4 D9	LIM	1 16 217
2B4	4E 16	MOVE	3 16 22
2B5	E8 A	LIM	2 16 10
2B6	E4 AA	LIM	1 16 170
2B7	4E 19	MOVE	3 16 25
2B8	E8 FF	LIM	2 16 255
2B9	E4 DB	LIM	1 16 219
2BA	4E 16	MOVE	3 16 22
2BB	E8 0	LIM	2 16 0
2BC	E4 AA	LIM	1 16 170
2BD	4E 19	MOVE	3 16 25
2BE	E8 FF	LIM	2 16 255
2BF	E4 DF	LIM	1 16 223
2C0	4E 16	MOVE	3 16 22
2C1	F3 20	BITT	25 0
2C2	CB FF	BRZ	255 4294967295
2C3	E8 FF	LIM	2 16 255
2C4	E4 D8	LIM	1 16 216
2C5	4E 16	MOVE	3 16 22
2C6	E8 0	LIM	2 16 0
2C7	E4 0	LIM	1 16 0
2C8	4E 19	MOVE	3 16 25
2C9	E8 FF	LIM	2 16 255
2CA	E4 D9	LIM	1 16 217
2CB	4E 16	MOVE	3 16 22
2CC	E8 5	LIM	2 16 5
2CD	E4 55	LIM	1 16 85
2CE	4E 19	MOVE	3 16 25
2CF	E8 FF	LIM	2 16 255
2D0	E4 DB	LIM	1 16 219
2D1	4E 16	MOVE	3 16 22
2D2	E8 0	LIM	2 16 0
2D3	E4 55	LIM	1 16 85
2D4	4E 19	MOVE	3 16 25
2D5	E8 FF	LIM	2 16 255
2D6	E4 DF	LIM	1 16 223
2D7	4E 16	MOVE	3 16 22
2D8	F3 20	BITT	25 0
2D9	CB FF	BRZ	255 4294967295
2DA	E8 1	LIM	2 16 1
2DB	E4 78	LIM	1 16 120
2DC	4E 1A	MOVE	3 16 26
2DD	B0 0	CALL	
2DE	C0 0	NOP	
2DF	E8 FF	LIM	2 16 255
2E0	E4 DB	LIM	1 16 219
2E1	4E 16	MOVE	3 16 22
2E2	EC 30	LIM	3 16 48
2E3	46 19	MOVE	1 16 25
2E4	E8 FF	LIM	2 16 255
2E5	E4 DF	LIM	1 16 223
2E6	4E 16	MOVE	3 16 22
2E7	F3 20	BITT	25 0
2E8	CB FF	BRZ	255 4294967295
2E9	E8 FF	LIM	2 16 255
2EA	E4 DF	LIM	1 16 223
2EB	4E 16	MOVE	3 16 22
2EC	4F F9	MOVE	3 31 25
2ED	F3 21	BITT	25 1
2EE	CB FF	BRZ	255 4294967295
2EF	E8 FF	LIM	2 16 255
2F0	E4 DB	LIM	1 16 219
2F1	4E 16	MOVE	3 16 22
2F2	4F 32	MOVE	3 25 18
2F3	E8 FF	LIM	2 16 255
2F4	E4 DF	LIM	1 16 223
2F5	4E 16	MOVE	3 16 22
2F6	4F F9	MOVE	3 31 25
2F7	F3 21	BITT	25 1
2F8	CB FF	BRZ	255 4294967295
2F9	E8 FF	LIM	2 16 255
2FA	E4 DB	LIM	1 16 219
2FB	4E 16	MOVE	3 16 22
2FC	4F 30	MOVE	3 25 16
2FD	9E 51	XOR	3 18 17
2FE	F2 26	BITT	17 6
2FF	DB F4	BRNZ	255 4294967295
300	4E 12	MOVE	3 16 18
301	B2 0	RET	
302	C0 0	NOP	
303	E8 1	LIM	2 16 1
304	E4 8A	LIM	1 16 138
305	4E 1A	MOVE	3 16 26
306	B0 0	CALL	
307	C0 0	NOP	
308	E8 FF	LIM	2 16 255
309	E4 D8	LIM	1 16 216
30A	4E 16	MOVE	3 16 22
30B	E8 0	LIM	2 16 0
30C	E4 0	LIM	1 16 0
30D	4E 19	MOVE	3 16 25
30E	E8 FF	LIM	2 16 255
30F	E4 D9	LIM	1 16 217
310	4E 16	MOVE	3 16 22
311	E8 A	LIM	2 16 10
312	E4 AA	LIM	1 16 170
313	4E 19	MOVE	3 16 25
314	E8 FF	LIM	2 16 255
315	E4 DB	LIM	1 16 219
316	4E 16	MOVE	3 16 22
317	E8 0	LIM	2 16 0
318	E4 AA	LIM	1 16 170
319	4E 19	MOVE	3 16 25
31A	E8 FF	LIM	2 16 255
31B	E4 DF	LIM	1 16 223
31C	4E 16	MOVE	3 16 22
31D	F3 20	BITT	25 0
31E	CB FF	BRZ	255 4294967295
31F	E8 FF	LIM	2 16 255
320	E4 D8	LIM	1 16 216
321	4E 16	MOVE	3 16 22
322	E8 0	LIM	2 16 0
323	E4 0	LIM	1 16 0
324	4E 19	MOVE	3 16 25
325	E8 FF	LIM	2 16 255
326	E4 D9	LIM	1 16 217
327	4E 16	MOVE	3 16 22
328	E8 5	LIM	2 16 5
329	E4 55	LIM	1 16 85
32A	4E 19	MOVE	3 16 25
32B	E8 FF	LIM	2 16 255
32C	E4 DB	LIM	1 16 219
32D	4E 16	MOVE	3 16 22
32E	E8 0	LIM	2 16 0
32F	E4 55	LIM	1 16 85
330	4E 19	MOVE	3 16 25
331	E8 FF	LIM	2 16 255
332	E4 DF	LIM	1 16 223
333	4E 16	MOVE	3 16 22
334	F3 20	BITT	25 0
335	CB FF	BRZ	255 4294967295
336	E8 FF	LIM	2 16 255
337	E4 D8	LIM	1 16 216
338	4E 16	MOVE	3 16 22
339	E8 0	LIM	2 16 0
33A	E4 0	LIM	1 16 0
33B	4E 19	MOVE	3 16 25
33C	E8 FF	LIM	2 16 255
33D	E4 D9	LIM	1 16 217
33E	4E 16	MOVE	3 16 22
33F	E8 A	LIM	2 16 10
340	E4 AA	LIM	1 16 170
341	4E 19	MOVE	3 16 25
342	E8 FF	LIM	2 16 255
343	E4 DB	LIM	1 16 219
344	4E 16	MOVE	3 16 22
345	E8 0	LIM	2 16 0
346	E4 C0	LIM	1 16 192
347	4E 19	MOVE	3 16 25
348	E8 FF	LIM	2 16 255
349	E4 DF	LIM	1 16 223
34A	4E 16	MOVE	3 16 22
34B	F3 20	BITT	25 0
34C	CB FF	BRZ	255 4294967295
34D	E8 FF	LIM	2 16 255
34E	E4 DB	LIM	1 16 219
34F	4E 16	MOVE	3 16 22
350	E8 0	LIM	2 16 0
351	E4 A0	LIM	1 16 160
352	4E 19	MOVE	3 16 25
353	E8 FF	LIM	2 16 255
354	E4 DF	LIM	1 16 223
355	4E 16	MOVE	3 16 22
356	F3 20	BITT	25 0
357	CB FF	BRZ	255 4294967295
358	E8 1	LIM	2 16 1
359	E4 78	LIM	1 16 120
35A	4E 1A	MOVE	3 16 26
35B	B0 0	CALL	
35C	C0 0	NOP	
35D	E8 FF	LIM	2 16 255
35E	E4 DB	LIM	1 16 219
35F	4E 16	MOVE	3 16 22
360	EC 0	LIM	3 16 0
361	46 19	MOVE	1 16 25
362	E8 FF	LIM	2 16 255
363	E4 DF	LIM	1 16 223
364	4E 16	MOVE	3 16 22
365	F3 20	BITT	25 0
366	CB FF	BRZ	255 4294967295
367	E8 FF	LIM	2 16 255
368	E4 DF	LIM	1 16 223
369	4E 16	MOVE	3 16 22
36A	4F F9	MOVE	3 31 25
36B	F3 21	BITT	25 1
36C	CB FF	BRZ	255 4294967295
36D	E8 FF	LIM	2 16 255
36E	E4 DB	LIM	1 16 219
36F	4E 16	MOVE	3 16 22
370	4F 32	MOVE	3 25 18
371	E8 FF	LIM	2 16 255
372	E4 DF	LIM	1 16 223
373	4E 16	MOVE	3 16 22
374	4F F9	MOVE	3 31 25
375	F3 21	BITT	25 1
376	CB FF	BRZ	255 4294967295
377	E8 FF	LIM	2 16 255
378	E4 DB	LIM	1 16 219
379	4E 16	MOVE	3 16 22
37A	4F 30	MOVE	3 25 16
37B	9E 51	XOR	3 18 17
37C	F2 26	BITT	17 6
37D	DB F4	BRNZ	255 4294967295
37E	4E 12	MOVE	3 16 18
37F	E8 FF	LIM	2 16 255
380	E4 DB	LIM	1 16 219
381	4E 16	MOVE	3 16 22
382	E8 0	LIM	2 16 0
383	E4 90	LIM	1 16 144
384	4E 19	MOVE	3 16 25
385	E8 FF	LIM	2 16 255
386	E4 DF	LIM	1 16 223
387	4E 16	MOVE	3 16 22
388	F3 20	BITT	25 0
389	CB FF	BRZ	255 4294967295
38A	E8 FF	LIM	2 16 255
38B	E4 DB	LIM	1 16 219
38C	4E 16	MOVE	3 16 22
38D	E8 0	LIM	2 16 0
38E	E4 0	LIM	1 16 0
38F	4E 19	MOVE	3 16 25
390	E8 FF	LIM	2 16 255
391	E4 DF	LIM	1 16 223
392	4E 16	MOVE	3 16 22
393	F3 20	BITT	25 0
394	CB FF	BRZ	255 4294967295
395	C0 0	NOP	
396	B2 0	RET	
397	C0 0	NOP	
398	E8 FF	LIM	2 16 255
399	E4 DE	LIM	1 16 222
39A	4E 16	MOVE	3 16 22
39B	EC 1	LIM	3 16 1
39C	4E 19	MOVE	3 16 25
39D	E9 3F	LIM	2 17 63
39E	E5 FE	LIM	1 17 254
39F	4E 34	MOVE	3 17 20
3A0	4F 3	MOVE	3 24 3
3A1	E8 1F	LIM	2 16 31
3A2	E4 F8	LIM	1 16 248
3A3	4E 5	MOVE	3 16 5
3A4	4C 63	TEST	3 3
3A5	D8 3	BRNZ	255 4294967295
3A6	C0 0	NOP	
3A7	B2 0	RET	
3A8	E8 1	LIM	2 16 1
3A9	E4 A7	LIM	1 16 167
3AA	4E 1A	MOVE	3 16 26
3AB	B0 0	CALL	
3AC	C0 0	NOP	
3AD	4C B4	MOVE	3 5 20
3AE	4D 78	MOVE	3 11 24
3AF	EC 1	LIM	3 16 1
3B0	C A5	ADD	3 5 5
3B1	EC 1	LIM	3 16 1
3B2	2C 63	SUB	3 3 3
3B3	DB F5	BRNZ	255 4294967295
3B4	C0 0	NOP	
3B5	B2 0	RET	
3B6	C0 0	NOP	
3B7	E9 3F	LIM	2 17 63
3B8	E5 FE	LIM	1 17 254
3B9	4E 34	MOVE	3 17 20
3BA	4F 3	MOVE	3 24 3
3BB	E8 1F	LIM	2 16 31
3BC	E4 F8	LIM	1 16 248
3BD	4E 5	MOVE	3 16 5
3BE	4C 63	TEST	3 3
3BF	D8 3	BRNZ	255 4294967295
3C0	C0 0	NOP	
3C1	B2 0	RET	
3C2	4C B4	MOVE	3 5 20
3C3	4F 6	MOVE	3 24 6
3C4	E8 1	LIM	2 16 1
3C5	E4 BB	LIM	1 16 187
3C6	4E 1A	MOVE	3 16 26
3C7	4C C0	MOVE	3 6 0
3C8	B0 0	CALL	
3C9	C0 0	NOP	
3CA	E8 3F	LIM	2 16 63
3CB	E4 F9	LIM	1 16 249
3CC	4E 14	MOVE	3 16 20
3CD	4F 11	MOVE	3 24 17
3CE	E8 3F	LIM	2 16 63
3CF	E4 F8	LIM	1 16 248
3D0	4E 14	MOVE	3 16 20
3D1	4F 12	MOVE	3 24 18
3D2	EC 1	LIM	3 16 1
3D3	E 52	ADD	3 18 18
3D4	EC 0	LIM	3 16 0
3D5	1E 31	ADDC	3 17 17
3D6	E8 3F	LIM	2 16 63
3D7	E4 F9	LIM	1 16 249
3D8	4E 14	MOVE	3 16 20
3D9	4E 38	MOVE	3 17 24
3DA	E8 3F	LIM	2 16 63
3DB	E4 F8	LIM	1 16 248
3DC	4E 14	MOVE	3 16 20
3DD	4E 58	MOVE	3 18 24
3DE	E8 1	LIM	2 16 1
3DF	E4 BB	LIM	1 16 187
3E0	4E 1A	MOVE	3 16 26
3E1	40 C0	MOVE	0 6 0
3E2	B0 0	CALL	
3E3	C0 0	NOP	
3E4	E8 3F	LIM	2 16 63
3E5	E4 F9	LIM	1 16 249
3E6	4E 14	MOVE	3 16 20
3E7	4F 11	MOVE	3 24 17
3E8	E8 3F	LIM	2 16 63
3E9	E4 F8	LIM	1 16 248
3EA	4E 14	MOVE	3 16 20
3EB	4F 12	MOVE	3 24 18
3EC	EC 1	LIM	3 16 1
3ED	E 52	ADD	3 18 18
3EE	EC 0	LIM	3 16 0
3EF	1E 31	ADDC	3 17 17
3F0	E8 3F	LIM	2 16 63
3F1	E4 F9	LIM	1 16 249
3F2	4E 14	MOVE	3 16 20
3F3	4E 38	MOVE	3 17 24
3F4	E8 3F	LIM	2 16 63
3F5	E4 F8	LIM	1 16 248
3F6	4E 14	MOVE	3 16 20
3F7	4E 58	MOVE	3 18 24
3F8	EC 1	LIM	3 16 1
3F9	C A5	ADD	3 5 5
3FA	EC 1	LIM	3 16 1
3FB	2C 63	SUB	3 3 3
3FC	DB C6	BRNZ	255 4294967295
3FD	C0 0	NOP	
3FE	B2 0	RET	
3FF	C0 0	NOP	
400	E8 FF	LIM	2 16 255
401	E4 D8	LIM	1 16 216
402	4E 16	MOVE	3 16 22
403	E8 0	LIM	2 16 0
404	E4 0	LIM	1 16 0
405	4E 19	MOVE	3 16 25
406	E8 FF	LIM	2 16 255
407	E4 D9	LIM	1 16 217
408	4E 16	MOVE	3 16 22
409	E8 A	LIM	2 16 10
40A	E4 AA	LIM	1 16 170
40B	4E 19	MOVE	3 16 25
40C	E8 FF	LIM	2 16 255
40D	E4 DB	LIM	1 16 219
40E	4E 16	MOVE	3 16 22
40F	E8 0	LIM	2 16 0
410	E4 AA	LIM	1 16 170
411	4E 19	MOVE	3 16 25
412	E8 FF	LIM	2 16 255
413	E4 DF	LIM	1 16 223
414	4E 16	MOVE	3 16 22
415	F3 20	BITT	25 0
416	CB FF	BRZ	255 4294967295
417	E8 FF	LIM	2 16 255
418	E4 D8	LIM	1 16 216
419	4E 16	MOVE	3 16 22
41A	E8 0	LIM	2 16 0
41B	E4 0	LIM	1 16 0
41C	4E 19	MOVE	3 16 25
41D	E8 FF	LIM	2 16 255
41E	E4 D9	LIM	1 16 217
41F	4E 16	MOVE	3 16 22
420	E8 5	LIM	2 16 5
421	E4 55	LIM	1 16 85
422	4E 19	MOVE	3 16 25
423	E8 FF	LIM	2 16 255
424	E4 DB	LIM	1 16 219
425	4E 16	MOVE	3 16 22
426	E8 0	LIM	2 16 0
427	E4 55	LIM	1 16 85
428	4E 19	MOVE	3 16 25
429	E8 FF	LIM	2 16 255
42A	E4 DF	LIM	1 16 223
42B	4E 16	MOVE	3 16 22
42C	F3 20	BITT	25 0
42D	CB FF	BRZ	255 4294967295
42E	E8 FF	LIM	2 16 255
42F	E4 D8	LIM	1 16 216
430	4E 16	MOVE	3 16 22
431	E8 0	LIM	2 16 0
432	E4 0	LIM	1 16 0
433	4E 19	MOVE	3 16 25
434	E8 FF	LIM	2 16 255
435	E4 D9	LIM	1 16 217
436	4E 16	MOVE	3 16 22
437	E8 A	LIM	2 16 10
438	E4 AA	LIM	1 16 170
439	4E 19	MOVE	3 16 25
43A	E8 FF	LIM	2 16 255
43B	E4 DB	LIM	1 16 219
43C	4E 16	MOVE	3 16 22
43D	E8 0	LIM	2 16 0
43E	E4 C0	LIM	1 16 192
43F	4E 19	MOVE	3 16 25
440	E8 FF	LIM	2 16 255
441	E4 DF	LIM	1 16 223
442	4E 16	MOVE	3 16 22
443	F3 20	BITT	25 0
444	CB FF	BRZ	255 4294967295
445	E8 FF	LIM	2 16 255
446	E4 DB	LIM	1 16 219
447	4E 16	MOVE	3 16 22
448	E8 0	LIM	2 16 0
449	E4 80	LIM	1 16 128
44A	4E 19	MOVE	3 16 25
44B	E8 FF	LIM	2 16 255
44C	E4 DF	LIM	1 16 223
44D	4E 16	MOVE	3 16 22
44E	F3 20	BITT	25 0
44F	CB FF	BRZ	255 4294967295
450	E8 FF	LIM	2 16 255
451	E4 D8	LIM	1 16 216
452	4E 16	MOVE	3 16 22
453	E8 0	LIM	2 16 0
454	E4 0	LIM	1 16 0
455	4E 19	MOVE	3 16 25
456	E8 FF	LIM	2 16 255
457	E4 D9	LIM	1 16 217
458	4E 16	MOVE	3 16 22
459	E8 0	LIM	2 16 0
45A	E4 0	LIM	1 16 0
45B	4E 19	MOVE	3 16 25
45C	E8 FF	LIM	2 16 255
45D	E4 DB	LIM	1 16 219
45E	4E 16	MOVE	3 16 22
45F	EC 30	LIM	3 16 48
460	46 19	MOVE	1 16 25
461	E8 FF	LIM	2 16 255
462	E4 DF	LIM	1 16 223
463	4E 16	MOVE	3 16 22
464	F3 20	BITT	25 0
465	CB FF	BRZ	255 4294967295
466	E8 FF	LIM	2 16 255
467	E4 DF	LIM	1 16 223
468	4E 16	MOVE	3 16 22
469	4F F9	MOVE	3 31 25
46A	F3 21	BITT	25 1
46B	CB FF	BRZ	255 4294967295
46C	E8 FF	LIM	2 16 255
46D	E4 DB	LIM	1 16 219
46E	4E 16	MOVE	3 16 22
46F	4F 32	MOVE	3 25 18
470	E8 FF	LIM	2 16 255
471	E4 DF	LIM	1 16 223
472	4E 16	MOVE	3 16 22
473	4F F9	MOVE	3 31 25
474	F3 21	BITT	25 1
475	CB FF	BRZ	255 4294967295
476	E8 FF	LIM	2 16 255
477	E4 DB	LIM	1 16 219
478	4E 16	MOVE	3 16 22
479	4F 30	MOVE	3 25 16
47A	9E 51	XOR	3 18 17
47B	F2 26	BITT	17 6
47C	DB F4	BRNZ	255 4294967295
47D	4E 12	MOVE	3 16 18
47E	E8 FF	LIM	2 16 255
47F	E4 DB	LIM	1 16 219
480	4E 16	MOVE	3 16 22
481	E8 0	LIM	2 16 0
482	E4 90	LIM	1 16 144
483	4E 19	MOVE	3 16 25
484	E8 FF	LIM	2 16 255
485	E4 DF	LIM	1 16 223
486	4E 16	MOVE	3 16 22
487	F3 20	BITT	25 0
488	CB FF	BRZ	255 4294967295
489	E8 FF	LIM	2 16 255
48A	E4 DB	LIM	1 16 219
48B	4E 16	MOVE	3 16 22
48C	E8 0	LIM	2 16 0
48D	E4 0	LIM	1 16 0
48E	4E 19	MOVE	3 16 25
48F	E8 FF	LIM	2 16 255
490	E4 DF	LIM	1 16 223
491	4E 16	MOVE	3 16 22
492	F3 20	BITT	25 0
493	CB FF	BRZ	255 4294967295
494	C0 0	NOP	
495	B2 0	RET	
496	C0 0	NOP	
497	E9 3F	LIM	2 17 63
498	E5 F9	LIM	1 17 249
499	4E 34	MOVE	3 17 20
49A	4F F8	MOVE	3 31 24
49B	E9 3F	LIM	2 17 63
49C	E5 F8	LIM	1 17 248
49D	4E 34	MOVE	3 17 20
49E	4F F8	MOVE	3 31 24
49F	E8 3	LIM	2 16 3
4A0	E4 3	LIM	1 16 3
4A1	4E 1A	MOVE	3 16 26
4A2	B0 0	CALL	
4A3	C0 0	NOP	
4A4	E9 3F	LIM	2 17 63
4A5	E5 F9	LIM	1 17 249
4A6	4E 34	MOVE	3 17 20
4A7	4F 3	MOVE	3 24 3
4A8	E9 3F	LIM	2 17 63
4A9	E5 F8	LIM	1 17 248
4AA	4E 34	MOVE	3 17 20
4AB	4F 4	MOVE	3 24 4
4AC	E8 FF	LIM	2 16 255
4AD	E4 FC	LIM	1 16 252
4AE	4E 16	MOVE	3 16 22
4AF	4C 79	MOVE	3 3 25
4B0	D8 7	BRNZ	255 4294967295
4B1	E8 20	LIM	2 16 32
4B2	E4 0	LIM	1 16 0
4B3	C 84	ADD	3 4 4
4B4	4F F0	MOVE	3 31 16
4B5	1C 63	ADDC	3 3 3
4B6	D0 3	BRA	255 4294967295
4B7	EC 1	LIM	3 16 1
4B8	C 63	ADD	3 3 3
4B9	E9 3F	LIM	2 17 63
4BA	E5 F9	LIM	1 17 249
4BB	4E 34	MOVE	3 17 20
4BC	4C 78	MOVE	3 3 24
4BD	E9 3F	LIM	2 17 63
4BE	E5 F8	LIM	1 17 248
4BF	4E 34	MOVE	3 17 20
4C0	4C 98	MOVE	3 4 24
4C1	F0 66	BITT	3 6
4C2	CB DD	BRZ	255 4294967295
4C3	C0 0	NOP	
4C4	B2 0	RET	
4C5	C0 0	NOP	
4C6	E9 3F	LIM	2 17 63
4C7	E5 F9	LIM	1 17 249
4C8	4E 34	MOVE	3 17 20
4C9	4F F8	MOVE	3 31 24
4CA	E9 3F	LIM	2 17 63
4CB	E5 F8	LIM	1 17 248
4CC	4E 34	MOVE	3 17 20
4CD	4F F8	MOVE	3 31 24
4CE	E8 2	LIM	2 16 2
4CF	E4 62	LIM	1 16 98
4D0	4E 1A	MOVE	3 16 26
4D1	B0 0	CALL	
4D2	C0 0	NOP	
4D3	E9 3F	LIM	2 17 63
4D4	E5 F9	LIM	1 17 249
4D5	4E 34	MOVE	3 17 20
4D6	4F 3	MOVE	3 24 3
4D7	E9 3F	LIM	2 17 63
4D8	E5 F8	LIM	1 17 248
4D9	4E 34	MOVE	3 17 20
4DA	4F 4	MOVE	3 24 4
4DB	E8 FF	LIM	2 16 255
4DC	E4 FC	LIM	1 16 252
4DD	4E 16	MOVE	3 16 22
4DE	4C 79	MOVE	3 3 25
4DF	D8 7	BRNZ	255 4294967295
4E0	E8 20	LIM	2 16 32
4E1	E4 0	LIM	1 16 0
4E2	C 84	ADD	3 4 4
4E3	4F F0	MOVE	3 31 16
4E4	1C 63	ADDC	3 3 3
4E5	D0 3	BRA	255 4294967295
4E6	EC 1	LIM	3 16 1
4E7	C 63	ADD	3 3 3
4E8	E9 3F	LIM	2 17 63
4E9	E5 F9	LIM	1 17 249
4EA	4E 34	MOVE	3 17 20
4EB	4C 78	MOVE	3 3 24
4EC	E9 3F	LIM	2 17 63
4ED	E5 F8	LIM	1 17 248
4EE	4E 34	MOVE	3 17 20
4EF	4C 98	MOVE	3 4 24
4F0	F0 66	BITT	3 6
4F1	CB DD	BRZ	255 4294967295
4F2	C0 0	NOP	
4F3	B2 0	RET	
4F4	C0 0	NOP	
4F5	E8 E0	LIM	2 16 224
4F6	E4 0	LIM	1 16 0
4F7	B2 0	RET	
4F8	4E B	MOVE	3 16 11
4F9	B2 0	RET	
4FA	C0 0	NOP	
4FB	E9 1F	LIM	2 17 31
4FC	E5 F5	LIM	1 17 245
4FD	4E 34	MOVE	3 17 20
4FE	4F 4	MOVE	3 24 4
4FF	E9 1F	LIM	2 17 31
500	E5 F4	LIM	1 17 244
501	4E 34	MOVE	3 17 20
502	4F 3	MOVE	3 24 3
503	E9 FF	LIM	2 17 255
504	E5 E0	LIM	1 17 224
505	4E 36	MOVE	3 17 22
506	4C 99	MOVE	3 4 25
507	E9 FF	LIM	2 17 255
508	E5 E1	LIM	1 17 225
509	4E 36	MOVE	3 17 22
50A	4C 79	MOVE	3 3 25
50B	B2 0	RET	
50C	C0 0	NOP	
50D	E8 FF	LIM	2 16 255
50E	E4 E6	LIM	1 16 230
50F	4E 16	MOVE	3 16 22
510	EC 0	LIM	3 16 0
511	4E 19	MOVE	3 16 25
512	E9 1F	LIM	2 17 31
513	E5 F5	LIM	1 17 245
514	4E 34	MOVE	3 17 20
515	4F 4	MOVE	3 24 4
516	E9 1F	LIM	2 17 31
517	E5 F4	LIM	1 17 244
518	4E 34	MOVE	3 17 20
519	4F 3	MOVE	3 24 3
51A	E9 FF	LIM	2 17 255
51B	E5 E4	LIM	1 17 228
51C	4E 36	MOVE	3 17 22
51D	4C 99	MOVE	3 4 25
51E	E9 FF	LIM	2 17 255
51F	E5 E5	LIM	1 17 229
520	4E 36	MOVE	3 17 22
521	4C 79	MOVE	3 3 25
522	E8 FF	LIM	2 16 255
523	E4 E7	LIM	1 16 231
524	4E 16	MOVE	3 16 22
525	F3 21	BITT	25 1
526	CB FF	BRZ	255 4294967295
527	C0 0	NOP	
528	B2 0	RET	
529	C0 0	NOP	
52A	E8 FF	LIM	2 16 255
52B	E4 E7	LIM	1 16 231
52C	4E 16	MOVE	3 16 22
52D	4F F9	MOVE	3 31 25
52E	F3 21	BITT	25 1
52F	CB FF	BRZ	255 4294967295
530	E4 E3	LIM	1 16 227
531	4E 16	MOVE	3 16 22
532	B2 0	RET	
533	4F 2B	MOVE	3 25 11
534	E8 FF	LIM	2 16 255
535	E4 E3	LIM	1 16 227
536	4E 16	MOVE	3 16 22
537	4C 19	MOVE	3 0 25
538	E8 FF	LIM	2 16 255
539	E4 E7	LIM	1 16 231
53A	4E 16	MOVE	3 16 22
53B	F3 20	BITT	25 0
53C	CB FF	BRZ	255 4294967295
53D	C0 0	NOP	
53E	B2 0	RET	
53F	C0 0	NOP	
540	E8 FF	LIM	2 16 255
541	E4 E6	LIM	1 16 230
542	4E 16	MOVE	3 16 22
543	EC 1	LIM	3 16 1
544	4E 19	MOVE	3 16 25
545	E9 3F	LIM	2 17 63
546	E5 FD	LIM	1 17 253
547	4E 34	MOVE	3 17 20
548	4F 3	MOVE	3 24 3
549	E8 1F	LIM	2 16 31
54A	E4 F8	LIM	1 16 248
54B	4E 5	MOVE	3 16 5
54C	4C 63	TEST	3 3
54D	D8 3	BRNZ	255 4294967295
54E	C0 0	NOP	
54F	B2 0	RET	
550	E8 5	LIM	2 16 5
551	E4 2A	LIM	1 16 42
552	4E 1A	MOVE	3 16 26
553	B0 0	CALL	
554	C0 0	NOP	
555	4C B4	MOVE	3 5 20
556	4D 78	MOVE	3 11 24
557	EC 1	LIM	3 16 1
558	C A5	ADD	3 5 5
559	EC 1	LIM	3 16 1
55A	2C 63	SUB	3 3 3
55B	DB F5	BRNZ	255 4294967295
55C	C0 0	NOP	
55D	B2 0	RET	
55E	C0 0	NOP	
55F	E8 FF	LIM	2 16 255
560	E4 E2	LIM	1 16 226
561	4E 16	MOVE	3 16 22
562	EC 1	LIM	3 16 1
563	4E 19	MOVE	3 16 25
564	E9 3F	LIM	2 17 63
565	E5 FD	LIM	1 17 253
566	4E 34	MOVE	3 17 20
567	4F 3	MOVE	3 24 3
568	E8 1F	LIM	2 16 31
569	E4 F8	LIM	1 16 248
56A	4E 5	MOVE	3 16 5
56B	4C 63	TEST	3 3
56C	D8 3	BRNZ	255 4294967295
56D	C0 0	NOP	
56E	B2 0	RET	
56F	4C B4	MOVE	3 5 20
570	4F 6	MOVE	3 24 6
571	E8 5	LIM	2 16 5
572	E4 34	LIM	1 16 52
573	4E 1A	MOVE	3 16 26
574	4C C0	MOVE	3 6 0
575	B0 0	CALL	
576	C0 0	NOP	
577	EC 1	LIM	3 16 1
578	C A5	ADD	3 5 5
579	EC 1	LIM	3 16 1
57A	2C 63	SUB	3 3 3
57B	DB F4	BRNZ	255 4294967295
57C	C0 0	NOP	
57D	B2 0	RET	
57E	C0 0	NOP	
57F	E8 E0	LIM	2 16 224
580	E4 0	LIM	1 16 0
581	B2 0	RET	
582	4E B	MOVE	3 16 11
583	E8 FF	LIM	2 16 255
584	E4 D2	LIM	1 16 210
585	4E 16	MOVE	3 16 22
586	4F F9	MOVE	3 31 25
587	E8 FF	LIM	2 16 255
588	E4 D6	LIM	1 16 214
589	4E 16	MOVE	3 16 22
58A	4F F9	MOVE	3 31 25
58B	E9 FF	LIM	2 17 255
58C	E5 D0	LIM	1 17 208
58D	4E 36	MOVE	3 17 22
58E	4F F9	MOVE	3 31 25
58F	E9 FF	LIM	2 17 255
590	E5 D1	LIM	1 17 209
591	4E 36	MOVE	3 17 22
592	B2 0	RET	
593	4F F9	MOVE	3 31 25
594	E8 FF	LIM	2 16 255
595	E4 D2	LIM	1 16 210
596	4E 16	MOVE	3 16 22
597	EC 4	LIM	3 16 4
598	4E 19	MOVE	3 16 25
599	E8 1F	LIM	2 16 31
59A	E4 F3	LIM	1 16 243
59B	4E 14	MOVE	3 16 20
59C	4F 11	MOVE	3 24 17
59D	E8 1F	LIM	2 16 31
59E	E4 F2	LIM	1 16 242
59F	4E 14	MOVE	3 16 20
5A0	4F 12	MOVE	3 24 18
5A1	E8 FF	LIM	2 16 255
5A2	E4 D0	LIM	1 16 208
5A3	4E 16	MOVE	3 16 22
5A4	4E 39	MOVE	3 17 25
5A5	E8 FF	LIM	2 16 255
5A6	E4 D1	LIM	1 16 209
5A7	4E 16	MOVE	3 16 22
5A8	B2 0	RET	
5A9	4E 59	MOVE	3 18 25
5AA	E8 FF	LIM	2 16 255
5AB	E4 D6	LIM	1 16 214
5AC	4E 16	MOVE	3 16 22
5AD	EC 4	LIM	3 16 4
5AE	4E 19	MOVE	3 16 25
5AF	E8 1F	LIM	2 16 31
5B0	E4 F3	LIM	1 16 243
5B1	4E 14	MOVE	3 16 20
5B2	4F 11	MOVE	3 24 17
5B3	E8 1F	LIM	2 16 31
5B4	E4 F2	LIM	1 16 242
5B5	4E 14	MOVE	3 16 20
5B6	4F 12	MOVE	3 24 18
5B7	E8 FF	LIM	2 16 255
5B8	E4 D4	LIM	1 16 212
5B9	4E 16	MOVE	3 16 22
5BA	4E 39	MOVE	3 17 25
5BB	E8 FF	LIM	2 16 255
5BC	E4 D5	LIM	1 16 213
5BD	4E 16	MOVE	3 16 22
5BE	B2 0	RET	
5BF	4E 59	MOVE	3 18 25
5C0	E8 FF	LIM	2 16 255
5C1	E4 D7	LIM	1 16 215
5C2	4E 16	MOVE	3 16 22
5C3	F3 21	BITT	25 1
5C4	CB FF	BRZ	255 4294967295
5C5	E8 FF	LIM	2 16 255
5C6	E4 D3	LIM	1 16 211
5C7	4E 16	MOVE	3 16 22
5C8	4F 2B	MOVE	3 25 11
5C9	E8 FF	LIM	2 16 255
5CA	E4 D7	LIM	1 16 215
5CB	4E 16	MOVE	3 16 22
5CC	B2 0	RET	
5CD	4F F9	MOVE	3 31 25
5CE	E8 FF	LIM	2 16 255
5CF	E4 D7	LIM	1 16 215
5D0	4E 16	MOVE	3 16 22
5D1	F3 20	BITT	25 0
5D2	CB FF	BRZ	255 4294967295
5D3	E8 FF	LIM	2 16 255
5D4	E4 D3	LIM	1 16 211
5D5	4E 16	MOVE	3 16 22
5D6	B2 0	RET	
5D7	4C 19	MOVE	3 0 25
5D8	E8 FF	LIM	2 16 255
5D9	E4 D6	LIM	1 16 214
5DA	4E 16	MOVE	3 16 22
5DB	EC 4	LIM	3 16 4
5DC	4E 19	MOVE	3 16 25
5DD	E9 3F	LIM	2 17 63
5DE	E5 FC	LIM	1 17 252
5DF	4E 34	MOVE	3 17 20
5E0	4F 3	MOVE	3 24 3
5E1	E8 1F	LIM	2 16 31
5E2	E4 F8	LIM	1 16 248
5E3	4E 5	MOVE	3 16 5
5E4	4C 63	TEST	3 3
5E5	D8 3	BRNZ	255 4294967295
5E6	C0 0	NOP	
5E7	B2 0	RET	
5E8	E8 5	LIM	2 16 5
5E9	E4 C0	LIM	1 16 192
5EA	4E 1A	MOVE	3 16 26
5EB	B0 0	CALL	
5EC	C0 0	NOP	
5ED	4C B4	MOVE	3 5 20
5EE	4D 78	MOVE	3 11 24
5EF	EC 1	LIM	3 16 1
5F0	C A5	ADD	3 5 5
5F1	EC 1	LIM	3 16 1
5F2	2C 63	SUB	3 3 3
5F3	DB F5	BRNZ	255 4294967295
5F4	C0 0	NOP	
5F5	B2 0	RET	
5F6	C0 0	NOP	
5F7	E8 FF	LIM	2 16 255
5F8	E4 D2	LIM	1 16 210
5F9	4E 16	MOVE	3 16 22
5FA	EC 4	LIM	3 16 4
5FB	4E 19	MOVE	3 16 25
5FC	E9 3F	LIM	2 17 63
5FD	E5 FC	LIM	1 17 252
5FE	4E 34	MOVE	3 17 20
5FF	4F 3	MOVE	3 24 3
600	E8 1F	LIM	2 16 31
601	E4 F8	LIM	1 16 248
602	4E 5	MOVE	3 16 5
603	4C 63	TEST	3 3
604	D8 3	BRNZ	255 4294967295
605	C0 0	NOP	
606	B2 0	RET	
607	4C B4	MOVE	3 5 20
608	4F 0	MOVE	3 24 0
609	E8 5	LIM	2 16 5
60A	E4 CE	LIM	1 16 206
60B	4E 1A	MOVE	3 16 26
60C	B0 0	CALL	
60D	C0 0	NOP	
60E	EC 1	LIM	3 16 1
60F	C A5	ADD	3 5 5
610	EC 1	LIM	3 16 1
611	2C 63	SUB	3 3 3
612	DB F5	BRNZ	255 4294967295
613	C0 0	NOP	
614	B2 0	RET	
615	C0 0	NOP	
616	E8 0	LIM	2 16 0
617	E4 BB	LIM	1 16 187
618	4E 1A	MOVE	3 16 26
619	B0 0	CALL	
61A	C0 0	NOP	
61B	E4 DE	LIM	1 16 222
61C	95 6B	XOR	1 11 11
61D	DB F9	BRNZ	255 4294967295
61E	C0 0	NOP	
61F	B0 0	CALL	
620	C0 0	NOP	
621	E4 AD	LIM	1 16 173
622	95 6B	XOR	1 11 11
623	DB F3	BRNZ	255 4294967295
624	C0 0	NOP	
625	B0 0	CALL	
626	C0 0	NOP	
627	E4 BE	LIM	1 16 190
628	95 6B	XOR	1 11 11
629	DB ED	BRNZ	255 4294967295
62A	C0 0	NOP	
62B	B0 0	CALL	
62C	C0 0	NOP	
62D	E4 EF	LIM	1 16 239
62E	95 6B	XOR	1 11 11
62F	DB E7	BRNZ	255 4294967295
630	C0 0	NOP	
631	E8 0	LIM	2 16 0
632	E4 C6	LIM	1 16 198
633	4E 1A	MOVE	3 16 26
634	E4 55	LIM	1 16 85
635	46 0	MOVE	1 16 0
636	B0 0	CALL	
637	C0 0	NOP	
638	E4 AA	LIM	1 16 170
639	46 0	MOVE	1 16 0
63A	B0 0	CALL	
63B	C0 0	NOP	
63C	E4 F0	LIM	1 16 240
63D	46 0	MOVE	1 16 0
63E	B0 0	CALL	
63F	C0 0	NOP	
640	E4 F	LIM	1 16 15
641	46 0	MOVE	1 16 0
642	B0 0	CALL	
643	C0 0	NOP	
644	E8 1F	LIM	2 16 31
645	E4 E4	LIM	1 16 228
646	4E 14	MOVE	3 16 20
647	4F 14	MOVE	3 24 20
648	EC 1	LIM	3 16 1
649	4F 3	MOVE	3 24 3
64A	E 94	ADD	3 20 20
64B	4F 4	MOVE	3 24 4
64C	40 80	MOVE	0 4 0
64D	B0 0	CALL	
64E	C0 0	NOP	
64F	44 80	MOVE	1 4 0
650	B0 0	CALL	
651	C0 0	NOP	
652	40 60	MOVE	0 3 0
653	B0 0	CALL	
654	C0 0	NOP	
655	44 60	MOVE	1 3 0
656	B0 0	CALL	
657	C0 0	NOP	
658	E9 FF	LIM	2 17 255
659	E5 FC	LIM	1 17 252
65A	4E 36	MOVE	3 17 22
65B	E8 BE	LIM	2 16 190
65C	E4 EF	LIM	1 16 239
65D	4E 19	MOVE	3 16 25
65E	E8 0	LIM	2 16 0
65F	E4 BB	LIM	1 16 187
660	4E 1A	MOVE	3 16 26
661	B0 0	CALL	
662	C0 0	NOP	
663	E4 DE	LIM	1 16 222
664	95 7F	XOR	1 11 31
665	CB BA	BRZ	255 4294967295
666	C0 0	NOP	
667	E4 1	LIM	1 16 1
668	95 7F	XOR	1 11 31
669	D8 9	BRNZ	255 4294967295
66A	C0 0	NOP	
66B	E8 7	LIM	2 16 7
66C	E4 F	LIM	1 16 15
66D	4E 1A	MOVE	3 16 26
66E	B0 0	CALL	
66F	C0 0	NOP	
670	D3 EE	BRA	255 4294967295
671	C0 0	NOP	
672	E4 2	LIM	1 16 2
673	95 7F	XOR	1 11 31
674	D8 9	BRNZ	255 4294967295
675	C0 0	NOP	
676	E8 7	LIM	2 16 7
677	E4 B1	LIM	1 16 177
678	4E 1A	MOVE	3 16 26
679	B0 0	CALL	
67A	C0 0	NOP	
67B	D3 E3	BRA	255 4294967295
67C	C0 0	NOP	
67D	E4 4	LIM	1 16 4
67E	95 7F	XOR	1 11 31
67F	D8 9	BRNZ	255 4294967295
680	C0 0	NOP	
681	E8 8	LIM	2 16 8
682	E4 62	LIM	1 16 98
683	4E 1A	MOVE	3 16 26
684	B0 0	CALL	
685	C0 0	NOP	
686	D3 D8	BRA	255 4294967295
687	C0 0	NOP	
688	E4 5	LIM	1 16 5
689	95 7F	XOR	1 11 31
68A	D8 9	BRNZ	255 4294967295
68B	C0 0	NOP	
68C	E8 8	LIM	2 16 8
68D	E4 7B	LIM	1 16 123
68E	4E 1A	MOVE	3 16 26
68F	B0 0	CALL	
690	C0 0	NOP	
691	D3 CD	BRA	255 4294967295
692	C0 0	NOP	
693	E4 6	LIM	1 16 6
694	95 7F	XOR	1 11 31
695	D8 9	BRNZ	255 4294967295
696	C0 0	NOP	
697	E8 8	LIM	2 16 8
698	E4 94	LIM	1 16 148
699	4E 1A	MOVE	3 16 26
69A	B0 0	CALL	
69B	C0 0	NOP	
69C	D3 C2	BRA	255 4294967295
69D	C0 0	NOP	
69E	E4 7	LIM	1 16 7
69F	95 7F	XOR	1 11 31
6A0	D8 9	BRNZ	255 4294967295
6A1	C0 0	NOP	
6A2	E8 8	LIM	2 16 8
6A3	E4 A1	LIM	1 16 161
6A4	4E 1A	MOVE	3 16 26
6A5	B0 0	CALL	
6A6	C0 0	NOP	
6A7	D3 B7	BRA	255 4294967295
6A8	C0 0	NOP	
6A9	E4 8	LIM	1 16 8
6AA	95 7F	XOR	1 11 31
6AB	D8 9	BRNZ	255 4294967295
6AC	C0 0	NOP	
6AD	E8 8	LIM	2 16 8
6AE	E4 BA	LIM	1 16 186
6AF	4E 1A	MOVE	3 16 26
6B0	B0 0	CALL	
6B1	C0 0	NOP	
6B2	D3 AC	BRA	255 4294967295
6B3	C0 0	NOP	
6B4	E4 9	LIM	1 16 9
6B5	95 7F	XOR	1 11 31
6B6	D8 9	BRNZ	255 4294967295
6B7	C0 0	NOP	
6B8	E8 8	LIM	2 16 8
6B9	E4 CD	LIM	1 16 205
6BA	4E 1A	MOVE	3 16 26
6BB	B0 0	CALL	
6BC	C0 0	NOP	
6BD	D3 A1	BRA	255 4294967295
6BE	C0 0	NOP	
6BF	E4 A	LIM	1 16 10
6C0	95 7F	XOR	1 11 31
6C1	D8 9	BRNZ	255 4294967295
6C2	C0 0	NOP	
6C3	E8 8	LIM	2 16 8
6C4	E4 E0	LIM	1 16 224
6C5	4E 1A	MOVE	3 16 26
6C6	B0 0	CALL	
6C7	C0 0	NOP	
6C8	D3 96	BRA	255 4294967295
6C9	C0 0	NOP	
6CA	E4 B	LIM	1 16 11
6CB	95 7F	XOR	1 11 31
6CC	D8 9	BRNZ	255 4294967295
6CD	C0 0	NOP	
6CE	E8 8	LIM	2 16 8
6CF	E4 ED	LIM	1 16 237
6D0	4E 1A	MOVE	3 16 26
6D1	B0 0	CALL	
6D2	C0 0	NOP	
6D3	D3 8B	BRA	255 4294967295
6D4	C0 0	NOP	
6D5	E4 C	LIM	1 16 12
6D6	95 7F	XOR	1 11 31
6D7	D8 9	BRNZ	255 4294967295
6D8	C0 0	NOP	
6D9	E8 8	LIM	2 16 8
6DA	E4 FD	LIM	1 16 253
6DB	4E 1A	MOVE	3 16 26
6DC	B0 0	CALL	
6DD	C0 0	NOP	
6DE	D3 80	BRA	255 4294967295
6DF	C0 0	NOP	
6E0	E4 D	LIM	1 16 13
6E1	95 7F	XOR	1 11 31
6E2	D8 9	BRNZ	255 4294967295
6E3	C0 0	NOP	
6E4	E8 9	LIM	2 16 9
6E5	E4 F	LIM	1 16 15
6E6	4E 1A	MOVE	3 16 26
6E7	B0 0	CALL	
6E8	C0 0	NOP	
6E9	D3 75	BRA	255 4294967295
6EA	C0 0	NOP	
6EB	E4 E	LIM	1 16 14
6EC	95 7F	XOR	1 11 31
6ED	D8 9	BRNZ	255 4294967295
6EE	C0 0	NOP	
6EF	E8 9	LIM	2 16 9
6F0	E4 19	LIM	1 16 25
6F1	4E 1A	MOVE	3 16 26
6F2	B0 0	CALL	
6F3	C0 0	NOP	
6F4	D3 6A	BRA	255 4294967295
6F5	C0 0	NOP	
6F6	E4 F	LIM	1 16 15
6F7	95 7F	XOR	1 11 31
6F8	D8 9	BRNZ	255 4294967295
6F9	C0 0	NOP	
6FA	E8 A	LIM	2 16 10
6FB	E4 19	LIM	1 16 25
6FC	4E 1A	MOVE	3 16 26
6FD	B0 0	CALL	
6FE	C0 0	NOP	
6FF	D3 5F	BRA	255 4294967295
700	C0 0	NOP	
701	E8 0	LIM	2 16 0
702	E4 C6	LIM	1 16 198
703	4E 1A	MOVE	3 16 26
704	4F E0	MOVE	3 31 0
705	B0 0	CALL	
706	C0 0	NOP	
707	B0 0	CALL	
708	C0 0	NOP	
709	B0 0	CALL	
70A	C0 0	NOP	
70B	B0 0	CALL	
70C	C0 0	NOP	
70D	D3 9	BRA	255 4294967295
70E	C0 0	NOP	
70F	E9 FF	LIM	2 17 255
710	E5 FC	LIM	1 17 252
711	4E 36	MOVE	3 17 22
712	E8 C0	LIM	2 16 192
713	E4 1	LIM	1 16 1
714	4E 19	MOVE	3 16 25
715	E8 0	LIM	2 16 0
716	E4 BB	LIM	1 16 187
717	4E 1A	MOVE	3 16 26
718	B0 0	CALL	
719	C0 0	NOP	
71A	45 62	MOVE	1 11 2
71B	41 6B	MOVE	0 11 11
71C	49 71	MOVE	2 11 17
71D	B0 0	CALL	
71E	C0 0	NOP	
71F	45 63	MOVE	1 11 3
720	45 71	MOVE	1 11 17
721	B0 0	CALL	
722	C0 0	NOP	
723	45 64	MOVE	1 11 4
724	41 6B	MOVE	0 11 11
725	49 72	MOVE	2 11 18
726	B0 0	CALL	
727	C0 0	NOP	
728	45 65	MOVE	1 11 5
729	45 72	MOVE	1 11 18
72A	6E 52	ROR	3 18 18
72B	E8 7F	LIM	2 16 127
72C	E4 FF	LIM	1 16 255
72D	8E 52	AND	3 18 18
72E	6E 31	ROR	3 17 17
72F	5E 10	NOT	3 16 16
730	8E 30	AND	3 17 16
731	AE 52	OR	3 18 18
732	E8 7F	LIM	2 16 127
733	E4 FF	LIM	1 16 255
734	8E 31	AND	3 17 17
735	E8 1F	LIM	2 16 31
736	E4 F7	LIM	1 16 247
737	4E 14	MOVE	3 16 20
738	4E 38	MOVE	3 17 24
739	E8 1F	LIM	2 16 31
73A	E4 F6	LIM	1 16 246
73B	4E 14	MOVE	3 16 20
73C	4E 58	MOVE	3 18 24
73D	E8 0	LIM	2 16 0
73E	E4 C6	LIM	1 16 198
73F	4E 1A	MOVE	3 16 26
740	44 40	MOVE	1 2 0
741	B0 0	CALL	
742	C0 0	NOP	
743	44 60	MOVE	1 3 0
744	B0 0	CALL	
745	C0 0	NOP	
746	44 80	MOVE	1 4 0
747	B0 0	CALL	
748	C0 0	NOP	
749	44 A0	MOVE	1 5 0
74A	B0 0	CALL	
74B	C0 0	NOP	
74C	E9 1F	LIM	2 17 31
74D	E5 E5	LIM	1 17 229
74E	4E 34	MOVE	3 17 20
74F	4F 14	MOVE	3 24 20
750	4F F8	MOVE	3 31 24
751	EC 1	LIM	3 16 1
752	E 94	ADD	3 20 20
753	4F F8	MOVE	3 31 24
754	E8 1F	LIM	2 16 31
755	E4 EF	LIM	1 16 239
756	4E 14	MOVE	3 16 20
757	4F 1A	MOVE	3 24 26
758	B0 0	CALL	
759	C0 0	NOP	
75A	E9 1F	LIM	2 17 31
75B	E5 F7	LIM	1 17 247
75C	4E 34	MOVE	3 17 20
75D	4F 4	MOVE	3 24 4
75E	E9 1F	LIM	2 17 31
75F	E5 F6	LIM	1 17 246
760	4E 34	MOVE	3 17 20
761	4F 3	MOVE	3 24 3
762	E9 FF	LIM	2 17 255
763	E5 FC	LIM	1 17 252
764	4E 36	MOVE	3 17 22
765	4C 99	MOVE	3 4 25
766	E8 20	LIM	2 16 32
767	E4 0	LIM	1 16 0
768	4F E6	MOVE	3 31 6
769	4E 5	MOVE	3 16 5
76A	4C 70	MOVE	3 3 16
76B	2C A5	SUB	3 5 5
76C	4C 90	MOVE	3 4 16
76D	3C C6	SUBC	3 6 6
76E	F3 C3	BITT	30 3
76F	C8 B	BRZ	255 4294967295
770	C0 0	NOP	
771	E9 1F	LIM	2 17 31
772	E5 F7	LIM	1 17 247
773	4E 34	MOVE	3 17 20
774	4F 4	MOVE	3 24 4
775	E9 1F	LIM	2 17 31
776	E5 F6	LIM	1 17 246
777	4E 34	MOVE	3 17 20
778	4F 3	MOVE	3 24 3
779	D0 5	BRA	255 4294967295
77A	E8 20	LIM	2 16 32
77B	E4 0	LIM	1 16 0
77C	4F E4	MOVE	3 31 4
77D	4E 3	MOVE	3 16 3
77E	E9 1F	LIM	2 17 31
77F	E5 E6	LIM	1 17 230
780	4E 34	MOVE	3 17 20
781	4F 14	MOVE	3 24 20
782	4C 78	MOVE	3 3 24
783	E9 3F	LIM	2 17 63
784	E5 FF	LIM	1 17 255
785	4E 34	MOVE	3 17 20
786	4C 78	MOVE	3 3 24
787	E8 1F	LIM	2 16 31
788	E4 EE	LIM	1 16 238
789	4E 14	MOVE	3 16 20
78A	4F 1A	MOVE	3 24 26
78B	B0 0	CALL	
78C	C0 0	NOP	
78D	E8 0	LIM	2 16 0
78E	E4 F3	LIM	1 16 243
78F	4E 1A	MOVE	3 16 26
790	B0 0	CALL	
791	C0 0	NOP	
792	E9 1F	LIM	2 17 31
793	E5 F7	LIM	1 17 247
794	4E 34	MOVE	3 17 20
795	4F 4	MOVE	3 24 4
796	E9 1F	LIM	2 17 31
797	E5 F6	LIM	1 17 246
798	4E 34	MOVE	3 17 20
799	4F 3	MOVE	3 24 3
79A	4F E6	MOVE	3 31 6
79B	E9 3F	LIM	2 17 63
79C	E5 FF	LIM	1 17 255
79D	4E 34	MOVE	3 17 20
79E	4F 5	MOVE	3 24 5
79F	4C B0	MOVE	3 5 16
7A0	2C 63	SUB	3 3 3
7A1	4C D0	MOVE	3 6 16
7A2	3C 84	SUBC	3 4 4
7A3	E9 1F	LIM	2 17 31
7A4	E5 F7	LIM	1 17 247
7A5	4E 34	MOVE	3 17 20
7A6	4C 98	MOVE	3 4 24
7A7	E9 1F	LIM	2 17 31
7A8	E5 F6	LIM	1 17 246
7A9	4E 34	MOVE	3 17 20
7AA	4C 78	MOVE	3 3 24
7AB	4C 90	MOVE	3 4 16
7AC	AC 70	OR	3 3 16
7AD	DB AD	BRNZ	255 4294967295
7AE	C0 0	NOP	
7AF	B2 0	RET	
7B0	C0 0	NOP	
7B1	E9 FF	LIM	2 17 255
7B2	E5 FC	LIM	1 17 252
7B3	4E 36	MOVE	3 17 22
7B4	E8 C0	LIM	2 16 192
7B5	E4 2	LIM	1 16 2
7B6	4E 19	MOVE	3 16 25
7B7	E8 0	LIM	2 16 0
7B8	E4 BB	LIM	1 16 187
7B9	4E 1A	MOVE	3 16 26
7BA	B0 0	CALL	
7BB	C0 0	NOP	
7BC	41 6B	MOVE	0 11 11
7BD	49 71	MOVE	2 11 17
7BE	B0 0	CALL	
7BF	C0 0	NOP	
7C0	45 71	MOVE	1 11 17
7C1	B0 0	CALL	
7C2	C0 0	NOP	
7C3	41 6B	MOVE	0 11 11
7C4	49 72	MOVE	2 11 18
7C5	B0 0	CALL	
7C6	C0 0	NOP	
7C7	45 72	MOVE	1 11 18
7C8	6E 52	ROR	3 18 18
7C9	E8 7F	LIM	2 16 127
7CA	E4 FF	LIM	1 16 255
7CB	8E 52	AND	3 18 18
7CC	6E 31	ROR	3 17 17
7CD	5E 10	NOT	3 16 16
7CE	8E 30	AND	3 17 16
7CF	AE 52	OR	3 18 18
7D0	E8 7F	LIM	2 16 127
7D1	E4 FF	LIM	1 16 255
7D2	8E 31	AND	3 17 17
7D3	E8 1F	LIM	2 16 31
7D4	E4 F7	LIM	1 16 247
7D5	4E 14	MOVE	3 16 20
7D6	4E 38	MOVE	3 17 24
7D7	E8 1F	LIM	2 16 31
7D8	E4 F6	LIM	1 16 246
7D9	4E 14	MOVE	3 16 20
7DA	4E 58	MOVE	3 18 24
7DB	E9 1F	LIM	2 17 31
7DC	E5 E5	LIM	1 17 229
7DD	4E 34	MOVE	3 17 20
7DE	4F 14	MOVE	3 24 20
7DF	4F F8	MOVE	3 31 24
7E0	EC 1	LIM	3 16 1
7E1	E 94	ADD	3 20 20
7E2	4F F8	MOVE	3 31 24
7E3	E8 1F	LIM	2 16 31
7E4	E4 F0	LIM	1 16 240
7E5	4E 14	MOVE	3 16 20
7E6	4F 1A	MOVE	3 24 26
7E7	B0 0	CALL	
7E8	C0 0	NOP	
7E9	E9 1F	LIM	2 17 31
7EA	E5 F7	LIM	1 17 247
7EB	4E 34	MOVE	3 17 20
7EC	4F 4	MOVE	3 24 4
7ED	E9 1F	LIM	2 17 31
7EE	E5 F6	LIM	1 17 246
7EF	4E 34	MOVE	3 17 20
7F0	4F 3	MOVE	3 24 3
7F1	E9 FF	LIM	2 17 255
7F2	E5 FC	LIM	1 17 252
7F3	4E 36	MOVE	3 17 22
7F4	4C 99	MOVE	3 4 25
7F5	E8 20	LIM	2 16 32
7F6	E4 0	LIM	1 16 0
7F7	4F E6	MOVE	3 31 6
7F8	4E 5	MOVE	3 16 5
7F9	4C 70	MOVE	3 3 16
7FA	2C A5	SUB	3 5 5
7FB	4C 90	MOVE	3 4 16
7FC	3C C6	SUBC	3 6 6
7FD	F3 C3	BITT	30 3
7FE	C8 B	BRZ	255 4294967295
7FF	C0 0	NOP	
800	E9 1F	LIM	2 17 31
801	E5 F7	LIM	1 17 247
802	4E 34	MOVE	3 17 20
803	4F 4	MOVE	3 24 4
804	E9 1F	LIM	2 17 31
805	E5 F6	LIM	1 17 246
806	4E 34	MOVE	3 17 20
807	4F 3	MOVE	3 24 3
808	D0 5	BRA	255 4294967295
809	E8 20	LIM	2 16 32
80A	E4 0	LIM	1 16 0
80B	4F E4	MOVE	3 31 4
80C	4E 3	MOVE	3 16 3
80D	4C 91	MOVE	3 4 17
80E	4C 72	MOVE	3 3 18
80F	4E 50	MOVE	3 18 16
810	E 52	ADD	3 18 18
811	4E 30	MOVE	3 17 16
812	1E 31	ADDC	3 17 17
813	E8 0	LIM	2 16 0
814	E4 C6	LIM	1 16 198
815	4E 1A	MOVE	3 16 26
816	42 20	MOVE	0 17 0
817	B0 0	CALL	
818	C0 0	NOP	
819	46 20	MOVE	1 17 0
81A	B0 0	CALL	
81B	C0 0	NOP	
81C	42 40	MOVE	0 18 0
81D	B0 0	CALL	
81E	C0 0	NOP	
81F	46 40	MOVE	1 18 0
820	B0 0	CALL	
821	C0 0	NOP	
822	E9 1F	LIM	2 17 31
823	E5 E6	LIM	1 17 230
824	4E 34	MOVE	3 17 20
825	4F 14	MOVE	3 24 20
826	4C 78	MOVE	3 3 24
827	E9 3F	LIM	2 17 63
828	E5 FF	LIM	1 17 255
829	4E 34	MOVE	3 17 20
82A	4C 78	MOVE	3 3 24
82B	E8 0	LIM	2 16 0
82C	E4 D1	LIM	1 16 209
82D	4E 1A	MOVE	3 16 26
82E	B0 0	CALL	
82F	C0 0	NOP	
830	E8 1F	LIM	2 16 31
831	E4 ED	LIM	1 16 237
832	4E 14	MOVE	3 16 20
833	4F 1A	MOVE	3 24 26
834	B0 0	CALL	
835	C0 0	NOP	
836	E9 1F	LIM	2 17 31
837	E5 F7	LIM	1 17 247
838	4E 34	MOVE	3 17 20
839	4F 4	MOVE	3 24 4
83A	E9 1F	LIM	2 17 31
83B	E5 F6	LIM	1 17 246
83C	4E 34	MOVE	3 17 20
83D	4F 3	MOVE	3 24 3
83E	4F E6	MOVE	3 31 6
83F	E9 3F	LIM	2 17 63
840	E5 FF	LIM	1 17 255
841	4E 34	MOVE	3 17 20
842	4F 5	MOVE	3 24 5
843	4C B0	MOVE	3 5 16
844	2C 63	SUB	3 3 3
845	4C D0	MOVE	3 6 16
846	3C 84	SUBC	3 4 4
847	E9 1F	LIM	2 17 31
848	E5 F7	LIM	1 17 247
849	4E 34	MOVE	3 17 20
84A	4C 98	MOVE	3 4 24
84B	E9 1F	LIM	2 17 31
84C	E5 F6	LIM	1 17 246
84D	4E 34	MOVE	3 17 20
84E	4C 78	MOVE	3 3 24
84F	4C 90	MOVE	3 4 16
850	AC 70	OR	3 3 16
851	DB 98	BRNZ	255 4294967295
852	C0 0	NOP	
853	B2 0	RET	
854	C0 0	NOP	
855	E8 0	LIM	2 16 0
856	E4 C6	LIM	1 16 198
857	4E 1A	MOVE	3 16 26
858	E4 E0	LIM	1 16 224
859	46 0	MOVE	1 16 0
85A	B0 0	CALL	
85B	C0 0	NOP	
85C	E4 0	LIM	1 16 0
85D	46 0	MOVE	1 16 0
85E	B0 0	CALL	
85F	C0 0	NOP	
860	B2 0	RET	
861	C0 0	NOP	
862	E9 FF	LIM	2 17 255
863	E5 FC	LIM	1 17 252
864	4E 36	MOVE	3 17 22
865	E8 C0	LIM	2 16 192
866	E4 4	LIM	1 16 4
867	4E 19	MOVE	3 16 25
868	E8 1F	LIM	2 16 31
869	E4 EB	LIM	1 16 235
86A	4E 14	MOVE	3 16 20
86B	4F 1A	MOVE	3 24 26
86C	B0 0	CALL	
86D	C0 0	NOP	
86E	E8 0	LIM	2 16 0
86F	E4 C6	LIM	1 16 198
870	4E 1A	MOVE	3 16 26
871	E4 55	LIM	1 16 85
872	46 0	MOVE	1 16 0
873	B0 0	CALL	
874	C0 0	NOP	
875	E4 AA	LIM	1 16 170
876	46 0	MOVE	1 16 0
877	B0 0	CALL	
878	C0 0	NOP	
879	B2 0	RET	
87A	C0 0	NOP	
87B	E9 FF	LIM	2 17 255
87C	E5 FC	LIM	1 17 252
87D	4E 36	MOVE	3 17 22
87E	E8 C0	LIM	2 16 192
87F	E4 5	LIM	1 16 5
880	4E 19	MOVE	3 16 25
881	E8 1F	LIM	2 16 31
882	E4 EA	LIM	1 16 234
883	4E 14	MOVE	3 16 20
884	4F 1A	MOVE	3 24 26
885	B0 0	CALL	
886	C0 0	NOP	
887	E8 0	LIM	2 16 0
888	E4 C6	LIM	1 16 198
889	4E 1A	MOVE	3 16 26
88A	E4 55	LIM	1 16 85
88B	46 0	MOVE	1 16 0
88C	B0 0	CALL	
88D	C0 0	NOP	
88E	E4 AA	LIM	1 16 170
88F	46 0	MOVE	1 16 0
890	B0 0	CALL	
891	C0 0	NOP	
892	B2 0	RET	
893	C0 0	NOP	
894	E8 0	LIM	2 16 0
895	E4 C6	LIM	1 16 198
896	4E 1A	MOVE	3 16 26
897	E4 E0	LIM	1 16 224
898	46 0	MOVE	1 16 0
899	B0 0	CALL	
89A	C0 0	NOP	
89B	E4 0	LIM	1 16 0
89C	46 0	MOVE	1 16 0
89D	B0 0	CALL	
89E	C0 0	NOP	
89F	B2 0	RET	
8A0	C0 0	NOP	
8A1	E9 FF	LIM	2 17 255
8A2	E5 FA	LIM	1 17 250
8A3	4E 36	MOVE	3 17 22
8A4	E8 C0	LIM	2 16 192
8A5	E4 7	LIM	1 16 7
8A6	4E 19	MOVE	3 16 25
8A7	E8 1F	LIM	2 16 31
8A8	E4 EC	LIM	1 16 236
8A9	4E 14	MOVE	3 16 20
8AA	4F 1A	MOVE	3 24 26
8AB	B0 0	CALL	
8AC	C0 0	NOP	
8AD	E8 0	LIM	2 16 0
8AE	E4 C6	LIM	1 16 198
8AF	4E 1A	MOVE	3 16 26
8B0	E4 55	LIM	1 16 85
8B1	46 0	MOVE	1 16 0
8B2	B0 0	CALL	
8B3	C0 0	NOP	
8B4	E4 AA	LIM	1 16 170
8B5	46 0	MOVE	1 16 0
8B6	B0 0	CALL	
8B7	C0 0	NOP	
8B8	B2 0	RET	
8B9	C0 0	NOP	
8BA	E8 1F	LIM	2 16 31
8BB	E4 E8	LIM	1 16 232
8BC	4E 14	MOVE	3 16 20
8BD	4F 1A	MOVE	3 24 26
8BE	B0 0	CALL	
8BF	C0 0	NOP	
8C0	E8 0	LIM	2 16 0
8C1	E4 C6	LIM	1 16 198
8C2	4E 1A	MOVE	3 16 26
8C3	E4 E0	LIM	1 16 224
8C4	46 0	MOVE	1 16 0
8C5	B0 0	CALL	
8C6	C0 0	NOP	
8C7	E4 0	LIM	1 16 0
8C8	46 0	MOVE	1 16 0
8C9	B0 0	CALL	
8CA	C0 0	NOP	
8CB	B2 0	RET	
8CC	C0 0	NOP	
8CD	E8 1F	LIM	2 16 31
8CE	E4 F1	LIM	1 16 241
8CF	4E 14	MOVE	3 16 20
8D0	4F 1A	MOVE	3 24 26
8D1	B0 0	CALL	
8D2	C0 0	NOP	
8D3	E8 0	LIM	2 16 0
8D4	E4 C6	LIM	1 16 198
8D5	4E 1A	MOVE	3 16 26
8D6	E4 E0	LIM	1 16 224
8D7	46 0	MOVE	1 16 0
8D8	B0 0	CALL	
8D9	C0 0	NOP	
8DA	E4 0	LIM	1 16 0
8DB	46 0	MOVE	1 16 0
8DC	B0 0	CALL	
8DD	C0 0	NOP	
8DE	B2 0	RET	
8DF	C0 0	NOP	
8E0	E8 0	LIM	2 16 0
8E1	E4 C6	LIM	1 16 198
8E2	4E 1A	MOVE	3 16 26
8E3	E4 E0	LIM	1 16 224
8E4	46 0	MOVE	1 16 0
8E5	B0 0	CALL	
8E6	C0 0	NOP	
8E7	E4 0	LIM	1 16 0
8E8	46 0	MOVE	1 16 0
8E9	B0 0	CALL	
8EA	C0 0	NOP	
8EB	B2 0	RET	
8EC	C0 0	NOP	
8ED	E8 A	LIM	2 16 10
8EE	E4 21	LIM	1 16 33
8EF	4E 14	MOVE	3 16 20
8F0	E8 0	LIM	2 16 0
8F1	E4 C6	LIM	1 16 198
8F2	4E 1A	MOVE	3 16 26
8F3	47 0	MOVE	1 24 0
8F4	B0 0	CALL	
8F5	C0 0	NOP	
8F6	EC 1	LIM	3 16 1
8F7	E 94	ADD	3 20 20
8F8	44 0	TEST	1 0
8F9	DB F7	BRNZ	255 4294967295
8FA	C0 0	NOP	
8FB	B2 0	RET	
8FC	C0 0	NOP	
8FD	E8 1F	LIM	2 16 31
8FE	E4 E7	LIM	1 16 231
8FF	4E 14	MOVE	3 16 20
900	4F 14	MOVE	3 24 20
901	4F 14	MOVE	3 24 20
902	E8 0	LIM	2 16 0
903	E4 C6	LIM	1 16 198
904	4E 1A	MOVE	3 16 26
905	47 0	MOVE	1 24 0
906	B0 0	CALL	
907	C0 0	NOP	
908	EC 1	LIM	3 16 1
909	E 94	ADD	3 20 20
90A	44 0	TEST	1 0
90B	DB F7	BRNZ	255 4294967295
90C	C0 0	NOP	
90D	B2 0	RET	
90E	C0 0	NOP	
90F	E8 0	LIM	2 16 0
910	E4 C6	LIM	1 16 198
911	4E 1A	MOVE	3 16 26
912	E8 0	LIM	2 16 0
913	E4 3	LIM	1 16 3
914	4E 0	MOVE	3 16 0
915	B0 0	CALL	
916	C0 0	NOP	
917	B2 0	RET	
918	C0 0	NOP	
919	E8 0	LIM	2 16 0
91A	E4 C6	LIM	1 16 198
91B	4E 1A	MOVE	3 16 26
91C	E8 0	LIM	2 16 0
91D	E4 BB	LIM	1 16 187
91E	4E 1A	MOVE	3 16 26
91F	B0 0	CALL	
920	C0 0	NOP	
921	E4 0	LIM	1 16 0
922	95 7F	XOR	1 11 31
923	C8 9	BRZ	255 4294967295
924	E4 1	LIM	1 16 1
925	95 7F	XOR	1 11 31
926	C8 4F	BRZ	255 4294967295
927	E4 2	LIM	1 16 2
928	95 7F	XOR	1 11 31
929	C8 95	BRZ	255 4294967295
92A	C0 0	NOP	
92B	4F EB	MOVE	3 31 11
92C	E8 1F	LIM	2 16 31
92D	E4 F0	LIM	1 16 240
92E	4E 14	MOVE	3 16 20
92F	E8 1	LIM	2 16 1
930	E4 35	LIM	1 16 53
931	4E 18	MOVE	3 16 24
932	E8 1F	LIM	2 16 31
933	E4 EF	LIM	1 16 239
934	4E 14	MOVE	3 16 20
935	E8 1	LIM	2 16 1
936	E4 4D	LIM	1 16 77
937	4E 18	MOVE	3 16 24
938	E8 1F	LIM	2 16 31
939	E4 EE	LIM	1 16 238
93A	4E 14	MOVE	3 16 20
93B	E8 3	LIM	2 16 3
93C	E4 98	LIM	1 16 152
93D	4E 18	MOVE	3 16 24
93E	E8 1F	LIM	2 16 31
93F	E4 ED	LIM	1 16 237
940	4E 14	MOVE	3 16 20
941	E8 3	LIM	2 16 3
942	E4 B7	LIM	1 16 183
943	4E 18	MOVE	3 16 24
944	E8 1F	LIM	2 16 31
945	E4 EC	LIM	1 16 236
946	4E 14	MOVE	3 16 20
947	E8 4	LIM	2 16 4
948	E4 C6	LIM	1 16 198
949	4E 18	MOVE	3 16 24
94A	E8 1F	LIM	2 16 31
94B	E4 EB	LIM	1 16 235
94C	4E 14	MOVE	3 16 20
94D	E8 4	LIM	2 16 4
94E	E4 0	LIM	1 16 0
94F	4E 18	MOVE	3 16 24
950	E8 1F	LIM	2 16 31
951	E4 EA	LIM	1 16 234
952	4E 14	MOVE	3 16 20
953	E8 4	LIM	2 16 4
954	E4 97	LIM	1 16 151
955	4E 18	MOVE	3 16 24
956	E8 1F	LIM	2 16 31
957	E4 E9	LIM	1 16 233
958	4E 14	MOVE	3 16 20
959	E8 1	LIM	2 16 1
95A	E4 14	LIM	1 16 20
95B	4E 18	MOVE	3 16 24
95C	E8 1F	LIM	2 16 31
95D	E4 E8	LIM	1 16 232
95E	4E 14	MOVE	3 16 20
95F	E8 3	LIM	2 16 3
960	E4 3	LIM	1 16 3
961	4E 18	MOVE	3 16 24
962	E8 1F	LIM	2 16 31
963	E4 F1	LIM	1 16 241
964	4E 14	MOVE	3 16 20
965	E8 2	LIM	2 16 2
966	E4 62	LIM	1 16 98
967	4E 18	MOVE	3 16 24
968	E8 1F	LIM	2 16 31
969	E4 E6	LIM	1 16 230
96A	4E 14	MOVE	3 16 20
96B	E8 3F	LIM	2 16 63
96C	E4 FE	LIM	1 16 254
96D	4E 18	MOVE	3 16 24
96E	E8 1F	LIM	2 16 31
96F	E4 E5	LIM	1 16 229
970	4E 14	MOVE	3 16 20
971	E8 3F	LIM	2 16 63
972	E4 FA	LIM	1 16 250
973	4E 18	MOVE	3 16 24
974	D0 92	BRA	255 4294967295
975	E8 1F	LIM	2 16 31
976	E4 F0	LIM	1 16 240
977	4E 14	MOVE	3 16 20
978	E8 4	LIM	2 16 4
979	E4 FB	LIM	1 16 251
97A	4E 18	MOVE	3 16 24
97B	E8 1F	LIM	2 16 31
97C	E4 EF	LIM	1 16 239
97D	4E 14	MOVE	3 16 20
97E	E8 5	LIM	2 16 5
97F	E4 D	LIM	1 16 13
980	4E 18	MOVE	3 16 24
981	E8 1F	LIM	2 16 31
982	E4 EE	LIM	1 16 238
983	4E 14	MOVE	3 16 20
984	E8 5	LIM	2 16 5
985	E4 40	LIM	1 16 64
986	4E 18	MOVE	3 16 24
987	E8 1F	LIM	2 16 31
988	E4 ED	LIM	1 16 237
989	4E 14	MOVE	3 16 20
98A	E8 5	LIM	2 16 5
98B	E4 5F	LIM	1 16 95
98C	4E 18	MOVE	3 16 24
98D	E8 1F	LIM	2 16 31
98E	E4 EC	LIM	1 16 236
98F	4E 14	MOVE	3 16 20
990	E8 4	LIM	2 16 4
991	E4 F5	LIM	1 16 245
992	4E 18	MOVE	3 16 24
993	E8 1F	LIM	2 16 31
994	E4 EB	LIM	1 16 235
995	4E 14	MOVE	3 16 20
996	E8 4	LIM	2 16 4
997	E4 F5	LIM	1 16 245
998	4E 18	MOVE	3 16 24
999	E8 1F	LIM	2 16 31
99A	E4 EA	LIM	1 16 234
99B	4E 14	MOVE	3 16 20
99C	E8 4	LIM	2 16 4
99D	E4 F5	LIM	1 16 245
99E	4E 18	MOVE	3 16 24
99F	E8 1F	LIM	2 16 31
9A0	E4 E9	LIM	1 16 233
9A1	4E 14	MOVE	3 16 20
9A2	E8 4	LIM	2 16 4
9A3	E4 F5	LIM	1 16 245
9A4	4E 18	MOVE	3 16 24
9A5	E8 1F	LIM	2 16 31
9A6	E4 E8	LIM	1 16 232
9A7	4E 14	MOVE	3 16 20
9A8	E8 4	LIM	2 16 4
9A9	E4 F5	LIM	1 16 245
9AA	4E 18	MOVE	3 16 24
9AB	E8 1F	LIM	2 16 31
9AC	E4 F1	LIM	1 16 241
9AD	4E 14	MOVE	3 16 20
9AE	E8 4	LIM	2 16 4
9AF	E4 F5	LIM	1 16 245
9B0	4E 18	MOVE	3 16 24
9B1	E8 1F	LIM	2 16 31
9B2	E4 E6	LIM	1 16 230
9B3	4E 14	MOVE	3 16 20
9B4	E8 3F	LIM	2 16 63
9B5	E4 FD	LIM	1 16 253
9B6	4E 18	MOVE	3 16 24
9B7	E8 1F	LIM	2 16 31
9B8	E4 E5	LIM	1 16 229
9B9	4E 14	MOVE	3 16 20
9BA	E8 1F	LIM	2 16 31
9BB	E4 F4	LIM	1 16 244
9BC	4E 18	MOVE	3 16 24
9BD	D0 49	BRA	255 4294967295
9BE	E8 1F	LIM	2 16 31
9BF	E4 F0	LIM	1 16 240
9C0	4E 14	MOVE	3 16 20
9C1	E8 5	LIM	2 16 5
9C2	E4 94	LIM	1 16 148
9C3	4E 18	MOVE	3 16 24
9C4	E8 1F	LIM	2 16 31
9C5	E4 EF	LIM	1 16 239
9C6	4E 14	MOVE	3 16 20
9C7	E8 5	LIM	2 16 5
9C8	E4 AA	LIM	1 16 170
9C9	4E 18	MOVE	3 16 24
9CA	E8 1F	LIM	2 16 31
9CB	E4 EE	LIM	1 16 238
9CC	4E 14	MOVE	3 16 20
9CD	E8 5	LIM	2 16 5
9CE	E4 D8	LIM	1 16 216
9CF	4E 18	MOVE	3 16 24
9D0	E8 1F	LIM	2 16 31
9D1	E4 ED	LIM	1 16 237
9D2	4E 14	MOVE	3 16 20
9D3	E8 5	LIM	2 16 5
9D4	E4 F7	LIM	1 16 247
9D5	4E 18	MOVE	3 16 24
9D6	E8 1F	LIM	2 16 31
9D7	E4 EC	LIM	1 16 236
9D8	4E 14	MOVE	3 16 20
9D9	E8 5	LIM	2 16 5
9DA	E4 7F	LIM	1 16 127
9DB	4E 18	MOVE	3 16 24
9DC	E8 1F	LIM	2 16 31
9DD	E4 EB	LIM	1 16 235
9DE	4E 14	MOVE	3 16 20
9DF	E8 5	LIM	2 16 5
9E0	E4 7F	LIM	1 16 127
9E1	4E 18	MOVE	3 16 24
9E2	E8 1F	LIM	2 16 31
9E3	E4 EA	LIM	1 16 234
9E4	4E 14	MOVE	3 16 20
9E5	E8 5	LIM	2 16 5
9E6	E4 7F	LIM	1 16 127
9E7	4E 18	MOVE	3 16 24
9E8	E8 1F	LIM	2 16 31
9E9	E4 E9	LIM	1 16 233
9EA	4E 14	MOVE	3 16 20
9EB	E8 5	LIM	2 16 5
9EC	E4 7F	LIM	1 16 127
9ED	4E 18	MOVE	3 16 24
9EE	E8 1F	LIM	2 16 31
9EF	E4 E8	LIM	1 16 232
9F0	4E 14	MOVE	3 16 20
9F1	E8 5	LIM	2 16 5
9F2	E4 7F	LIM	1 16 127
9F3	4E 18	MOVE	3 16 24
9F4	E8 1F	LIM	2 16 31
9F5	E4 F1	LIM	1 16 241
9F6	4E 14	MOVE	3 16 20
9F7	E8 5	LIM	2 16 5
9F8	E4 7F	LIM	1 16 127
9F9	4E 18	MOVE	3 16 24
9FA	E8 1F	LIM	2 16 31
9FB	E4 E6	LIM	1 16 230
9FC	4E 14	MOVE	3 16 20
9FD	E8 3F	LIM	2 16 63
9FE	E4 FC	LIM	1 16 252
9FF	4E 18	MOVE	3 16 24
A00	E8 1F	LIM	2 16 31
A01	E4 E5	LIM	1 16 229
A02	4E 14	MOVE	3 16 20
A03	E8 1F	LIM	2 16 31
A04	E4 F2	LIM	1 16 242
A05	4E 18	MOVE	3 16 24
A06	E8 1F	LIM	2 16 31
A07	E4 E4	LIM	1 16 228
A08	4E 14	MOVE	3 16 20
A09	45 70	MOVE	1 11 16
A0A	5 70	ADD	1 11 16
A0B	E9 A	LIM	2 17 10
A0C	E5 41	LIM	1 17 65
A0D	4B F0	MOVE	2 31 16
A0E	E 38	ADD	3 17 24
A0F	E8 1F	LIM	2 16 31
A10	E4 E7	LIM	1 16 231
A11	4E 14	MOVE	3 16 20
A12	45 70	MOVE	1 11 16
A13	E9 A	LIM	2 17 10
A14	E5 2D	LIM	1 17 45
A15	4B F0	MOVE	2 31 16
A16	E 38	ADD	3 17 24
A17	B2 0	RET	
A18	C0 0	NOP	
A19	E9 FF	LIM	2 17 255
A1A	E5 FC	LIM	1 17 252
A1B	4E 36	MOVE	3 17 22
A1C	E8 C0	LIM	2 16 192
A1D	E4 7	LIM	1 16 7
A1E	4E 19	MOVE	3 16 25
A1F	B2 0	RET	
A20	C0 0	NOP	
A21	0 74	DATA	
A22	0 65	DATA	
A23	0 72	DATA	
A24	0 61	DATA	
A25	0 73	DATA	
A26	0 49	DATA	
A27	0 43	DATA	
A28	0 20	DATA	
A29	0 44	DATA	
A2A	0 45	DATA	
A2B	0 32	DATA	
A2C	0 0	DATA	
A2D	A 30	DATA	
A2E	A 36	DATA	
A2F	A 3B	DATA	
A30	0 46	DATA	
A31	0 6C	DATA	
A32	0 61	DATA	
A33	0 73	DATA	
A34	0 68	DATA	
A35	0 0	DATA	
A36	0 53	DATA	
A37	0 52	DATA	
A38	0 41	DATA	
A39	0 4D	DATA	
A3A	0 0	DATA	
A3B	0 53	DATA	
A3C	0 44	DATA	
A3D	0 52	DATA	
A3E	0 41	DATA	
A3F	0 4D	DATA	
A40	0 0	DATA	
A41	0 0	DATA	
A42	0 40	DATA	
A43	0 0	DATA	
A44	0 8	DATA	
A45	0 0	DATA	
A46	0 80	DATA	
3FFF	FF FF	DATA	


-------------range_table_determine_size
1 - nseg:0
2 - nseg:0
3 - nseg:0
4 - nseg:0
5 - nseg:0
6 - nseg:0
7 - nseg:0
8 - nseg:0
9 - nseg:0
10 - nseg:0
11 - nseg:0
12 - nseg:0
13 - nseg:0
14 - nseg:0
15 - nseg:0
16 - nseg:0
17 - nseg:0
18 - nseg:0
19 - nseg:0
20 - nseg:0
21 - nseg:0
22 - nseg:0
23 - nseg:0
24 - nseg:0
25 - nseg:0
26 - nseg:0
27 - nseg:0
28 - nseg:0
29 - nseg:0
30 - nseg:0
31 - nseg:0
32 - nseg:0
33 - nseg:0
34 - nseg:0
35 - nseg:0
36 - nseg:0
37 - nseg:0
38 - nseg:0
39 - nseg:0
40 - nseg:0
41 - nseg:0
42 - nseg:0
43 - nseg:0
44 - nseg:0
45 - nseg:0
46 - nseg:0
47 - nseg:0
48 - nseg:0
49 - nseg:0
50 - nseg:0
51 - nseg:0
52 - nseg:0
53 - nseg:0
54 - nseg:0
55 - nseg:0
56 - nseg:0
57 - nseg:0
58 - nseg:0
59 - nseg:0
60 - nseg:0
61 - nseg:0
62 - nseg:0
63 - nseg:0
64 - nseg:0
65 - nseg:0
66 - nseg:0
67 - nseg:0
68 - nseg:0
69 - nseg:0
70 - nseg:0
71 - nseg:0
72 - nseg:0
73 - nseg:0
74 - nseg:0
75 - nseg:0
76 - nseg:0
77 - nseg:0
78 - nseg:0
79 - nseg:0
80 - nseg:0
81 - nseg:0
82 - nseg:0
83 - nseg:0
84 - nseg:0
85 - nseg:0
86 - nseg:0
87 - nseg:0
88 - nseg:0
89 - nseg:0
90 - nseg:0
91 - nseg:0
92 - nseg:0
93 - nseg:0
94 - nseg:0
95 - nseg:0
96 - nseg:0
97 - nseg:0
98 - nseg:0
99 - nseg:0
100 - nseg:0
101 - nseg:0
102 - nseg:0
103 - nseg:0
104 - nseg:0
105 - nseg:0
106 - nseg:0
107 - nseg:0
108 - nseg:0
109 - nseg:0
110 - nseg:0
111 - nseg:0
112 - nseg:0
113 - nseg:0
114 - nseg:0
115 - nseg:0
116 - nseg:0
117 - nseg:0
118 - nseg:0
119 - nseg:0
120 - nseg:0
121 - nseg:0
122 - nseg:0
123 - nseg:0
124 - nseg:0
125 - nseg:0
126 - nseg:0
127 - nseg:0
128 - nseg:0
129 - nseg:0
130 - nseg:0
131 - nseg:0
132 - nseg:0
133 - nseg:0
134 - nseg:0
135 - nseg:0
136 - nseg:0
137 - nseg:0
138 - nseg:0
139 - nseg:0
140 - nseg:0
141 - nseg:0
142 - nseg:0
143 - nseg:0
144 - nseg:0
145 - nseg:0
146 - nseg:0
147 - nseg:0
148 - nseg:0
149 - nseg:0
150 - nseg:0
151 - nseg:0
152 - nseg:0
153 - nseg:0
154 - nseg:0
155 - nseg:0
156 - nseg:0
157 - nseg:0
158 - nseg:0
159 - nseg:0
160 - nseg:0
161 - nseg:0
162 - nseg:0
163 - nseg:0
164 - nseg:0
165 - nseg:0
166 - nseg:0
167 - nseg:0
168 - nseg:0
169 - nseg:0
170 - nseg:0
171 - nseg:0
172 - nseg:0
173 - nseg:0
174 - nseg:0
175 - nseg:0
176 - nseg:0
177 - nseg:0
178 - nseg:0
179 - nseg:0
180 - nseg:0
181 - nseg:0
182 - nseg:0
183 - nseg:0
184 - nseg:0
185 - nseg:0
186 - nseg:0
187 - nseg:0
188 - nseg:0
189 - nseg:0
190 - nseg:0
191 - nseg:0
192 - nseg:0
193 - nseg:0
194 - nseg:0
195 - nseg:0
196 - nseg:0
197 - nseg:0
198 - nseg:0
199 - nseg:0
200 - nseg:0
201 - nseg:0
202 - nseg:0
203 - nseg:0
204 - nseg:0
205 - nseg:0
206 - nseg:0
207 - nseg:0
208 - nseg:0
209 - nseg:0
210 - nseg:0
211 - nseg:0
212 - nseg:0
213 - nseg:0
214 - nseg:0
215 - nseg:0
216 - nseg:0
217 - nseg:0
218 - nseg:0
219 - nseg:0
220 - nseg:0
221 - nseg:0
222 - nseg:0
223 - nseg:0
224 - nseg:0
225 - nseg:0
226 - nseg:0
227 - nseg:0
228 - nseg:0
229 - nseg:0
230 - nseg:0
231 - nseg:0
232 - nseg:0
233 - nseg:0
234 - nseg:0
235 - nseg:0
236 - nseg:0
237 - nseg:0
238 - nseg:0
239 - nseg:0
240 - nseg:0
241 - nseg:0
242 - nseg:0
243 - nseg:0
244 - nseg:0
245 - nseg:0
246 - nseg:0
247 - nseg:0
248 - nseg:0
249 - nseg:0
250 - nseg:0
251 - nseg:0
252 - nseg:0
253 - nseg:0
254 - nseg:0
255 - nseg:0
256 - nseg:0
257 - nseg:0
258 - nseg:0
259 - nseg:0
260 - nseg:0
261 - nseg:0
262 - nseg:0
263 - nseg:0
264 - nseg:0
265 - nseg:0
266 - nseg:0
267 - nseg:0
268 - nseg:0
269 - nseg:0
270 - nseg:0
271 - nseg:0
272 - nseg:0
273 - nseg:0
274 - nseg:0
275 - nseg:0
276 - nseg:0
277 - nseg:0
278 - nseg:0
279 - nseg:0
280 - nseg:0
281 - nseg:0
282 - nseg:0
283 - nseg:0
284 - nseg:0
285 - nseg:0
286 - nseg:0
287 - nseg:0
288 - nseg:0
289 - nseg:0
290 - nseg:0
291 - nseg:0
292 - nseg:0
293 - nseg:0
294 - nseg:0
295 - nseg:0
296 - nseg:0
297 - nseg:0
298 - nseg:0
299 - nseg:0
300 - nseg:0
301 - nseg:0
302 - nseg:0
303 - nseg:0
304 - nseg:0
305 - nseg:0
306 - nseg:0
307 - nseg:0
308 - nseg:0
309 - nseg:0
310 - nseg:0
311 - nseg:0
312 - nseg:0
313 - nseg:0
314 - nseg:0
315 - nseg:0
316 - nseg:0
317 - nseg:0
318 - nseg:0
319 - nseg:0
320 - nseg:0
321 - nseg:0
322 - nseg:0
323 - nseg:0
324 - nseg:0
325 - nseg:0
326 - nseg:0
327 - nseg:0
328 - nseg:0
329 - nseg:0
330 - nseg:0
331 - nseg:0
332 - nseg:0
333 - nseg:0
334 - nseg:0
335 - nseg:0
336 - nseg:0
337 - nseg:0
338 - nseg:0
339 - nseg:0
340 - nseg:0
341 - nseg:0
342 - nseg:0
343 - nseg:0
344 - nseg:0
345 - nseg:0
346 - nseg:0
347 - nseg:0
348 - nseg:0
349 - nseg:0
350 - nseg:0
351 - nseg:0
352 - nseg:0
353 - nseg:0
354 - nseg:0
355 - nseg:0
356 - nseg:0
357 - nseg:0
358 - nseg:0
359 - nseg:0
360 - nseg:0
361 - nseg:0
362 - nseg:0
363 - nseg:0
364 - nseg:0
365 - nseg:0
366 - nseg:0
367 - nseg:0
368 - nseg:0
369 - nseg:0
370 - nseg:0
371 - nseg:0
372 - nseg:0
373 - nseg:0
374 - nseg:0
375 - nseg:0
376 - nseg:0
377 - nseg:0
378 - nseg:0
379 - nseg:0
380 - nseg:0
381 - nseg:0
382 - nseg:0
383 - nseg:0
384 - nseg:0
385 - nseg:0
386 - nseg:0
387 - nseg:0
388 - nseg:0
389 - nseg:0
390 - nseg:0
391 - nseg:0
392 - nseg:0
393 - nseg:0
394 - nseg:0
395 - nseg:0
396 - nseg:0
397 - nseg:0
398 - nseg:0
399 - nseg:0
400 - nseg:0
401 - nseg:0
402 - nseg:0
403 - nseg:0
404 - nseg:0
405 - nseg:0
406 - nseg:0
407 - nseg:0
408 - nseg:0
409 - nseg:0
410 - nseg:0
411 - nseg:0
412 - nseg:0
413 - nseg:0
414 - nseg:0
415 - nseg:0
416 - nseg:0
417 - nseg:0
418 - nseg:0
419 - nseg:0
420 - nseg:0
421 - nseg:0
422 - nseg:0
423 - nseg:0
424 - nseg:0
425 - nseg:0
426 - nseg:0
427 - nseg:0
428 - nseg:0
429 - nseg:0
430 - nseg:0
431 - nseg:0
432 - nseg:0
433 - nseg:0
434 - nseg:0
435 - nseg:0
436 - nseg:0
437 - nseg:0
438 - nseg:0
439 - nseg:0
440 - nseg:0
441 - nseg:0
442 - nseg:0
443 - nseg:0
444 - nseg:0
445 - nseg:0
446 - nseg:0
447 - nseg:0
448 - nseg:0
449 - nseg:0
450 - nseg:0
451 - nseg:0
452 - nseg:0
453 - nseg:0
454 - nseg:0
455 - nseg:0
456 - nseg:0
457 - nseg:0
458 - nseg:0
459 - nseg:0
460 - nseg:0
461 - nseg:0
462 - nseg:0
463 - nseg:0
464 - nseg:0
465 - nseg:0
466 - nseg:0
467 - nseg:0
468 - nseg:0
469 - nseg:0
470 - nseg:0
471 - nseg:0
472 - nseg:0
473 - nseg:0
474 - nseg:0
475 - nseg:0
476 - nseg:0
477 - nseg:0
478 - nseg:0
479 - nseg:0
480 - nseg:0
481 - nseg:0
482 - nseg:0
483 - nseg:0
484 - nseg:0
485 - nseg:0
486 - nseg:0
487 - nseg:0
488 - nseg:0
489 - nseg:0
490 - nseg:0
491 - nseg:0
492 - nseg:0
493 - nseg:0
494 - nseg:0
495 - nseg:0
496 - nseg:0
497 - nseg:0
498 - nseg:0
499 - nseg:0
500 - nseg:0
501 - nseg:0
502 - nseg:0
503 - nseg:0
504 - nseg:0
505 - nseg:0
506 - nseg:0
507 - nseg:0
508 - nseg:0
509 - nseg:0
510 - nseg:0
511 - nseg:0
512 - nseg:0
513 - nseg:0
514 - nseg:0
515 - nseg:0
516 - nseg:0
517 - nseg:0
518 - nseg:0
519 - nseg:0
520 - nseg:0
521 - nseg:0
522 - nseg:0
523 - nseg:0
524 - nseg:0
525 - nseg:0
526 - nseg:0
527 - nseg:0
528 - nseg:0
529 - nseg:0
530 - nseg:0
531 - nseg:0
532 - nseg:0
533 - nseg:0
534 - nseg:0
535 - nseg:0
536 - nseg:0
537 - nseg:0
538 - nseg:0
539 - nseg:0
540 - nseg:0
541 - nseg:0
542 - nseg:0
543 - nseg:0
544 - nseg:0
545 - nseg:0
546 - nseg:0
547 - nseg:0
548 - nseg:0
549 - nseg:0
550 - nseg:0
551 - nseg:0
552 - nseg:0
553 - nseg:0
554 - nseg:0
555 - nseg:0
556 - nseg:0
557 - nseg:0
558 - nseg:0
559 - nseg:0
560 - nseg:0
561 - nseg:0
562 - nseg:0
563 - nseg:0
564 - nseg:0
565 - nseg:0
566 - nseg:0
567 - nseg:0
568 - nseg:0
569 - nseg:0
570 - nseg:0
571 - nseg:0
572 - nseg:0
573 - nseg:0
574 - nseg:0
575 - nseg:0
576 - nseg:0
577 - nseg:0
578 - nseg:0
579 - nseg:0
580 - nseg:0
581 - nseg:0
582 - nseg:0
583 - nseg:0
584 - nseg:0
585 - nseg:0
586 - nseg:0
587 - nseg:0
588 - nseg:0
589 - nseg:0
590 - nseg:0
591 - nseg:0
592 - nseg:0
593 - nseg:0
594 - nseg:0
595 - nseg:0
596 - nseg:0
597 - nseg:0
598 - nseg:0
599 - nseg:0
600 - nseg:0
601 - nseg:0
602 - nseg:0
603 - nseg:0
604 - nseg:0
605 - nseg:0
606 - nseg:0
607 - nseg:0
608 - nseg:0
609 - nseg:0
610 - nseg:0
611 - nseg:0
612 - nseg:0
613 - nseg:0
614 - nseg:0
615 - nseg:0
616 - nseg:0
617 - nseg:0
618 - nseg:0
619 - nseg:0
620 - nseg:0
621 - nseg:0
622 - nseg:0
623 - nseg:0
624 - nseg:0
625 - nseg:0
626 - nseg:0
627 - nseg:0
628 - nseg:0
629 - nseg:0
630 - nseg:0
631 - nseg:0
632 - nseg:0
633 - nseg:0
634 - nseg:0
635 - nseg:0
636 - nseg:0
637 - nseg:0
638 - nseg:0
639 - nseg:0
640 - nseg:0
641 - nseg:0
642 - nseg:0
643 - nseg:0
644 - nseg:0
645 - nseg:0
646 - nseg:0
647 - nseg:0
648 - nseg:0
649 - nseg:0
650 - nseg:0
651 - nseg:0
652 - nseg:0
653 - nseg:0
654 - nseg:0
655 - nseg:0
656 - nseg:0
657 - nseg:0
658 - nseg:0
659 - nseg:0
660 - nseg:0
661 - nseg:0
662 - nseg:0
663 - nseg:0
664 - nseg:0
665 - nseg:0
666 - nseg:0
667 - nseg:0
668 - nseg:0
669 - nseg:0
670 - nseg:0
671 - nseg:0
672 - nseg:0
673 - nseg:0
674 - nseg:0
675 - nseg:0
676 - nseg:0
677 - nseg:0
678 - nseg:0
679 - nseg:0
680 - nseg:0
681 - nseg:0
682 - nseg:0
683 - nseg:0
684 - nseg:0
685 - nseg:0
686 - nseg:0
687 - nseg:0
688 - nseg:0
689 - nseg:0
690 - nseg:0
691 - nseg:0
692 - nseg:0
693 - nseg:0
694 - nseg:0
695 - nseg:0
696 - nseg:0
697 - nseg:0
698 - nseg:0
699 - nseg:0
700 - nseg:0
701 - nseg:0
702 - nseg:0
703 - nseg:0
704 - nseg:0
705 - nseg:0
706 - nseg:0
707 - nseg:0
708 - nseg:0
709 - nseg:0
710 - nseg:0
711 - nseg:0
712 - nseg:0
713 - nseg:0
714 - nseg:0
715 - nseg:0
716 - nseg:0
717 - nseg:0
718 - nseg:0
719 - nseg:0
720 - nseg:0
721 - nseg:0
722 - nseg:0
723 - nseg:0
724 - nseg:0
725 - nseg:0
726 - nseg:0
727 - nseg:0
728 - nseg:0
729 - nseg:0
730 - nseg:0
731 - nseg:0
732 - nseg:0
733 - nseg:0
734 - nseg:0
735 - nseg:0
736 - nseg:0
737 - nseg:0
738 - nseg:0
739 - nseg:0
740 - nseg:0
741 - nseg:0
742 - nseg:0
743 - nseg:0
744 - nseg:0
745 - nseg:0
746 - nseg:0
747 - nseg:0
748 - nseg:0
749 - nseg:0
750 - nseg:0
751 - nseg:0
752 - nseg:0
753 - nseg:0
754 - nseg:0
755 - nseg:0
756 - nseg:0
757 - nseg:0
758 - nseg:0
759 - nseg:0
760 - nseg:0
761 - nseg:0
762 - nseg:0
763 - nseg:0
764 - nseg:0
765 - nseg:0
766 - nseg:0
767 - nseg:0
768 - nseg:0
769 - nseg:0
770 - nseg:0
771 - nseg:0
772 - nseg:0
773 - nseg:0
774 - nseg:0
775 - nseg:0
776 - nseg:0
777 - nseg:0
778 - nseg:0
779 - nseg:0
780 - nseg:0
781 - nseg:0
782 - nseg:0
783 - nseg:0
784 - nseg:0
785 - nseg:0
786 - nseg:0
787 - nseg:0
788 - nseg:0
789 - nseg:0
790 - nseg:0
791 - nseg:0
792 - nseg:0
793 - nseg:0
794 - nseg:0
795 - nseg:0
796 - nseg:0
797 - nseg:0
798 - nseg:0
799 - nseg:0
800 - nseg:0
801 - nseg:0
802 - nseg:0
803 - nseg:0
804 - nseg:0
805 - nseg:0
806 - nseg:0
807 - nseg:0
808 - nseg:0
809 - nseg:0
810 - nseg:0
811 - nseg:0
812 - nseg:0
813 - nseg:0
814 - nseg:0
815 - nseg:0
816 - nseg:0
817 - nseg:0
818 - nseg:0
819 - nseg:0
820 - nseg:0
821 - nseg:0
822 - nseg:0
823 - nseg:0
824 - nseg:0
825 - nseg:0
826 - nseg:0
827 - nseg:0
828 - nseg:0
829 - nseg:0
830 - nseg:0
831 - nseg:0
832 - nseg:0
833 - nseg:0
834 - nseg:0
835 - nseg:0
836 - nseg:0
837 - nseg:0
838 - nseg:0
839 - nseg:0
840 - nseg:0
841 - nseg:0
842 - nseg:0
843 - nseg:0
844 - nseg:0
845 - nseg:0
846 - nseg:0
847 - nseg:0
848 - nseg:0
849 - nseg:0
850 - nseg:0
851 - nseg:0
852 - nseg:0
853 - nseg:0
854 - nseg:0
855 - nseg:0
856 - nseg:0
857 - nseg:0
858 - nseg:0
859 - nseg:0
860 - nseg:0
861 - nseg:0
862 - nseg:0
863 - nseg:0
864 - nseg:0
865 - nseg:0
866 - nseg:0
867 - nseg:0
868 - nseg:0
869 - nseg:0
870 - nseg:0
871 - nseg:0
872 - nseg:0
873 - nseg:0
874 - nseg:0
875 - nseg:0
876 - nseg:0
877 - nseg:0
878 - nseg:0
879 - nseg:0
880 - nseg:0
881 - nseg:0
882 - nseg:0
883 - nseg:0
884 - nseg:0
885 - nseg:0
886 - nseg:0
887 - nseg:0
888 - nseg:0
889 - nseg:0
890 - nseg:0
891 - nseg:0
892 - nseg:0
893 - nseg:0
894 - nseg:0
895 - nseg:0
896 - nseg:0
897 - nseg:0
898 - nseg:0
899 - nseg:0
900 - nseg:0
901 - nseg:0
902 - nseg:0
903 - nseg:0
904 - nseg:0
905 - nseg:0
906 - nseg:0
907 - nseg:0
908 - nseg:0
909 - nseg:0
910 - nseg:0
911 - nseg:0
912 - nseg:0
913 - nseg:0
914 - nseg:0
915 - nseg:0
916 - nseg:0
917 - nseg:0
918 - nseg:0
919 - nseg:0
920 - nseg:0
921 - nseg:0
922 - nseg:0
923 - nseg:0
924 - nseg:0
925 - nseg:0
926 - nseg:0
927 - nseg:0
928 - nseg:0
929 - nseg:0
930 - nseg:0
931 - nseg:0
932 - nseg:0
933 - nseg:0
934 - nseg:0
935 - nseg:0
936 - nseg:0
937 - nseg:0
938 - nseg:0
939 - nseg:0
940 - nseg:0
941 - nseg:0
942 - nseg:0
943 - nseg:0
944 - nseg:0
945 - nseg:0
946 - nseg:0
947 - nseg:0
948 - nseg:0
949 - nseg:0
950 - nseg:0
951 - nseg:0
952 - nseg:0
953 - nseg:0
954 - nseg:0
955 - nseg:0
956 - nseg:0
957 - nseg:0
958 - nseg:0
959 - nseg:0
960 - nseg:0
961 - nseg:0
962 - nseg:0
963 - nseg:0
964 - nseg:0
965 - nseg:0
966 - nseg:0
967 - nseg:0
968 - nseg:0
969 - nseg:0
970 - nseg:0
971 - nseg:0
972 - nseg:0
973 - nseg:0
974 - nseg:0
975 - nseg:0
976 - nseg:0
977 - nseg:0
978 - nseg:0
979 - nseg:0
980 - nseg:0
981 - nseg:0
982 - nseg:0
983 - nseg:0
984 - nseg:0
985 - nseg:0
986 - nseg:0
987 - nseg:0
988 - nseg:0
989 - nseg:0
990 - nseg:0
991 - nseg:0
992 - nseg:0
993 - nseg:0
994 - nseg:0
995 - nseg:0
996 - nseg:0
997 - nseg:0
998 - nseg:0
999 - nseg:0
1000 - nseg:0
1001 - nseg:0
1002 - nseg:0
1003 - nseg:0
1004 - nseg:0
1005 - nseg:0
1006 - nseg:0
1007 - nseg:0
1008 - nseg:0
1009 - nseg:0
1010 - nseg:0
1011 - nseg:0
1012 - nseg:0
1013 - nseg:0
1014 - nseg:0
1015 - nseg:0
1016 - nseg:0
1017 - nseg:0
1018 - nseg:0
1019 - nseg:0
1020 - nseg:0
1021 - nseg:0
1022 - nseg:0
1023 - nseg:0
1024 - nseg:0
1025 - nseg:0
1026 - nseg:0
1027 - nseg:0
1028 - nseg:0
1029 - nseg:0
1030 - nseg:0
1031 - nseg:0
1032 - nseg:0
1033 - nseg:0
1034 - nseg:0
1035 - nseg:0
1036 - nseg:0
1037 - nseg:0
1038 - nseg:0
1039 - nseg:0
1040 - nseg:0
1041 - nseg:0
1042 - nseg:0
1043 - nseg:0
1044 - nseg:0
1045 - nseg:0
1046 - nseg:0
1047 - nseg:0
1048 - nseg:0
1049 - nseg:0
1050 - nseg:0
1051 - nseg:0
1052 - nseg:0
1053 - nseg:0
1054 - nseg:0
1055 - nseg:0
1056 - nseg:0
1057 - nseg:0
1058 - nseg:0
1059 - nseg:0
1060 - nseg:0
1061 - nseg:0
1062 - nseg:0
1063 - nseg:0
1064 - nseg:0
1065 - nseg:0
1066 - nseg:0
1067 - nseg:0
1068 - nseg:0
1069 - nseg:0
1070 - nseg:0
1071 - nseg:0
1072 - nseg:0
1073 - nseg:0
1074 - nseg:0
1075 - nseg:0
1076 - nseg:0
1077 - nseg:0
1078 - nseg:0
1079 - nseg:0
1080 - nseg:0
1081 - nseg:0
1082 - nseg:0
1083 - nseg:0
1084 - nseg:0
1085 - nseg:0
1086 - nseg:0
1087 - nseg:0
1088 - nseg:0
1089 - nseg:0
1090 - nseg:0
1091 - nseg:0
1092 - nseg:0
1093 - nseg:0
1094 - nseg:0
1095 - nseg:0
1096 - nseg:0
1097 - nseg:0
1098 - nseg:0
1099 - nseg:0
1100 - nseg:0
1101 - nseg:0
1102 - nseg:0
1103 - nseg:0
1104 - nseg:0
1105 - nseg:0
1106 - nseg:0
1107 - nseg:0
1108 - nseg:0
1109 - nseg:0
1110 - nseg:0
1111 - nseg:0
1112 - nseg:0
1113 - nseg:0
1114 - nseg:0
1115 - nseg:0
1116 - nseg:0
1117 - nseg:0
1118 - nseg:0
1119 - nseg:0
1120 - nseg:0
1121 - nseg:0
1122 - nseg:0
1123 - nseg:0
1124 - nseg:0
1125 - nseg:0
1126 - nseg:0
1127 - nseg:0
1128 - nseg:0
1129 - nseg:0
1130 - nseg:0
1131 - nseg:0
1132 - nseg:0
1133 - nseg:0
1134 - nseg:0
1135 - nseg:0
1136 - nseg:0
1137 - nseg:0
1138 - nseg:0
1139 - nseg:0
1140 - nseg:0
1141 - nseg:0
1142 - nseg:0
1143 - nseg:0
1144 - nseg:0
1145 - nseg:0
1146 - nseg:0
1147 - nseg:0
1148 - nseg:0
1149 - nseg:0
1150 - nseg:0
1151 - nseg:0
1152 - nseg:0
1153 - nseg:0
1154 - nseg:0
1155 - nseg:0
1156 - nseg:0
1157 - nseg:0
1158 - nseg:0
1159 - nseg:0
1160 - nseg:0
1161 - nseg:0
1162 - nseg:0
1163 - nseg:0
1164 - nseg:0
1165 - nseg:0
1166 - nseg:0
1167 - nseg:0
1168 - nseg:0
1169 - nseg:0
1170 - nseg:0
1171 - nseg:0
1172 - nseg:0
1173 - nseg:0
1174 - nseg:0
1175 - nseg:0
1176 - nseg:0
1177 - nseg:0
1178 - nseg:0
1179 - nseg:0
1180 - nseg:0
1181 - nseg:0
1182 - nseg:0
1183 - nseg:0
1184 - nseg:0
1185 - nseg:0
1186 - nseg:0
1187 - nseg:0
1188 - nseg:0
1189 - nseg:0
1190 - nseg:0
1191 - nseg:0
1192 - nseg:0
1193 - nseg:0
1194 - nseg:0
1195 - nseg:0
1196 - nseg:0
1197 - nseg:0
1198 - nseg:0
1199 - nseg:0
1200 - nseg:0
1201 - nseg:0
1202 - nseg:0
1203 - nseg:0
1204 - nseg:0
1205 - nseg:0
1206 - nseg:0
1207 - nseg:0
1208 - nseg:0
1209 - nseg:0
1210 - nseg:0
1211 - nseg:0
1212 - nseg:0
1213 - nseg:0
1214 - nseg:0
1215 - nseg:0
1216 - nseg:0
1217 - nseg:0
1218 - nseg:0
1219 - nseg:0
1220 - nseg:0
1221 - nseg:0
1222 - nseg:0
1223 - nseg:0
1224 - nseg:0
1225 - nseg:0
1226 - nseg:0
1227 - nseg:0
1228 - nseg:0
1229 - nseg:0
1230 - nseg:0
1231 - nseg:0
1232 - nseg:0
1233 - nseg:0
1234 - nseg:0
1235 - nseg:0
1236 - nseg:0
1237 - nseg:0
1238 - nseg:0
1239 - nseg:0
1240 - nseg:0
1241 - nseg:0
1242 - nseg:0
1243 - nseg:0
1244 - nseg:0
1245 - nseg:0
1246 - nseg:0
1247 - nseg:0
1248 - nseg:0
1249 - nseg:0
1250 - nseg:0
1251 - nseg:0
1252 - nseg:0
1253 - nseg:0
1254 - nseg:0
1255 - nseg:0
1256 - nseg:0
1257 - nseg:0
1258 - nseg:0
1259 - nseg:0
1260 - nseg:0
1261 - nseg:0
1262 - nseg:0
1263 - nseg:0
1264 - nseg:0
1265 - nseg:0
1266 - nseg:0
1267 - nseg:0
1268 - nseg:0
1269 - nseg:0
1270 - nseg:0
1271 - nseg:0
1272 - nseg:0
1273 - nseg:0
1274 - nseg:0
1275 - nseg:0
1276 - nseg:0
1277 - nseg:0
1278 - nseg:0
1279 - nseg:0
1280 - nseg:0
1281 - nseg:0
1282 - nseg:0
1283 - nseg:0
1284 - nseg:0
1285 - nseg:0
1286 - nseg:0
1287 - nseg:0
1288 - nseg:0
1289 - nseg:0
1290 - nseg:0
1291 - nseg:0
1292 - nseg:0
1293 - nseg:0
1294 - nseg:0
1295 - nseg:0
1296 - nseg:0
1297 - nseg:0
1298 - nseg:0
1299 - nseg:0
1300 - nseg:0
1301 - nseg:0
1302 - nseg:0
1303 - nseg:0
1304 - nseg:0
1305 - nseg:0
1306 - nseg:0
1307 - nseg:0
1308 - nseg:0
1309 - nseg:0
1310 - nseg:0
1311 - nseg:0
1312 - nseg:0
1313 - nseg:0
1314 - nseg:0
1315 - nseg:0
1316 - nseg:0
1317 - nseg:0
1318 - nseg:0
1319 - nseg:0
1320 - nseg:0
1321 - nseg:0
1322 - nseg:0
1323 - nseg:0
1324 - nseg:0
1325 - nseg:0
1326 - nseg:0
1327 - nseg:0
1328 - nseg:0
1329 - nseg:0
1330 - nseg:0
1331 - nseg:0
1332 - nseg:0
1333 - nseg:0
1334 - nseg:0
1335 - nseg:0
1336 - nseg:0
1337 - nseg:0
1338 - nseg:0
1339 - nseg:0
1340 - nseg:0
1341 - nseg:0
1342 - nseg:0
1343 - nseg:0
1344 - nseg:0
1345 - nseg:0
1346 - nseg:0
1347 - nseg:0
1348 - nseg:0
1349 - nseg:0
1350 - nseg:0
1351 - nseg:0
1352 - nseg:0
1353 - nseg:0
1354 - nseg:0
1355 - nseg:0
1356 - nseg:0
1357 - nseg:0
1358 - nseg:0
1359 - nseg:0
1360 - nseg:0
1361 - nseg:0
1362 - nseg:0
1363 - nseg:0
1364 - nseg:0
1365 - nseg:0
1366 - nseg:0
1367 - nseg:0
1368 - nseg:0
1369 - nseg:0
1370 - nseg:0
1371 - nseg:0
1372 - nseg:0
1373 - nseg:0
1374 - nseg:0
1375 - nseg:0
1376 - nseg:0
1377 - nseg:0
1378 - nseg:0
1379 - nseg:0
1380 - nseg:0
1381 - nseg:0
1382 - nseg:0
1383 - nseg:0
1384 - nseg:0
1385 - nseg:0
1386 - nseg:0
1387 - nseg:0
1388 - nseg:0
1389 - nseg:0
1390 - nseg:0
1391 - nseg:0
1392 - nseg:0
1393 - nseg:0
1394 - nseg:0
1395 - nseg:0
1396 - nseg:0
1397 - nseg:0
1398 - nseg:0
1399 - nseg:0
1400 - nseg:0
1401 - nseg:0
1402 - nseg:0
1403 - nseg:0
1404 - nseg:0
1405 - nseg:0
1406 - nseg:0
1407 - nseg:0
1408 - nseg:0
1409 - nseg:0
1410 - nseg:0
1411 - nseg:0
1412 - nseg:0
1413 - nseg:0
1414 - nseg:0
1415 - nseg:0
1416 - nseg:0
1417 - nseg:0
1418 - nseg:0
1419 - nseg:0
1420 - nseg:0
1421 - nseg:0
1422 - nseg:0
1423 - nseg:0
1424 - nseg:0
1425 - nseg:0
1426 - nseg:0
1427 - nseg:0
1428 - nseg:0
1429 - nseg:0
1430 - nseg:0
1431 - nseg:0
1432 - nseg:0
1433 - nseg:0
1434 - nseg:0
1435 - nseg:0
1436 - nseg:0
1437 - nseg:0
1438 - nseg:0
1439 - nseg:0
1440 - nseg:0
1441 - nseg:0
1442 - nseg:0
1443 - nseg:0
1444 - nseg:0
1445 - nseg:0
1446 - nseg:0
1447 - nseg:0
1448 - nseg:0
1449 - nseg:0
1450 - nseg:0
1451 - nseg:0
1452 - nseg:0
1453 - nseg:0
1454 - nseg:0
1455 - nseg:0
1456 - nseg:0
1457 - nseg:0
1458 - nseg:0
1459 - nseg:0
1460 - nseg:0
1461 - nseg:0
1462 - nseg:0
1463 - nseg:0
1464 - nseg:0
1465 - nseg:0
1466 - nseg:0
1467 - nseg:0
1468 - nseg:0
1469 - nseg:0
1470 - nseg:0
1471 - nseg:0
1472 - nseg:0
1473 - nseg:0
1474 - nseg:0
1475 - nseg:0
1476 - nseg:0
1477 - nseg:0
1478 - nseg:0
1479 - nseg:0
1480 - nseg:0
1481 - nseg:0
1482 - nseg:0
1483 - nseg:0
1484 - nseg:0
1485 - nseg:0
1486 - nseg:0
1487 - nseg:0
1488 - nseg:0
1489 - nseg:0
1490 - nseg:0
1491 - nseg:0
1492 - nseg:0
1493 - nseg:0
1494 - nseg:0
1495 - nseg:0
1496 - nseg:0
1497 - nseg:0
1498 - nseg:0
1499 - nseg:0
1500 - nseg:0
1501 - nseg:0
1502 - nseg:0
1503 - nseg:0
1504 - nseg:0
1505 - nseg:0
1506 - nseg:0
1507 - nseg:0
1508 - nseg:0
1509 - nseg:0
1510 - nseg:0
1511 - nseg:0
1512 - nseg:0
1513 - nseg:0
1514 - nseg:0
1515 - nseg:0
1516 - nseg:0
1517 - nseg:0
1518 - nseg:0
1519 - nseg:0
1520 - nseg:0
1521 - nseg:0
1522 - nseg:0
1523 - nseg:0
1524 - nseg:0
1525 - nseg:0
1526 - nseg:0
1527 - nseg:0
1528 - nseg:0
1529 - nseg:0
1530 - nseg:0
1531 - nseg:0
1532 - nseg:0
1533 - nseg:0
1534 - nseg:0
1535 - nseg:0
1536 - nseg:0
1537 - nseg:0
1538 - nseg:0
1539 - nseg:0
1540 - nseg:0
1541 - nseg:0
1542 - nseg:0
1543 - nseg:0
1544 - nseg:0
1545 - nseg:0
1546 - nseg:0
1547 - nseg:0
1548 - nseg:0
1549 - nseg:0
1550 - nseg:0
1551 - nseg:0
1552 - nseg:0
1553 - nseg:0
1554 - nseg:0
1555 - nseg:0
1556 - nseg:0
1557 - nseg:0
1558 - nseg:0
1559 - nseg:0
1560 - nseg:0
1561 - nseg:0
1562 - nseg:0
1563 - nseg:0
1564 - nseg:0
1565 - nseg:0
1566 - nseg:0
1567 - nseg:0
1568 - nseg:0
1569 - nseg:0
1570 - nseg:0
1571 - nseg:0
1572 - nseg:0
1573 - nseg:0
1574 - nseg:0
1575 - nseg:0
1576 - nseg:0
1577 - nseg:0
1578 - nseg:0
1579 - nseg:0
1580 - nseg:0
1581 - nseg:0
1582 - nseg:0
1583 - nseg:0
1584 - nseg:0
1585 - nseg:0
1586 - nseg:0
1587 - nseg:0
1588 - nseg:0
1589 - nseg:0
1590 - nseg:0
1591 - nseg:0
1592 - nseg:0
1593 - nseg:0
1594 - nseg:0
1595 - nseg:0
1596 - nseg:0
1597 - nseg:0
1598 - nseg:0
1599 - nseg:0
1600 - nseg:0
1601 - nseg:0
1602 - nseg:0
1603 - nseg:0
1604 - nseg:0
1605 - nseg:0
1606 - nseg:0
1607 - nseg:0
1608 - nseg:0
1609 - nseg:0
1610 - nseg:0
1611 - nseg:0
1612 - nseg:0
1613 - nseg:0
1614 - nseg:0
1615 - nseg:0
1616 - nseg:0
1617 - nseg:0
1618 - nseg:0
1619 - nseg:0
1620 - nseg:0
1621 - nseg:0
1622 - nseg:0
1623 - nseg:0
1624 - nseg:0
1625 - nseg:0
1626 - nseg:0
1627 - nseg:0
1628 - nseg:0
1629 - nseg:0
1630 - nseg:0
1631 - nseg:0
1632 - nseg:0
1633 - nseg:0
1634 - nseg:0
1635 - nseg:0
1636 - nseg:0
1637 - nseg:0
1638 - nseg:0
1639 - nseg:0
1640 - nseg:0
1641 - nseg:0
1642 - nseg:0
1643 - nseg:0
1644 - nseg:0
1645 - nseg:0
1646 - nseg:0
1647 - nseg:0
1648 - nseg:0
1649 - nseg:0
1650 - nseg:0
1651 - nseg:0
1652 - nseg:0
1653 - nseg:0
1654 - nseg:0
1655 - nseg:0
1656 - nseg:0
1657 - nseg:0
1658 - nseg:0
1659 - nseg:0
1660 - nseg:0
1661 - nseg:0
1662 - nseg:0
1663 - nseg:0
1664 - nseg:0
1665 - nseg:0
1666 - nseg:0
1667 - nseg:0
1668 - nseg:0
1669 - nseg:0
1670 - nseg:0
1671 - nseg:0
1672 - nseg:0
1673 - nseg:0
1674 - nseg:0
1675 - nseg:0
1676 - nseg:0
1677 - nseg:0
1678 - nseg:0
1679 - nseg:0
1680 - nseg:0
1681 - nseg:0
1682 - nseg:0
1683 - nseg:0
1684 - nseg:0
1685 - nseg:0
1686 - nseg:0
1687 - nseg:0
1688 - nseg:0
1689 - nseg:0
1690 - nseg:0
1691 - nseg:0
1692 - nseg:0
1693 - nseg:0
1694 - nseg:0
1695 - nseg:0
1696 - nseg:0
1697 - nseg:0
1698 - nseg:0
1699 - nseg:0
1700 - nseg:0
1701 - nseg:0
1702 - nseg:0
1703 - nseg:0
1704 - nseg:0
1705 - nseg:0
1706 - nseg:0
1707 - nseg:0
1708 - nseg:0
1709 - nseg:0
1710 - nseg:0
1711 - nseg:0
1712 - nseg:0
1713 - nseg:0
1714 - nseg:0
1715 - nseg:0
1716 - nseg:0
1717 - nseg:0
1718 - nseg:0
1719 - nseg:0
1720 - nseg:0
1721 - nseg:0
1722 - nseg:0
1723 - nseg:0
1724 - nseg:0
1725 - nseg:0
1726 - nseg:0
1727 - nseg:0
1728 - nseg:0
1729 - nseg:0
1730 - nseg:0
1731 - nseg:0
1732 - nseg:0
1733 - nseg:0
1734 - nseg:0
1735 - nseg:0
1736 - nseg:0
1737 - nseg:0
1738 - nseg:0
1739 - nseg:0
1740 - nseg:0
1741 - nseg:0
1742 - nseg:0
1743 - nseg:0
1744 - nseg:0
1745 - nseg:0
1746 - nseg:0
1747 - nseg:0
1748 - nseg:0
1749 - nseg:0
1750 - nseg:0
1751 - nseg:0
1752 - nseg:0
1753 - nseg:0
1754 - nseg:0
1755 - nseg:0
1756 - nseg:0
1757 - nseg:0
1758 - nseg:0
1759 - nseg:0
1760 - nseg:0
1761 - nseg:0
1762 - nseg:0
1763 - nseg:0
1764 - nseg:0
1765 - nseg:0
1766 - nseg:0
1767 - nseg:0
1768 - nseg:0
1769 - nseg:0
1770 - nseg:0
1771 - nseg:0
1772 - nseg:0
1773 - nseg:0
1774 - nseg:0
1775 - nseg:0
1776 - nseg:0
1777 - nseg:0
1778 - nseg:0
1779 - nseg:0
1780 - nseg:0
1781 - nseg:0
1782 - nseg:0
1783 - nseg:0
1784 - nseg:0
1785 - nseg:0
1786 - nseg:0
1787 - nseg:0
1788 - nseg:0
1789 - nseg:0
1790 - nseg:0
1791 - nseg:0
1792 - nseg:0
1793 - nseg:0
1794 - nseg:0
1795 - nseg:0
1796 - nseg:0
1797 - nseg:0
1798 - nseg:0
1799 - nseg:0
1800 - nseg:0
1801 - nseg:0
1802 - nseg:0
1803 - nseg:0
1804 - nseg:0
1805 - nseg:0
1806 - nseg:0
1807 - nseg:0
1808 - nseg:0
1809 - nseg:0
1810 - nseg:0
1811 - nseg:0
1812 - nseg:0
1813 - nseg:0
1814 - nseg:0
1815 - nseg:0
1816 - nseg:0
1817 - nseg:0
1818 - nseg:0
1819 - nseg:0
1820 - nseg:0
1821 - nseg:0
1822 - nseg:0
1823 - nseg:0
1824 - nseg:0
1825 - nseg:0
1826 - nseg:0
1827 - nseg:0
1828 - nseg:0
1829 - nseg:0
1830 - nseg:0
1831 - nseg:0
1832 - nseg:0
1833 - nseg:0
1834 - nseg:0
1835 - nseg:0
1836 - nseg:0
1837 - nseg:0
1838 - nseg:0
1839 - nseg:0
1840 - nseg:0
1841 - nseg:0
1842 - nseg:0
1843 - nseg:0
1844 - nseg:0
1845 - nseg:0
1846 - nseg:0
1847 - nseg:0
1848 - nseg:0
1849 - nseg:0
1850 - nseg:0
1851 - nseg:0
1852 - nseg:0
1853 - nseg:0
1854 - nseg:0
1855 - nseg:0
1856 - nseg:0
1857 - nseg:0
1858 - nseg:0
1859 - nseg:0
1860 - nseg:0
1861 - nseg:0
1862 - nseg:0
1863 - nseg:0
1864 - nseg:0
1865 - nseg:0
1866 - nseg:0
1867 - nseg:0
1868 - nseg:0
1869 - nseg:0
1870 - nseg:0
1871 - nseg:0
1872 - nseg:0
1873 - nseg:0
1874 - nseg:0
1875 - nseg:0
1876 - nseg:0
1877 - nseg:0
1878 - nseg:0
1879 - nseg:0
1880 - nseg:0
1881 - nseg:0
1882 - nseg:0
1883 - nseg:0
1884 - nseg:0
1885 - nseg:0
1886 - nseg:0
1887 - nseg:0
1888 - nseg:0
1889 - nseg:0
1890 - nseg:0
1891 - nseg:0
1892 - nseg:0
1893 - nseg:0
1894 - nseg:0
1895 - nseg:0
1896 - nseg:0
1897 - nseg:0
1898 - nseg:0
1899 - nseg:0
1900 - nseg:0
1901 - nseg:0
1902 - nseg:0
1903 - nseg:0
1904 - nseg:0
1905 - nseg:0
1906 - nseg:0
1907 - nseg:0
1908 - nseg:0
1909 - nseg:0
1910 - nseg:0
1911 - nseg:0
1912 - nseg:0
1913 - nseg:0
1914 - nseg:0
1915 - nseg:0
1916 - nseg:0
1917 - nseg:0
1918 - nseg:0
1919 - nseg:0
1920 - nseg:0
1921 - nseg:0
1922 - nseg:0
1923 - nseg:0
1924 - nseg:0
1925 - nseg:0
1926 - nseg:0
1927 - nseg:0
1928 - nseg:0
1929 - nseg:0
1930 - nseg:0
1931 - nseg:0
1932 - nseg:0
1933 - nseg:0
1934 - nseg:0
1935 - nseg:0
1936 - nseg:0
1937 - nseg:0
1938 - nseg:0
1939 - nseg:0
1940 - nseg:0
1941 - nseg:0
1942 - nseg:0
1943 - nseg:0
1944 - nseg:0
1945 - nseg:0
1946 - nseg:0
1947 - nseg:0
1948 - nseg:0
1949 - nseg:0
1950 - nseg:0
1951 - nseg:0
1952 - nseg:0
1953 - nseg:0
1954 - nseg:0
1955 - nseg:0
1956 - nseg:0
1957 - nseg:0
1958 - nseg:0
1959 - nseg:0
1960 - nseg:0
1961 - nseg:0
1962 - nseg:0
1963 - nseg:0
1964 - nseg:0
1965 - nseg:0
1966 - nseg:0
1967 - nseg:0
1968 - nseg:0
1969 - nseg:0
1970 - nseg:0
1971 - nseg:0
1972 - nseg:0
1973 - nseg:0
1974 - nseg:0
1975 - nseg:0
1976 - nseg:0
1977 - nseg:0
1978 - nseg:0
1979 - nseg:0
1980 - nseg:0
1981 - nseg:0
1982 - nseg:0
1983 - nseg:0
1984 - nseg:0
1985 - nseg:0
1986 - nseg:0
1987 - nseg:0
1988 - nseg:0
1989 - nseg:0
1990 - nseg:0
1991 - nseg:0
1992 - nseg:0
1993 - nseg:0
1994 - nseg:0
1995 - nseg:0
1996 - nseg:0
1997 - nseg:0
1998 - nseg:0
1999 - nseg:0
2000 - nseg:0
2001 - nseg:0
2002 - nseg:0
2003 - nseg:0
2004 - nseg:0
2005 - nseg:0
2006 - nseg:0
2007 - nseg:0
2008 - nseg:0
2009 - nseg:0
2010 - nseg:0
2011 - nseg:0
2012 - nseg:0
2013 - nseg:0
2014 - nseg:0
2015 - nseg:0
2016 - nseg:0
2017 - nseg:0
2018 - nseg:0
2019 - nseg:0
2020 - nseg:0
2021 - nseg:0
2022 - nseg:0
2023 - nseg:0
2024 - nseg:0
2025 - nseg:0
2026 - nseg:0
2027 - nseg:0
2028 - nseg:0
2029 - nseg:0
2030 - nseg:0
2031 - nseg:0
2032 - nseg:0
2033 - nseg:0
2034 - nseg:0
2035 - nseg:0
2036 - nseg:0
2037 - nseg:0
2038 - nseg:0
2039 - nseg:0
2040 - nseg:0
2041 - nseg:0
2042 - nseg:0
2043 - nseg:0
2044 - nseg:0
2045 - nseg:0
2046 - nseg:0
2047 - nseg:0
2048 - nseg:0
2049 - nseg:0
2050 - nseg:0
2051 - nseg:0
2052 - nseg:0
2053 - nseg:0
2054 - nseg:0
2055 - nseg:0
2056 - nseg:0
2057 - nseg:0
2058 - nseg:0
2059 - nseg:0
2060 - nseg:0
2061 - nseg:0
2062 - nseg:0
2063 - nseg:0
2064 - nseg:0
2065 - nseg:0
2066 - nseg:0
2067 - nseg:0
2068 - nseg:0
2069 - nseg:0
2070 - nseg:0
2071 - nseg:0
2072 - nseg:0
2073 - nseg:0
2074 - nseg:0
2075 - nseg:0
2076 - nseg:0
2077 - nseg:0
2078 - nseg:0
2079 - nseg:0
2080 - nseg:0
2081 - nseg:0
2082 - nseg:0
2083 - nseg:0
2084 - nseg:0
2085 - nseg:0
2086 - nseg:0
2087 - nseg:0
2088 - nseg:0
2089 - nseg:0
2090 - nseg:0
2091 - nseg:0
2092 - nseg:0
2093 - nseg:0
2094 - nseg:0
2095 - nseg:0
2096 - nseg:0
2097 - nseg:0
2098 - nseg:0
2099 - nseg:0
2100 - nseg:0
2101 - nseg:0
2102 - nseg:0
2103 - nseg:0
2104 - nseg:0
2105 - nseg:0
2106 - nseg:0
2107 - nseg:0
2108 - nseg:0
2109 - nseg:0
2110 - nseg:0
2111 - nseg:0
2112 - nseg:0
2113 - nseg:0
2114 - nseg:0
2115 - nseg:0
2116 - nseg:0
2117 - nseg:0
2118 - nseg:0
2119 - nseg:0
2120 - nseg:0
2121 - nseg:0
2122 - nseg:0
2123 - nseg:0
2124 - nseg:0
2125 - nseg:0
2126 - nseg:0
2127 - nseg:0
2128 - nseg:0
2129 - nseg:0
2130 - nseg:0
2131 - nseg:0
2132 - nseg:0
2133 - nseg:0
2134 - nseg:0
2135 - nseg:0
2136 - nseg:0
2137 - nseg:0
2138 - nseg:0
2139 - nseg:0
2140 - nseg:0
2141 - nseg:0
2142 - nseg:0
2143 - nseg:0
2144 - nseg:0
2145 - nseg:0
2146 - nseg:0
2147 - nseg:0
2148 - nseg:0
2149 - nseg:0
2150 - nseg:0
2151 - nseg:0
2152 - nseg:0
2153 - nseg:0
2154 - nseg:0
2155 - nseg:0
2156 - nseg:0
2157 - nseg:0
2158 - nseg:0
2159 - nseg:0
2160 - nseg:0
2161 - nseg:0
2162 - nseg:0
2163 - nseg:0
2164 - nseg:0
2165 - nseg:0
2166 - nseg:0
2167 - nseg:0
2168 - nseg:0
2169 - nseg:0
2170 - nseg:0
2171 - nseg:0
2172 - nseg:0
2173 - nseg:0
2174 - nseg:0
2175 - nseg:0
2176 - nseg:0
2177 - nseg:0
2178 - nseg:0
2179 - nseg:0
2180 - nseg:0
2181 - nseg:0
2182 - nseg:0
2183 - nseg:0
2184 - nseg:0
2185 - nseg:0
2186 - nseg:0
2187 - nseg:0
2188 - nseg:0
2189 - nseg:0
2190 - nseg:0
2191 - nseg:0
2192 - nseg:0
2193 - nseg:0
2194 - nseg:0
2195 - nseg:0
2196 - nseg:0
2197 - nseg:0
2198 - nseg:0
2199 - nseg:0
2200 - nseg:0
2201 - nseg:0
2202 - nseg:0
2203 - nseg:0
2204 - nseg:0
2205 - nseg:0
2206 - nseg:0
2207 - nseg:0
2208 - nseg:0
2209 - nseg:0
2210 - nseg:0
2211 - nseg:0
2212 - nseg:0
2213 - nseg:0
2214 - nseg:0
2215 - nseg:0
2216 - nseg:0
2217 - nseg:0
2218 - nseg:0
2219 - nseg:0
2220 - nseg:0
2221 - nseg:0
2222 - nseg:0
2223 - nseg:0
2224 - nseg:0
2225 - nseg:0
2226 - nseg:0
2227 - nseg:0
2228 - nseg:0
2229 - nseg:0
2230 - nseg:0
2231 - nseg:0
2232 - nseg:0
2233 - nseg:0
2234 - nseg:0
2235 - nseg:0
2236 - nseg:0
2237 - nseg:0
2238 - nseg:0
2239 - nseg:0
2240 - nseg:0
2241 - nseg:0
2242 - nseg:0
2243 - nseg:0
2244 - nseg:0
2245 - nseg:0
2246 - nseg:0
2247 - nseg:0
2248 - nseg:0
2249 - nseg:0
2250 - nseg:0
2251 - nseg:0
2252 - nseg:0
2253 - nseg:0
2254 - nseg:0
2255 - nseg:0
2256 - nseg:0
2257 - nseg:0
2258 - nseg:0
2259 - nseg:0
2260 - nseg:0
2261 - nseg:0
2262 - nseg:0
2263 - nseg:0
2264 - nseg:0
2265 - nseg:0
2266 - nseg:0
2267 - nseg:0
2268 - nseg:0
2269 - nseg:0
2270 - nseg:0
2271 - nseg:0
2272 - nseg:0
2273 - nseg:0
2274 - nseg:0
2275 - nseg:0
2276 - nseg:0
2277 - nseg:0
2278 - nseg:0
2279 - nseg:0
2280 - nseg:0
2281 - nseg:0
2282 - nseg:0
2283 - nseg:0
2284 - nseg:0
2285 - nseg:0
2286 - nseg:0
2287 - nseg:0
2288 - nseg:0
2289 - nseg:0
2290 - nseg:0
2291 - nseg:0
2292 - nseg:0
2293 - nseg:0
2294 - nseg:0
2295 - nseg:0
2296 - nseg:0
2297 - nseg:0
2298 - nseg:0
2299 - nseg:0
2300 - nseg:0
2301 - nseg:0
2302 - nseg:0
2303 - nseg:0
2304 - nseg:0
2305 - nseg:0
2306 - nseg:0
2307 - nseg:0
2308 - nseg:0
2309 - nseg:0
2310 - nseg:0
2311 - nseg:0
2312 - nseg:0
2313 - nseg:0
2314 - nseg:0
2315 - nseg:0
2316 - nseg:0
2317 - nseg:0
2318 - nseg:0
2319 - nseg:0
2320 - nseg:0
2321 - nseg:0
2322 - nseg:0
2323 - nseg:0
2324 - nseg:0
2325 - nseg:0
2326 - nseg:0
2327 - nseg:0
2328 - nseg:0
2329 - nseg:0
2330 - nseg:0
2331 - nseg:0
2332 - nseg:0
2333 - nseg:0
2334 - nseg:0
2335 - nseg:0
2336 - nseg:0
2337 - nseg:0
2338 - nseg:0
2339 - nseg:0
2340 - nseg:0
2341 - nseg:0
2342 - nseg:0
2343 - nseg:0
2344 - nseg:0
2345 - nseg:0
2346 - nseg:0
2347 - nseg:0
2348 - nseg:0
2349 - nseg:0
2350 - nseg:0
2351 - nseg:0
2352 - nseg:0
2353 - nseg:0
2354 - nseg:0
2355 - nseg:0
2356 - nseg:0
2357 - nseg:0
2358 - nseg:0
2359 - nseg:0
2360 - nseg:0
2361 - nseg:0
2362 - nseg:0
2363 - nseg:0
2364 - nseg:0
2365 - nseg:0
2366 - nseg:0
2367 - nseg:0
2368 - nseg:0
2369 - nseg:0
2370 - nseg:0
2371 - nseg:0
2372 - nseg:0
2373 - nseg:0
2374 - nseg:0
2375 - nseg:0
2376 - nseg:0
2377 - nseg:0
2378 - nseg:0
2379 - nseg:0
2380 - nseg:0
2381 - nseg:0
2382 - nseg:0
2383 - nseg:0
2384 - nseg:0
2385 - nseg:0
2386 - nseg:0
2387 - nseg:0
2388 - nseg:0
2389 - nseg:0
2390 - nseg:0
2391 - nseg:0
2392 - nseg:0
2393 - nseg:0
2394 - nseg:0
2395 - nseg:0
2396 - nseg:0
2397 - nseg:0
2398 - nseg:0
2399 - nseg:0
2400 - nseg:0
2401 - nseg:0
2402 - nseg:0
2403 - nseg:0
2404 - nseg:0
2405 - nseg:0
2406 - nseg:0
2407 - nseg:0
2408 - nseg:0
2409 - nseg:0
2410 - nseg:0
2411 - nseg:0
2412 - nseg:0
2413 - nseg:0
2414 - nseg:0
2415 - nseg:0
2416 - nseg:0
2417 - nseg:0
2418 - nseg:0
2419 - nseg:0
2420 - nseg:0
2421 - nseg:0
2422 - nseg:0
2423 - nseg:0
2424 - nseg:0
2425 - nseg:0
2426 - nseg:0
2427 - nseg:0
2428 - nseg:0
2429 - nseg:0
2430 - nseg:0
2431 - nseg:0
2432 - nseg:0
2433 - nseg:0
2434 - nseg:0
2435 - nseg:0
2436 - nseg:0
2437 - nseg:0
2438 - nseg:0
2439 - nseg:0
2440 - nseg:0
2441 - nseg:0
2442 - nseg:0
2443 - nseg:0
2444 - nseg:0
2445 - nseg:0
2446 - nseg:0
2447 - nseg:0
2448 - nseg:0
2449 - nseg:0
2450 - nseg:0
2451 - nseg:0
2452 - nseg:0
2453 - nseg:0
2454 - nseg:0
2455 - nseg:0
2456 - nseg:0
2457 - nseg:0
2458 - nseg:0
2459 - nseg:0
2460 - nseg:0
2461 - nseg:0
2462 - nseg:0
2463 - nseg:0
2464 - nseg:0
2465 - nseg:0
2466 - nseg:0
2467 - nseg:0
2468 - nseg:0
2469 - nseg:0
2470 - nseg:0
2471 - nseg:0
2472 - nseg:0
2473 - nseg:0
2474 - nseg:0
2475 - nseg:0
2476 - nseg:0
2477 - nseg:0
2478 - nseg:0
2479 - nseg:0
2480 - nseg:0
2481 - nseg:0
2482 - nseg:0
2483 - nseg:0
2484 - nseg:0
2485 - nseg:0
2486 - nseg:0
2487 - nseg:0
2488 - nseg:0
2489 - nseg:0
2490 - nseg:0
2491 - nseg:0
2492 - nseg:0
2493 - nseg:0
2494 - nseg:0
2495 - nseg:0
2496 - nseg:0
2497 - nseg:0
2498 - nseg:0
2499 - nseg:0
2500 - nseg:0
2501 - nseg:0
2502 - nseg:0
2503 - nseg:0
2504 - nseg:0
2505 - nseg:0
2506 - nseg:0
2507 - nseg:0
2508 - nseg:0
2509 - nseg:0
2510 - nseg:0
2511 - nseg:0
2512 - nseg:0
2513 - nseg:0
2514 - nseg:0
2515 - nseg:0
2516 - nseg:0
2517 - nseg:0
2518 - nseg:0
2519 - nseg:0
2520 - nseg:0
2521 - nseg:0
2522 - nseg:0
2523 - nseg:0
2524 - nseg:0
2525 - nseg:0
2526 - nseg:0
2527 - nseg:0
2528 - nseg:0
2529 - nseg:0
2530 - nseg:0
2531 - nseg:0
2532 - nseg:0
2533 - nseg:0
2534 - nseg:0
2535 - nseg:0
2536 - nseg:0
2537 - nseg:0
2538 - nseg:0
2539 - nseg:0
2540 - nseg:0
2541 - nseg:0
2542 - nseg:0
2543 - nseg:0
2544 - nseg:0
2545 - nseg:0
2546 - nseg:0
2547 - nseg:0
2548 - nseg:0
2549 - nseg:0
2550 - nseg:0
2551 - nseg:0
2552 - nseg:0
2553 - nseg:0
2554 - nseg:0
2555 - nseg:0
2556 - nseg:0
2557 - nseg:0
2558 - nseg:0
2559 - nseg:0
2560 - nseg:0
2561 - nseg:0
2562 - nseg:0
2563 - nseg:0
2564 - nseg:0
2565 - nseg:0
2566 - nseg:0
2567 - nseg:0
2568 - nseg:0
2569 - nseg:0
2570 - nseg:0
2571 - nseg:0
2572 - nseg:0
2573 - nseg:0
2574 - nseg:0
2575 - nseg:0
2576 - nseg:0
2577 - nseg:0
2578 - nseg:0
2579 - nseg:0
2580 - nseg:0
2581 - nseg:0
2582 - nseg:0
2583 - nseg:0
2584 - nseg:0
2585 - nseg:0
2586 - nseg:0
2587 - nseg:0
2588 - nseg:0
2589 - nseg:0
2590 - nseg:0
2591 - nseg:0
2592 - nseg:0
2593 - nseg:0
2594 - nseg:0
2595 - nseg:0
2596 - nseg:0
2597 - nseg:0
2598 - nseg:0
2599 - nseg:0
2600 - nseg:0
2601 - nseg:0
2602 - nseg:0
2603 - nseg:0
2604 - nseg:0
2605 - nseg:0
2606 - nseg:0
2607 - nseg:0
2608 - nseg:0
2609 - nseg:0
2610 - nseg:0
2611 - nseg:0
2612 - nseg:0
2613 - nseg:0
2614 - nseg:0
2615 - nseg:0
2616 - nseg:0
2617 - nseg:0
2618 - nseg:0
2619 - nseg:0
2620 - nseg:0
2621 - nseg:0
2622 - nseg:0
2623 - nseg:0
2624 - nseg:0
2625 - nseg:0
2626 - nseg:0
2627 - nseg:0
2628 - nseg:0
2629 - nseg:0
2630 - nseg:0
16383 - nseg:0



------------------
num_segments: 2
initial start_word_address: 0
initial end_word_address: 0

found disc @ current_instruction->word_address = 16383
start_word_address: 0
end_word_address: 2630

Segment: 0
	 Start address: 0
	 End address: 2630
Segment: 1
	 Start address: 16383
	 End address: 16383
Prog size: 32768

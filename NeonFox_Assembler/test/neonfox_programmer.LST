@PUSH_FILE:    neonfox_programmer.asm
@PUSH_FILE:    DE2_PROGRAMMER.INC
@POP_FILE:    DE2_PROGRAMMER.INC
@LINE: 60
    ORG 0
    BRA INT_RESET
    NOP
    RET	
    NOP
    RET 
    NOP
    RET	
    NOP
    RET	
    NOP
    RET	
    NOP
    RET	
    NOP
    RET	
    NOP
    RET	
    NOP
    RET 
    NOP
    RET	
    NOP
    RET	
    NOP
    RET	
    NOP
    RET	
    NOP
    RET	
    NOP
    RET 
    NOP
@LINE: 98
INT_RESET    MOVE W, R31, R16
    MOVE W, R31, R17
    MOVE W, R31, R18
    MOVE W, R31, R19
    MOVE W, R31, R0
    MOVE W, R31, R1
    MOVE W, R31, R2
    MOVE W, R31, R3
    MOVE W, R31, R4
    MOVE W, R31, R5
    MOVE W, R31, R6
    MOVE W, R31, R7
    MOVE W, R31, R8
    MOVE W, R31, R9
    MOVE W, R31, R10
    MOVE W, R31, R11
    MOVE W, R31, R12
    MOVE W, R31, R13
    MOVE W, R31, R14
    MOVE W, R31, R15
    MOVE W, R31, R21
    MOVE W, R31, R20
    MOVE W, R31, R22
    MOVE W, R31, R27
    MOVE W, R31, R26
@LINE: 124
    LIM H, R17, `LH $FFFC
    LIM L, R17, `LL $FFFC
    MOVE W, R17, R22
    LIM W, R16, $01
    MOVE W, R16, R25
@LINE: 130
@PUSH_MACRO:    INIT_PLATFORM:DE2_PROGRAMMER.INC
@LINE: 276
    LIM H, R16, `LH SERIAL_INIT
    LIM L, R16, `LL SERIAL_INIT
    MOVE W, R16, R26
    LIM H, R16, `LH 433	
    LIM L, R16, `LL 433
    CALL
    MOVE W, R16, R0
@LINE: 284
    LIM H, R16, `LH FLASH_INIT
    LIM L, R16, `LL FLASH_INIT
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 290
    LIM H, R16, `LH SRAM_INIT
    LIM L, R16, `LL SRAM_INIT
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 296
    LIM H, R16, `LH SDRAM_INIT
    LIM L, R16, `LL SDRAM_INIT
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 302
    LIM H, R16, `LH $1FE7
    LIM L, R16, `LL $1FE7
    MOVE W, R16, R20
    LIM H, R16, `LH TARGET_DESCRIPTORS
    LIM L, R16, `LL TARGET_DESCRIPTORS			
    MOVE W, R16, R24
@LINE: 309
    LIM H, R16, `LH $1FF0
    LIM L, R16, `LL $1FF0
    MOVE W, R16, R20
    LIM H, R16, `LH FLASH_SET_ADDRESS_WRITE
    LIM L, R16, `LL FLASH_SET_ADDRESS_WRITE
    MOVE W, R16, R24
@LINE: 316
    LIM H, R16, `LH $1FEF
    LIM L, R16, `LL $1FEF
    MOVE W, R16, R20
    LIM H, R16, `LH FLASH_SET_ADDRESS_READ
    LIM L, R16, `LL FLASH_SET_ADDRESS_READ
    MOVE W, R16, R24
@LINE: 323
    LIM H, R16, `LH $1FEE
    LIM L, R16, `LL $1FEE
    MOVE W, R16, R20
    LIM H, R16, `LH FLASH_GET_N_WORDS
    LIM L, R16, `LL FLASH_GET_N_WORDS
    MOVE W, R16, R24
@LINE: 330
    LIM H, R16, `LH $1FED
    LIM L, R16, `LL $1FED
    MOVE W, R16, R20
    LIM H, R16, `LH FLASH_SEND_N_WORDS
    LIM L, R16, `LL FLASH_SEND_N_WORDS
    MOVE W, R16, R24
@LINE: 337
    LIM H, R16, `LH $1FEC
    LIM L, R16, `LL $1FEC
    MOVE W, R16, R20
    LIM H, R16, `LH FLASH_ERASE_ALL_BLOCKS
    LIM L, R16, `LL FLASH_ERASE_ALL_BLOCKS
    MOVE W, R16, R24
@LINE: 344
    LIM H, R16, `LH $1FEB
    LIM L, R16, `LL $1FEB
    MOVE W, R16, R20
    LIM H, R16, `LH FLASH_UNLOCK_ALL_BLOCKS
    LIM L, R16, `LL FLASH_UNLOCK_ALL_BLOCKS
    MOVE W, R16, R24
@LINE: 351
    LIM H, R16, `LH $1FEA
    LIM L, R16, `LL $1FEA
    MOVE W, R16, R20
    LIM H, R16, `LH FLASH_LOCK_ALL_BLOCKS
    LIM L, R16, `LL FLASH_LOCK_ALL_BLOCKS
    MOVE W, R16, R24
@LINE: 358
    LIM H, R16, `LH $1FE9
    LIM L, R16, `LL $1FE9
    MOVE W, R16, R20
    LIM H, R16, `LH FLASH_NULL
    LIM L, R16, `LL FLASH_NULL
    MOVE W, R16, R24
@LINE: 365
    LIM H, R16, `LH $1FE8
    LIM L, R16, `LL $1FE8
    MOVE W, R16, R20
    LIM H, R16, `LH FLASH_LOCK_BLOCK
    LIM L, R16, `LL FLASH_LOCK_BLOCK
    MOVE W, R16, R24
@LINE: 372
    LIM H, R16, `LH $1FF1
    LIM L, R16, `LL $1FF1
    MOVE W, R16, R20
    LIM H, R16, `LH FLASH_ERASE_BLOCK
    LIM L, R16, `LL FLASH_ERASE_BLOCK
    MOVE W, R16, R24
@LINE: 379
    LIM H, R16, `LH $1FE6
    LIM L, R16, `LL $1FE6
    MOVE W, R16, R20
    LIM H, R16, `LH $3FFE
    LIM L, R16, `LL $3FFE
    MOVE W, R16, R24		
@LINE: 386
    LIM H, R16, `LH $1FE5
    LIM L, R16, `LL $1FE5
    MOVE W, R16, R20
    LIM H, R16, `LH $3FFA
    LIM L, R16, `LL $3FFA
    MOVE W, R16, R24
@LINE: 393
    LIM H, R16, `LH $1FE4
    LIM L, R16, `LL $1FE4
    MOVE W, R16, R20
    LIM H, R16, `LH TARGET_SIZE
    LIM L, R16, `LL TARGET_SIZE
    MOVE W, R16, R24		
@POP_MACRO:    INIT_PLATFORM
@LINE: 132
    LIM H, R17, `LH $FFFC
    LIM L, R17, `LL $FFFC
    MOVE W, R17, R22
    LIM W, R16, $02
    MOVE W, R16, R25
@LINE: 138
    LIM H, R16, `LH MAIN
    LIM L, R16, `LL MAIN
    MOVE W, R16, R26
    JMP
    NOP
@PUSH_FILE:    neonfox_serial_gen2.inc
@LINE: 38
SERIAL_INIT    LIM H, R16, `LH $FFEA
    LIM L, R16, `LL $FFEA
    MOVE W, R16, R22
    MOVE L, R0, R25
    LIM H, R16, `LH $FFEB
    LIM L, R16, `LL $FFEB
    MOVE W, R16, R22
    RET
    MOVE S, R0, R25
@LINE: 57
SERIAL_GET_BYTE    LIM H, R16, `LH $FFE9
    LIM L, R16, `LL $FFE9
    MOVE W, R16, R22
@LINE: 61
SGB_WAIT    BITT W, R25, 7	
    BRNZ SGB_WAIT
    BITT W, R25, 3	
    BRZ SGB_WAIT	
    LIM L, R16, `LL $FFE8
    MOVE W, R16, R22
    RET
    MOVE L, R25, R11
@LINE: 79
SERIAL_SEND_BYTE    LIM H, R16, `LH $FFE9
    LIM L, R16, `LL $FFE9
    MOVE W, R16, R22
@LINE: 84
SSB_WAIT    BITT W, R25, 7	
    BRNZ SSB_WAIT
    BITT W, R25, 2	
    BRZ SSB_WAIT
    LIM L, R16, `LL $FFE8
    MOVE W, R16, R22
    RET
    MOVE L, R0, R25
@LINE: 97
SERIAL_GET_N_WORDS    LIM H, R17, `LH $3FFF
    LIM L, R17, `LL $3FFF
    MOVE W, R17, R20
    MOVE W, R24, R3
@LINE: 103
    LIM H, R16, `LH $1FF8
    LIM L, R16, `LL $1FF8
    MOVE W, R16, R5
@LINE: 108
    TEST W, R3
    BRNZ SGNB_LOOP
    NOP
    RET
@LINE: 115
SGNB_LOOP    LIM H, R17, `HH SERIAL_GET_BYTE
    LIM L, R17, `HL SERIAL_GET_BYTE
    LIM H, R16, `LH SERIAL_GET_BYTE
    LIM L, R16, `LL SERIAL_GET_BYTE
    MOVE W, R17, R27
    MOVE W, R16, R26
@LINE: 122
    CALL
    NOP
    MOVE L, R11, R6
@LINE: 126
    CALL
    NOP
    MOVE S, R11, R11
    MOVE H, R11, R6
@LINE: 132
    MOVE W, R5, R20
    MOVE W, R6, R24
@LINE: 136
    LIM W, R16, $01
    ADD W, R5, R5
@LINE: 140
    LIM W, R16, $01
    SUB W, R3, R3
@LINE: 144
    BRNZ SGNB_LOOP
    NOP
@LINE: 147
    RET
    NOP
@LINE: 154
SERIAL_SEND_N_WORDS    LIM H, R17, `LH $3FFF
    LIM L, R17, `LL $3FFF
    MOVE W, R17, R20
    MOVE W, R24, R3
@LINE: 160
    LIM H, R16, `LH $1FF8
    LIM L, R16, `LL $1FF8
    MOVE W, R16, R5
@LINE: 165
    TEST W, R3
    BRNZ SSNB_LOOP
    NOP
    RET
@LINE: 172
SSNB_LOOP    MOVE W, R5, R20
    MOVE W, R24, R6
@LINE: 176
    LIM H, R17, `HH SERIAL_SEND_BYTE
    LIM L, R17, `HL SERIAL_SEND_BYTE
    LIM H, R16, `LH SERIAL_SEND_BYTE
    LIM L, R16, `LL SERIAL_SEND_BYTE
    MOVE W, R17, R27
    MOVE W, R16, R26
@LINE: 183
    MOVE L, R6, R0
    CALL
    NOP
@LINE: 187
    MOVE S, R6, R0
    CALL
    NOP
@LINE: 192
    LIM W, R16, $01
    ADD W, R5, R5
@LINE: 196
    LIM W, R16, $01
    SUB W, R3, R3
@LINE: 200
    BRNZ SSNB_LOOP
    NOP
@LINE: 203
    RET
    NOP
@POP_FILE:    neonfox_serial_gen2.inc
@PUSH_FILE:    DE2_FLASH.INC
@LINE: 33
FLASH_NULL    LIM H, R16, $E0
    LIM L, R16, $00
    RET
    MOVE W, R16, R11
@LINE: 42
FLASH_INIT    LIM H, R17, `LH $FFD8
    LIM L, R17, `LL $FFD8
    MOVE W, R17, R22
    MOVE W, R31, R25
@LINE: 47
    LIM H, R17, `LH $FFD9
    LIM L, R17, `LL $FFD9
    MOVE W, R17, R22
    MOVE W, R31, R25
@LINE: 53
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $F0
    MOVE W, R16, R25
@LINE: 60
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 64
FI_WAIT_STATUS    BITT W, R25, 0		
    BRZ FI_WAIT_STATUS	
@LINE: 67
    LIM H, R16, `LH $FFDA
    LIM L, R16, `LL $FFDA
    MOVE W, R16, R22
    MOVE W, R31, R25	
@LINE: 72
    LIM H, R16, `LH $FFDE
    LIM L, R16, `LL $FFDE
    MOVE W, R16, R22
    MOVE W, R31, R25	
@LINE: 77
    RET
    NOP
@LINE: 83
FLASH_SET_ADDRESS_WRITE    LIM H, R16, `LH $3FFB		
    LIM L, R16, `LL $3FFB
    MOVE W, R16, R20
    MOVE W, R24, R4
@LINE: 88
    LIM H, R16, `LH $3FFA
    LIM L, R16, `LL $3FFA
    MOVE W, R16, R20
    MOVE W, R24, R3
@LINE: 93
    MOVE W, R4, R17 
    MOVE W, R3, R18	
@LINE: 96
    MOVE W, R18, R16 
    ADD W, R18, R18
    MOVE W, R17, R16
    ADDC W, R17, R17			
@LINE: 101
    LIM H, R16, `LH $3FF9		
    LIM L, R16, `LL $3FF9
    MOVE W, R16, R20
    MOVE W, R17, R24
@LINE: 106
    LIM H, R16, `LH $3FF8
    LIM L, R16, `LL $3FF8
    MOVE W, R16, R20
    MOVE W, R18, R24
@LINE: 111
    RET
    NOP
@LINE: 118
FLASH_SET_ADDRESS_READ    LIM H, R16, `LH $FFDE
    LIM L, R16, `LL $FFDE
    MOVE W, R16, R22
    LIM W, R16, $00
    MOVE W, R16, R25	
@LINE: 124
    LIM H, R16, `LH $3FFB		
    LIM L, R16, `LL $3FFB
    MOVE W, R16, R20
    MOVE W, R24, R4
@LINE: 129
    LIM H, R16, `LH $3FFA
    LIM L, R16, `LL $3FFA
    MOVE W, R16, R20
    MOVE W, R24, R3
@LINE: 134
    MOVE W, R4, R17 
    MOVE W, R3, R18	
@LINE: 137
    MOVE W, R18, R16 
    ADD W, R18, R18
    MOVE W, R17, R16
    ADDC W, R17, R17			
@LINE: 142
    LIM H, R16, `LH $3FF9		
    LIM L, R16, `LL $3FF9
    MOVE W, R16, R20
    MOVE W, R17, R24
@LINE: 147
    LIM H, R16, `LH $3FF8
    LIM L, R16, `LL $3FF8
    MOVE W, R16, R20
    MOVE W, R18, R24
@LINE: 152
    LIM H, R16, `LH $FFDC
    LIM L, R16, `LL $FFDC
    MOVE W, R16, R22
    MOVE W, R17, R25
@LINE: 157
    LIM H, R16, `LH $FFDD
    LIM L, R16, `LL $FFDD
    MOVE W, R16, R22
    MOVE W, R18, R25
@LINE: 162
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 166
FSAR_WAIT    BITT W, R25, 1		
    BRZ FSAR_WAIT		
    NOP
@LINE: 170
    RET
    NOP
@LINE: 176
FLASH_SET_BYTE_ADDR_WRITE    LIM H, R16, `LH $3FF9		
    LIM L, R16, `LL $3FF9
    MOVE W, R16, R20
    MOVE W, R24, R17
@LINE: 181
    LIM H, R16, `LH $3FF8
    LIM L, R16, `LL $3FF8
    MOVE W, R16, R20
    MOVE W, R24, R18
@LINE: 186
    LIM H, R16, `LH $FFD8
    LIM L, R16, `LL $FFD8
    MOVE W, R16, R22
    MOVE W, R17, R25
@LINE: 191
    LIM H, R16, `LH $FFD9
    LIM L, R16, `LL $FFD9
    MOVE W, R16, R22
    MOVE W, R18, R25
@LINE: 196
    RET
    NOP
@LINE: 203
FLASH_SET_BYTE_ADDR_READ    LIM H, R16, `LH $FFDE
    LIM L, R16, `LL $FFDE
    MOVE W, R16, R22
    LIM W, R16, $00
    MOVE W, R16, R25	
@LINE: 209
    LIM H, R16, `LH $3FF9		
    LIM L, R16, `LL $3FF9
    MOVE W, R16, R20
    MOVE W, R24, R17
@LINE: 214
    LIM H, R16, `LH $3FF8
    LIM L, R16, `LL $3FF8
    MOVE W, R16, R20
    MOVE W, R24, R18
@LINE: 219
    LIM H, R16, `LH $FFDC
    LIM L, R16, `LL $FFDC
    MOVE W, R16, R22
    MOVE W, R17, R25
@LINE: 224
    LIM H, R16, `LH $FFDD
    LIM L, R16, `LL $FFDD
    MOVE W, R16, R22
    MOVE W, R18, R25		
@LINE: 229
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 233
FSBAR_WAIT    BITT W, R25, 1		
    BRZ FSBAR_WAIT		
    NOP
@LINE: 237
    RET
    NOP
@LINE: 243
FLASH_GET_WORD    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
    MOVE W, R31, R25	
@LINE: 248
FGW_WAIT_L    BITT W, R25, 1	
    BRZ FGW_WAIT_L	
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    MOVE L, R25, R11
@LINE: 254
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
    MOVE W, R31, R25	
@LINE: 259
FGW_WAIT_H    BITT W, R25, 1	
    BRZ FGW_WAIT_H	
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    MOVE S, R25, R16
    RET
    MOVE H, R16, R11
@LINE: 276
FLASH_SEND_BYTE    LIM H, R16, `LH FLASH_SET_BYTE_ADDR_READ
    LIM L, R16, `LL FLASH_SET_BYTE_ADDR_READ
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 288
    LIM H, R16, `LH $FFD8
    LIM L, R16, `LL $FFD8
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $00
    MOVE W, R16, R25
@LINE: 295
    LIM H, R16, `LH $FFD9
    LIM L, R16, `LL $FFD9
    MOVE W, R16, R22
    LIM H, R16, $0A
    LIM L, R16, $AA
    MOVE W, R16, R25
@LINE: 302
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $AA
    MOVE W, R16, R25	
@LINE: 309
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 313
FSW_WAIT_FIRST    BITT W, R25, 0		
    BRZ FSW_WAIT_FIRST	
@LINE: 322
    LIM H, R16, `LH $FFD8
    LIM L, R16, `LL $FFD8
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $00
    MOVE W, R16, R25
@LINE: 329
    LIM H, R16, `LH $FFD9
    LIM L, R16, `LL $FFD9
    MOVE W, R16, R22
    LIM H, R16, $05
    LIM L, R16, $55
    MOVE W, R16, R25
@LINE: 336
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $55
    MOVE W, R16, R25	
@LINE: 343
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 347
FSW_WAIT_SECOND    BITT W, R25, 0		
    BRZ FSW_WAIT_SECOND	
@LINE: 356
    LIM H, R16, `LH $FFD8
    LIM L, R16, `LL $FFD8
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $00
    MOVE W, R16, R25
@LINE: 363
    LIM H, R16, `LH $FFD9
    LIM L, R16, `LL $FFD9
    MOVE W, R16, R22
    LIM H, R16, $0A
    LIM L, R16, $AA
    MOVE W, R16, R25
@LINE: 370
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $A0
    MOVE W, R16, R25	
@LINE: 377
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 381
FSW_WAIT_THIRD    BITT W, R25, 0		
    BRZ FSW_WAIT_THIRD	
@LINE: 390
    LIM H, R16, `LH FLASH_SET_BYTE_ADDR_WRITE
    LIM L, R16, `LL FLASH_SET_BYTE_ADDR_WRITE
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 402
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    MOVE L, R0, R25	
@LINE: 407
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 411
FSW_WAIT_DATA    BITT W, R25, 0		
    BRZ FSW_WAIT_DATA	
@LINE: 420
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
    MOVE W, R31, R25	
@LINE: 425
FSW_WAIT_PREV    BITT W, R25, 1		
    BRZ FSW_WAIT_PREV	
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    MOVE W, R25, R18	
@LINE: 439
FSW_WAIT_BUSY    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
    MOVE W, R31, R25	
@LINE: 444
FSW_WAIT_STATUS    BITT W, R25, 1		
    BRZ FSW_WAIT_STATUS	
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    MOVE W, R25, R16	
    XOR W, R18, R17	
    BITT W, R17, 6
    BRZ FSW_DONE
    MOVE W, R16, R18	
@LINE: 455
    BITT W, R16, 5		
    BRZ FSW_WAIT_BUSY
@LINE: 458
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
    MOVE W, R31, R25	
@LINE: 463
FSW_TOGGLE_PREV    BITT W, R25, 1		
    BRZ FSW_TOGGLE_PREV	
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    MOVE W, R25, R18	
@LINE: 470
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
    MOVE W, R31, R25	
@LINE: 475
FSW_TOGGLE_NEW    BITT W, R25, 1		
    BRZ FSW_TOGGLE_NEW	
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    MOVE W, R25, R16	
    XOR W, R18, R17	
    BITT W, R17, 6
    BRZ FSW_DONE
@LINE: 487
FSW_ERROR    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $F0
    MOVE W, R16, R25
@LINE: 494
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 498
FSW_WAIT_RESET    BITT W, R25, 0		
    BRZ FSW_WAIT_RESET	
@LINE: 501
    LIM H, R16, `LH $3FF9		
    LIM L, R16, `LL $3FF9
    MOVE W, R16, R20
    MOVE W, R24, R17
@LINE: 506
    LIM H, R16, `LH $3FF8
    LIM L, R16, `LL $3FF8
    MOVE W, R16, R20
    MOVE W, R24, R18
@LINE: 511
    LIM H, R16, `LH $FFFB
    LIM L, R16, `LL $FFFB
    MOVE W, R16, R22
    MOVE W, R17, R25
@LINE: 516
    LIM H, R16, `LH $FFFD
    LIM L, R16, `LL $FFFD
    MOVE W, R16, R22
    RET
    MOVE W, R18, R25
@LINE: 529
FSW_DONE    RET
    NOP
@LINE: 535
FLASH_ERASE_BLOCK    LIM H, R16, `LH FLASH_SET_BYTE_ADDR_READ
    LIM L, R16, `LL FLASH_SET_BYTE_ADDR_READ
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 541
    LIM H, R16, `LH $FFD8
    LIM L, R16, `LL $FFD8
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $00
    MOVE W, R16, R25
@LINE: 548
    LIM H, R16, `LH $FFD9
    LIM L, R16, `LL $FFD9
    MOVE W, R16, R22
    LIM H, R16, $0A
    LIM L, R16, $AA
    MOVE W, R16, R25
@LINE: 555
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $AA
    MOVE W, R16, R25	
@LINE: 562
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 566
FEB_WAIT_FIRST    BITT W, R25, 0		
    BRZ FEB_WAIT_FIRST	
@LINE: 569
    LIM H, R16, `LH $FFD8
    LIM L, R16, `LL $FFD8
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $00
    MOVE W, R16, R25
@LINE: 576
    LIM H, R16, `LH $FFD9
    LIM L, R16, `LL $FFD9
    MOVE W, R16, R22
    LIM H, R16, $05
    LIM L, R16, $55
    MOVE W, R16, R25
@LINE: 583
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $55
    MOVE W, R16, R25	
@LINE: 590
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 594
FEB_WAIT_SECOND    BITT W, R25, 0		
    BRZ FEB_WAIT_SECOND	
@LINE: 597
    LIM H, R16, `LH $FFD8
    LIM L, R16, `LL $FFD8
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $00
    MOVE W, R16, R25
@LINE: 604
    LIM H, R16, `LH $FFD9
    LIM L, R16, `LL $FFD9
    MOVE W, R16, R22
    LIM H, R16, $0A
    LIM L, R16, $AA
    MOVE W, R16, R25
@LINE: 611
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $80
    MOVE W, R16, R25	
@LINE: 618
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 622
FEB_WAIT_THIRD    BITT W, R25, 0		
    BRZ FEB_WAIT_THIRD	
@LINE: 625
    LIM H, R16, `LH $FFD8
    LIM L, R16, `LL $FFD8
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $00
    MOVE W, R16, R25
@LINE: 632
    LIM H, R16, `LH $FFD9
    LIM L, R16, `LL $FFD9
    MOVE W, R16, R22
    LIM H, R16, $0A
    LIM L, R16, $AA
    MOVE W, R16, R25
@LINE: 639
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $AA
    MOVE W, R16, R25	
@LINE: 646
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 650
FEB_WAIT_FOURTH    BITT W, R25, 0		
    BRZ FEB_WAIT_FOURTH	
@LINE: 653
    LIM H, R16, `LH $FFD8
    LIM L, R16, `LL $FFD8
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $00
    MOVE W, R16, R25
@LINE: 660
    LIM H, R16, `LH $FFD9
    LIM L, R16, `LL $FFD9
    MOVE W, R16, R22
    LIM H, R16, $05
    LIM L, R16, $55
    MOVE W, R16, R25
@LINE: 667
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $55
    MOVE W, R16, R25	
@LINE: 674
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 678
FEB_WAIT_FIFTH    BITT W, R25, 0		
    BRZ FEB_WAIT_FIFTH	
@LINE: 681
    LIM H, R16, `LH FLASH_SET_BYTE_ADDR_WRITE
    LIM L, R16, `LL FLASH_SET_BYTE_ADDR_WRITE
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 687
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM W, R16, $30
    MOVE L, R16, R25	
@LINE: 693
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 697
FEB_WAIT_DATA    BITT W, R25, 0		
    BRZ FEB_WAIT_DATA	
@LINE: 700
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
    MOVE W, R31, R25	
@LINE: 705
FEB_WAIT_PREV    BITT W, R25, 1		
    BRZ FEB_WAIT_PREV	
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    MOVE W, R25, R18	
@LINE: 713
FEB_WAIT_BUSY    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
    MOVE W, R31, R25	
@LINE: 718
FEB_WAIT_STATUS    BITT W, R25, 1		
    BRZ FEB_WAIT_STATUS	
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    MOVE W, R25, R16	
    XOR W, R18, R17	
    BITT W, R17, 6
    BRNZ FEB_WAIT_BUSY
    MOVE W, R16, R18	
@LINE: 729
    RET
    NOP
@LINE: 735
FLASH_LOCK_BLOCK    LIM H, R16, `LH FLASH_SET_BYTE_ADDR_READ
    LIM L, R16, `LL FLASH_SET_BYTE_ADDR_READ
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 741
    LIM H, R16, `LH $FFD8
    LIM L, R16, `LL $FFD8
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $00
    MOVE W, R16, R25
@LINE: 748
    LIM H, R16, `LH $FFD9
    LIM L, R16, `LL $FFD9
    MOVE W, R16, R22
    LIM H, R16, $0A
    LIM L, R16, $AA
    MOVE W, R16, R25
@LINE: 755
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $AA
    MOVE W, R16, R25	
@LINE: 762
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 766
FLB_WAIT_ENTRY_FIRST    BITT W, R25, 0		
    BRZ FLB_WAIT_ENTRY_FIRST	
@LINE: 769
    LIM H, R16, `LH $FFD8
    LIM L, R16, `LL $FFD8
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $00
    MOVE W, R16, R25
@LINE: 776
    LIM H, R16, `LH $FFD9
    LIM L, R16, `LL $FFD9
    MOVE W, R16, R22
    LIM H, R16, $05
    LIM L, R16, $55
    MOVE W, R16, R25
@LINE: 783
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $55
    MOVE W, R16, R25	
@LINE: 790
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 794
FLB_WAIT_ENTRY_SECOND    BITT W, R25, 0		
    BRZ FLB_WAIT_ENTRY_SECOND	
@LINE: 797
    LIM H, R16, `LH $FFD8
    LIM L, R16, `LL $FFD8
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $00
    MOVE W, R16, R25
@LINE: 804
    LIM H, R16, `LH $FFD9
    LIM L, R16, `LL $FFD9
    MOVE W, R16, R22
    LIM H, R16, $0A
    LIM L, R16, $AA
    MOVE W, R16, R25
@LINE: 811
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $C0
    MOVE W, R16, R25	
@LINE: 818
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 822
FLB_WAIT_ENTRY_THIRD    BITT W, R25, 0		
    BRZ FLB_WAIT_ENTRY_THIRD	
@LINE: 825
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $A0
    MOVE W, R16, R25	
@LINE: 832
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 836
FLB_WAIT_PROGRAM_FIRST    BITT W, R25, 0		
    BRZ FLB_WAIT_PROGRAM_FIRST	
@LINE: 839
    LIM H, R16, `LH FLASH_SET_BYTE_ADDR_WRITE
    LIM L, R16, `LL FLASH_SET_BYTE_ADDR_WRITE
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 845
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM W, R16, $00
    MOVE L, R16, R25	
@LINE: 851
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 855
FLB_WAIT_PROGRAM_SECOND    BITT W, R25, 0		
    BRZ FLB_WAIT_PROGRAM_SECOND	
@LINE: 858
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
    MOVE W, R31, R25	
@LINE: 863
FLB_WAIT_PREV    BITT W, R25, 1		
    BRZ FLB_WAIT_PREV	
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    MOVE W, R25, R18	
@LINE: 871
FLB_WAIT_BUSY    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
    MOVE W, R31, R25	
@LINE: 876
FLB_WAIT_STATUS    BITT W, R25, 1		
    BRZ FLB_WAIT_STATUS	
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    MOVE W, R25, R16	
    XOR W, R18, R17	
    BITT W, R17, 6
    BRNZ FLB_WAIT_BUSY
    MOVE W, R16, R18	
@LINE: 888
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $90
    MOVE W, R16, R25
@LINE: 895
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 899
FLB_WAIT_EXIT_FIRST    BITT W, R25, 0		
    BRZ FLB_WAIT_EXIT_FIRST	
@LINE: 902
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $00
    MOVE W, R16, R25
@LINE: 909
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 913
FLB_WAIT_EXIT_SECOND    BITT W, R25, 0		
    BRZ FLB_WAIT_EXIT_SECOND	
    NOP
@LINE: 917
    RET
    NOP
@LINE: 924
FLASH_GET_N_WORDS    LIM H, R16, `LH $FFDE
    LIM L, R16, `LL $FFDE
    MOVE W, R16, R22
    LIM W, R16, $01
    MOVE W, R16, R25	
@LINE: 931
    LIM H, R17, `LH $3FFE
    LIM L, R17, `LL $3FFE
    MOVE W, R17, R20
    MOVE W, R24, R3
@LINE: 937
    LIM H, R16, `LH $1FF8
    LIM L, R16, `LL $1FF8
    MOVE W, R16, R5
@LINE: 942
    TEST W, R3
    BRNZ FGNB_LOOP
    NOP
    RET
@LINE: 949
FGNB_LOOP    LIM H, R16, `LH FLASH_GET_WORD
    LIM L, R16, `LL FLASH_GET_WORD
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 956
    MOVE W, R5, R20
    MOVE W, R11, R24
@LINE: 960
    LIM W, R16, $01
    ADD W, R5, R5
@LINE: 964
    LIM W, R16, $01
    SUB W, R3, R3
@LINE: 968
    BRNZ FGNB_LOOP
    NOP
@LINE: 971
    RET
    NOP
@LINE: 978
FLASH_SEND_N_WORDS    LIM H, R17, `LH $3FFE
    LIM L, R17, `LL $3FFE
    MOVE W, R17, R20
    MOVE W, R24, R3
@LINE: 984
    LIM H, R16, `LH $1FF8
    LIM L, R16, `LL $1FF8
    MOVE W, R16, R5
@LINE: 989
    TEST W, R3
    BRNZ FSNB_LOOP
    NOP
    RET
@LINE: 996
FSNB_LOOP    MOVE W, R5, R20
    MOVE W, R24, R6
@LINE: 1000
    LIM H, R16, `LH FLASH_SEND_BYTE
    LIM L, R16, `LL FLASH_SEND_BYTE
    MOVE W, R16, R26
    MOVE W, R6, R0
    CALL
    NOP
@LINE: 1008
    LIM H, R16, `LH $3FF9		
    LIM L, R16, `LL $3FF9
    MOVE W, R16, R20
    MOVE W, R24, R17
@LINE: 1013
    LIM H, R16, `LH $3FF8
    LIM L, R16, `LL $3FF8
    MOVE W, R16, R20
    MOVE W, R24, R18
@LINE: 1018
    LIM W, R16, $01
    ADD W, R18, R18
    LIM W, R16, $00
    ADDC W, R17, R17
@LINE: 1023
    LIM H, R16, `LH $3FF9		
    LIM L, R16, `LL $3FF9
    MOVE W, R16, R20
    MOVE W, R17, R24
@LINE: 1028
    LIM H, R16, `LH $3FF8
    LIM L, R16, `LL $3FF8
    MOVE W, R16, R20
    MOVE W, R18, R24
@LINE: 1034
    LIM H, R16, `LH FLASH_SEND_BYTE
    LIM L, R16, `LL FLASH_SEND_BYTE
    MOVE W, R16, R26
    MOVE S, R6, R0
    CALL
    NOP
@LINE: 1042
    LIM H, R16, `LH $3FF9		
    LIM L, R16, `LL $3FF9
    MOVE W, R16, R20
    MOVE W, R24, R17
@LINE: 1047
    LIM H, R16, `LH $3FF8
    LIM L, R16, `LL $3FF8
    MOVE W, R16, R20
    MOVE W, R24, R18
@LINE: 1052
    LIM W, R16, $01
    ADD W, R18, R18
    LIM W, R16, $00
    ADDC W, R17, R17
@LINE: 1066
    LIM H, R16, `LH $3FF9		
    LIM L, R16, `LL $3FF9
    MOVE W, R16, R20
    MOVE W, R17, R24
@LINE: 1071
    LIM H, R16, `LH $3FF8
    LIM L, R16, `LL $3FF8
    MOVE W, R16, R20
    MOVE W, R18, R24
@LINE: 1077
    LIM W, R16, $01
    ADD W, R5, R5
@LINE: 1081
    LIM W, R16, $01
    SUB W, R3, R3
@LINE: 1085
    BRNZ FSNB_LOOP
    NOP
@LINE: 1088
    RET
    NOP
@LINE: 1094
FLASH_UNLOCK_ALL_BLOCKS    LIM H, R16, `LH $FFD8
    LIM L, R16, `LL $FFD8
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $00
    MOVE W, R16, R25
@LINE: 1101
    LIM H, R16, `LH $FFD9
    LIM L, R16, `LL $FFD9
    MOVE W, R16, R22
    LIM H, R16, $0A
    LIM L, R16, $AA
    MOVE W, R16, R25
@LINE: 1108
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $AA
    MOVE W, R16, R25	
@LINE: 1115
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 1119
FUB_WAIT_ENTRY_FIRST    BITT W, R25, 0		
    BRZ FUB_WAIT_ENTRY_FIRST	
@LINE: 1122
    LIM H, R16, `LH $FFD8
    LIM L, R16, `LL $FFD8
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $00
    MOVE W, R16, R25
@LINE: 1129
    LIM H, R16, `LH $FFD9
    LIM L, R16, `LL $FFD9
    MOVE W, R16, R22
    LIM H, R16, $05
    LIM L, R16, $55
    MOVE W, R16, R25
@LINE: 1136
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $55
    MOVE W, R16, R25	
@LINE: 1143
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 1147
FUB_WAIT_ENTRY_SECOND    BITT W, R25, 0		
    BRZ FUB_WAIT_ENTRY_SECOND	
@LINE: 1150
    LIM H, R16, `LH $FFD8
    LIM L, R16, `LL $FFD8
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $00
    MOVE W, R16, R25
@LINE: 1157
    LIM H, R16, `LH $FFD9
    LIM L, R16, `LL $FFD9
    MOVE W, R16, R22
    LIM H, R16, $0A
    LIM L, R16, $AA
    MOVE W, R16, R25
@LINE: 1164
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $C0
    MOVE W, R16, R25	
@LINE: 1171
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 1175
FUB_WAIT_ENTRY_THIRD    BITT W, R25, 0		
    BRZ FUB_WAIT_ENTRY_THIRD	
@LINE: 1178
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $80
    MOVE W, R16, R25	
@LINE: 1185
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 1189
FUB_WAIT_ERASE_FIRST    BITT W, R25, 0		
    BRZ FUB_WAIT_ERASE_FIRST	
@LINE: 1192
    LIM H, R16, `LH $FFD8
    LIM L, R16, `LL $FFD8
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $00
    MOVE W, R16, R25
@LINE: 1199
    LIM H, R16, `LH $FFD9
    LIM L, R16, `LL $FFD9
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $00
    MOVE W, R16, R25
@LINE: 1206
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM W, R16, $30
    MOVE L, R16, R25	
@LINE: 1212
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 1216
FUB_WAIT_ERASE_SECOND    BITT W, R25, 0		
    BRZ FUB_WAIT_ERASE_SECOND	
@LINE: 1219
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
    MOVE W, R31, R25	
@LINE: 1224
FUB_WAIT_PREV    BITT W, R25, 1		
    BRZ FUB_WAIT_PREV	
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    MOVE W, R25, R18	
@LINE: 1232
FUB_WAIT_BUSY    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
    MOVE W, R31, R25	
@LINE: 1237
FUB_WAIT_STATUS    BITT W, R25, 1		
    BRZ FUB_WAIT_STATUS	
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    MOVE W, R25, R16	
    XOR W, R18, R17	
    BITT W, R17, 6
    BRNZ FUB_WAIT_BUSY
    MOVE W, R16, R18	
@LINE: 1249
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $90
    MOVE W, R16, R25
@LINE: 1256
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 1260
FUB_WAIT_EXIT_FIRST    BITT W, R25, 0		
    BRZ FUB_WAIT_EXIT_FIRST	
@LINE: 1263
    LIM H, R16, `LH $FFDB
    LIM L, R16, `LL $FFDB
    MOVE W, R16, R22
    LIM H, R16, $00
    LIM L, R16, $00
    MOVE W, R16, R25
@LINE: 1270
    LIM H, R16, `LH $FFDF
    LIM L, R16, `LL $FFDF
    MOVE W, R16, R22
@LINE: 1274
FUB_WAIT_EXIT_SECOND    BITT W, R25, 0		
    BRZ FUB_WAIT_EXIT_SECOND	
    NOP
@LINE: 1278
    RET
    NOP
@LINE: 1285
FLASH_LOCK_ALL_BLOCKS    LIM H, R17, `LH $3FF9
    LIM L, R17, `LL $3FF9
    MOVE W, R17, R20
    MOVE W, R31, R24
@LINE: 1290
    LIM H, R17, `LH $3FF8
    LIM L, R17, `LL $3FF8
    MOVE W, R17, R20
    MOVE W, R31, R24
@LINE: 1296
FLAB_LOOP    LIM H, R16, `LH FLASH_LOCK_BLOCK
    LIM L, R16, `LL FLASH_LOCK_BLOCK
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 1303
    LIM H, R17, `LH $3FF9
    LIM L, R17, `LL $3FF9
    MOVE W, R17, R20
    MOVE W, R24, R3
@LINE: 1308
    LIM H, R17, `LH $3FF8
    LIM L, R17, `LL $3FF8
    MOVE W, R17, R20
    MOVE W, R24, R4
@LINE: 1313
    LIM H, R16, `LH $FFFC
    LIM L, R16, `LL $FFFC
    MOVE W, R16, R22
    MOVE W, R3, R25
@LINE: 1320
    BRNZ FLAB_BIG
@LINE: 1323
    LIM H, R16, $20
    LIM L, R16, $00
    ADD W, R4, R4
    MOVE W, R31, R16
    ADDC W, R3, R3
    BRA FLAB_UPDATE
@LINE: 1331
FLAB_BIG    LIM W, R16, $01
    ADD W, R3, R3		
@LINE: 1335
FLAB_UPDATE    LIM H, R17, `LH $3FF9
    LIM L, R17, `LL $3FF9
    MOVE W, R17, R20
    MOVE W, R3, R24
@LINE: 1340
    LIM H, R17, `LH $3FF8
    LIM L, R17, `LL $3FF8
    MOVE W, R17, R20
    MOVE W, R4, R24
@LINE: 1345
    BITT W, R3, 6
    BRZ FLAB_LOOP
    NOP
@LINE: 1349
    RET
    NOP
@LINE: 1356
FLASH_ERASE_ALL_BLOCKS    LIM H, R17, `LH $3FF9
    LIM L, R17, `LL $3FF9
    MOVE W, R17, R20
    MOVE W, R31, R24
@LINE: 1361
    LIM H, R17, `LH $3FF8
    LIM L, R17, `LL $3FF8
    MOVE W, R17, R20
    MOVE W, R31, R24
@LINE: 1367
FEAB_LOOP    LIM H, R16, `LH FLASH_ERASE_BLOCK
    LIM L, R16, `LL FLASH_ERASE_BLOCK
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 1374
    LIM H, R17, `LH $3FF9
    LIM L, R17, `LL $3FF9
    MOVE W, R17, R20
    MOVE W, R24, R3
@LINE: 1379
    LIM H, R17, `LH $3FF8
    LIM L, R17, `LL $3FF8
    MOVE W, R17, R20
    MOVE W, R24, R4
@LINE: 1384
    LIM H, R16, `LH $FFFC
    LIM L, R16, `LL $FFFC
    MOVE W, R16, R22
    MOVE W, R3, R25
@LINE: 1391
    BRNZ FEAB_BIG
@LINE: 1394
    LIM H, R16, $20
    LIM L, R16, $00
    ADD W, R4, R4
    MOVE W, R31, R16
    ADDC W, R3, R3
    BRA FEAB_UPDATE
@LINE: 1402
FEAB_BIG    LIM W, R16, $01
    ADD W, R3, R3		
@LINE: 1406
FEAB_UPDATE    LIM H, R17, `LH $3FF9
    LIM L, R17, `LL $3FF9
    MOVE W, R17, R20
    MOVE W, R3, R24
@LINE: 1411
    LIM H, R17, `LH $3FF8
    LIM L, R17, `LL $3FF8
    MOVE W, R17, R20
    MOVE W, R4, R24
@LINE: 1416
    BITT W, R3, 6
    BRZ FEAB_LOOP
    NOP
@LINE: 1420
    RET
    NOP
@POP_FILE:    DE2_FLASH.INC
@PUSH_FILE:    DE2_SRAM.INC
@LINE: 33
SRAM_NULL    LIM H, R16, $E0
    LIM L, R16, $00
    RET
    MOVE W, R16, R11
@LINE: 42
SRAM_INIT    RET
    NOP
@LINE: 48
SRAM_SET_ADDRESS_WRITE    LIM H, R17, `LH $1FF5		
    LIM L, R17, `LL $1FF5
    MOVE W, R17, R20
    MOVE W, R24, R4
@LINE: 53
    LIM H, R17, `LH $1FF4
    LIM L, R17, `LL $1FF4
    MOVE W, R17, R20
    MOVE W, R24, R3
@LINE: 58
    LIM H, R17, `LH $FFE0
    LIM L, R17, `LL $FFE0
    MOVE W, R17, R22
    MOVE W, R4, R25
@LINE: 63
    LIM H, R17, `LH $FFE1
    LIM L, R17, `LL $FFE1
    MOVE W, R17, R22
    MOVE W, R3, R25
@LINE: 68
    RET
    NOP
@LINE: 75
SRAM_SET_ADDRESS_READ    LIM H, R16, `LH $FFE6
    LIM L, R16, `LL $FFE6
    MOVE W, R16, R22
    LIM W, R16, $00
    MOVE W, R16, R25	
@LINE: 81
    LIM H, R17, `LH $1FF5		
    LIM L, R17, `LL $1FF5
    MOVE W, R17, R20
    MOVE W, R24, R4
@LINE: 86
    LIM H, R17, `LH $1FF4
    LIM L, R17, `LL $1FF4
    MOVE W, R17, R20
    MOVE W, R24, R3
@LINE: 91
    LIM H, R17, `LH $FFE4
    LIM L, R17, `LL $FFE4
    MOVE W, R17, R22
    MOVE W, R4, R25
@LINE: 96
    LIM H, R17, `LH $FFE5
    LIM L, R17, `LL $FFE5
    MOVE W, R17, R22
    MOVE W, R3, R25	
@LINE: 101
    LIM H, R16, `LH $FFE7
    LIM L, R16, `LL $FFE7
    MOVE W, R16, R22
@LINE: 105
SSAR_WAIT    BITT W, R25, 1	
    BRZ SSAR_WAIT	
    NOP
@LINE: 109
    RET
    NOP
@LINE: 115
SRAM_GET_WORD    LIM H, R16, `LH $FFE7
    LIM L, R16, `LL $FFE7
    MOVE W, R16, R22
    MOVE W, R31, R25	
@LINE: 120
SGW_WAIT    BITT W, R25, 1	
    BRZ SGW_WAIT	
    LIM L, R16, `LL $FFE3
    MOVE W, R16, R22
    RET
    MOVE W, R25, R11
@LINE: 130
SRAM_SEND_WORD    LIM H, R16, `LH $FFE3
    LIM L, R16, `LL $FFE3
    MOVE W, R16, R22
    MOVE W, R0, R25		
@LINE: 135
    LIM H, R16, `LH $FFE7
    LIM L, R16, `LL $FFE7
    MOVE W, R16, R22
@LINE: 139
SWW_WAIT_DATA    BITT W, R25, 0		
    BRZ SWW_WAIT_DATA	
    NOP
@LINE: 143
    RET
    NOP
@LINE: 150
SRAM_GET_N_WORDS    LIM H, R16, `LH $FFE6
    LIM L, R16, `LL $FFE6
    MOVE W, R16, R22
    LIM W, R16, $01
    MOVE W, R16, R25	
@LINE: 157
    LIM H, R17, `LH $3FFD
    LIM L, R17, `LL $3FFD
    MOVE W, R17, R20
    MOVE W, R24, R3
@LINE: 163
    LIM H, R16, `LH $1FF8
    LIM L, R16, `LL $1FF8
    MOVE W, R16, R5
@LINE: 168
    TEST W, R3
    BRNZ SRGNB_LOOP
    NOP
    RET
@LINE: 175
SRGNB_LOOP    LIM H, R16, `LH SRAM_GET_WORD
    LIM L, R16, `LL SRAM_GET_WORD
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 182
    MOVE W, R5, R20
    MOVE W, R11, R24
@LINE: 186
    LIM W, R16, $01
    ADD W, R5, R5
@LINE: 190
    LIM W, R16, $01
    SUB W, R3, R3
@LINE: 194
    BRNZ SRGNB_LOOP
    NOP
@LINE: 197
    RET
    NOP
@LINE: 204
SRAM_SEND_N_WORDS    LIM H, R16, `LH $FFE2
    LIM L, R16, `LL $FFE2
    MOVE W, R16, R22
    LIM W, R16, $01
    MOVE W, R16, R25	
@LINE: 211
    LIM H, R17, `LH $3FFD
    LIM L, R17, `LL $3FFD
    MOVE W, R17, R20
    MOVE W, R24, R3
@LINE: 217
    LIM H, R16, `LH $1FF8
    LIM L, R16, `LL $1FF8
    MOVE W, R16, R5
@LINE: 222
    TEST W, R3
    BRNZ SRSNB_LOOP
    NOP
    RET
@LINE: 229
SRSNB_LOOP    MOVE W, R5, R20
    MOVE W, R24, R6
@LINE: 233
    LIM H, R16, `LH SRAM_SEND_WORD
    LIM L, R16, `LL SRAM_SEND_WORD
    MOVE W, R16, R26
@LINE: 237
    MOVE W, R6, R0
    CALL
    NOP
@LINE: 242
    LIM W, R16, $01
    ADD W, R5, R5
@LINE: 246
    LIM W, R16, $01
    SUB W, R3, R3
@LINE: 250
    BRNZ SRSNB_LOOP
    NOP
@LINE: 253
    RET
    NOP
@POP_FILE:    DE2_SRAM.INC
@PUSH_FILE:    DE2_SDRAM.INC
@LINE: 47
SDRAM_NULL    LIM H, R16, $E0
    LIM L, R16, $00
    RET
    MOVE W, R16, R11
@LINE: 55
SDRAM_INIT    LIM H, R16, `LH $FFD2
    LIM L, R16, `LL $FFD2
    MOVE W, R16, R22
    MOVE W, R31, R25	
@LINE: 60
    LIM H, R16, `LH $FFD6
    LIM L, R16, `LL $FFD6
    MOVE W, R16, R22
    MOVE W, R31, R25	
@LINE: 66
    LIM H, R17, `LH $FFD0
    LIM L, R17, `LL $FFD0
    MOVE W, R17, R22
    MOVE W, R31, R25
@LINE: 71
    LIM H, R17, `LH $FFD1
    LIM L, R17, `LL $FFD1
    MOVE W, R17, R22
    RET
    MOVE W, R31, R25
@LINE: 81
SDRAM_SET_ADDRESS_WRITE    LIM H, R16, `LH $FFD2
    LIM L, R16, `LL $FFD2
    MOVE W, R16, R22
    LIM W, R16, $04
    MOVE W, R16, R25	
@LINE: 87
    LIM H, R16, `LH $1FF3		
    LIM L, R16, `LL $1FF3
    MOVE W, R16, R20
    MOVE W, R24, R17
@LINE: 92
    LIM H, R16, `LH $1FF2
    LIM L, R16, `LL $1FF2
    MOVE W, R16, R20
    MOVE W, R24, R18
@LINE: 97
    LIM H, R16, `LH $FFD0
    LIM L, R16, `LL $FFD0
    MOVE W, R16, R22
    MOVE W, R17, R25
@LINE: 102
    LIM H, R16, `LH $FFD1
    LIM L, R16, `LL $FFD1
    MOVE W, R16, R22
    RET
    MOVE W, R18, R25
@LINE: 112
SDRAM_SET_ADDRESS_READ    LIM H, R16, `LH $FFD6
    LIM L, R16, `LL $FFD6
    MOVE W, R16, R22
    LIM W, R16, $04
    MOVE W, R16, R25	
@LINE: 118
    LIM H, R16, `LH $1FF3		
    LIM L, R16, `LL $1FF3
    MOVE W, R16, R20
    MOVE W, R24, R17
@LINE: 123
    LIM H, R16, `LH $1FF2
    LIM L, R16, `LL $1FF2
    MOVE W, R16, R20
    MOVE W, R24, R18
@LINE: 128
    LIM H, R16, `LH $FFD4
    LIM L, R16, `LL $FFD4
    MOVE W, R16, R22
    MOVE W, R17, R25
@LINE: 133
    LIM H, R16, `LH $FFD5
    LIM L, R16, `LL $FFD5
    MOVE W, R16, R22
    RET
    MOVE W, R18, R25		
@LINE: 142
SDRAM_GET_WORD    LIM H, R16, `LH $FFD7
    LIM L, R16, `LL $FFD7
    MOVE W, R16, R22
@LINE: 146
SDGW_WAIT    BITT W, R25, 1		
    BRZ SDGW_WAIT		
@LINE: 149
    LIM H, R16, `LH $FFD3
    LIM L, R16, `LL $FFD3
    MOVE W, R16, R22
    MOVE W, R25, R11
@LINE: 154
    LIM H, R16, `LH $FFD7
    LIM L, R16, `LL $FFD7
    MOVE W, R16, R22
    RET
    MOVE W, R31, R25	
@LINE: 163
SDRAM_SEND_WORD    LIM H, R16, `LH $FFD7
    LIM L, R16, `LL $FFD7
    MOVE W, R16, R22
@LINE: 167
SDSW_WAIT    BITT W, R25, 0		
    BRZ SDSW_WAIT		
@LINE: 170
    LIM H, R16, `LH $FFD3
    LIM L, R16, `LL $FFD3
    MOVE W, R16, R22
    RET
    MOVE W, R0, R25
@LINE: 180
SDRAM_GET_N_WORDS    LIM H, R16, `LH $FFD6
    LIM L, R16, `LL $FFD6
    MOVE W, R16, R22
    LIM W, R16, $04
    MOVE W, R16, R25	
@LINE: 187
    LIM H, R17, `LH $3FFC
    LIM L, R17, `LL $3FFC
    MOVE W, R17, R20
    MOVE W, R24, R3
@LINE: 193
    LIM H, R16, `LH $1FF8
    LIM L, R16, `LL $1FF8
    MOVE W, R16, R5
@LINE: 198
    TEST W, R3
    BRNZ SDGNW_LOOP
    NOP
    RET
@LINE: 205
SDGNW_LOOP    LIM H, R16, `LH SDRAM_GET_WORD
    LIM L, R16, `LL SDRAM_GET_WORD
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 212
    MOVE W, R5, R20
    MOVE W, R11, R24
@LINE: 216
    LIM W, R16, $01
    ADD W, R5, R5
@LINE: 220
    LIM W, R16, $01
    SUB W, R3, R3
@LINE: 224
    BRNZ SDGNW_LOOP
    NOP
@LINE: 227
    RET
    NOP
@LINE: 234
SDRAM_SEND_N_WORDS    LIM H, R16, `LH $FFD2
    LIM L, R16, `LL $FFD2
    MOVE W, R16, R22
    LIM W, R16, $04
    MOVE W, R16, R25	
@LINE: 241
    LIM H, R17, `LH $3FFC
    LIM L, R17, `LL $3FFC
    MOVE W, R17, R20
    MOVE W, R24, R3
@LINE: 247
    LIM H, R16, `LH $1FF8
    LIM L, R16, `LL $1FF8
    MOVE W, R16, R5
@LINE: 252
    TEST W, R3
    BRNZ SDSNW_LOOP
    NOP
    RET
@LINE: 259
SDSNW_LOOP    MOVE W, R5, R20
    MOVE W, R24, R0
@LINE: 263
    LIM H, R16, `LH SDRAM_SEND_WORD
    LIM L, R16, `LL SDRAM_SEND_WORD
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 270
    LIM W, R16, $01
    ADD W, R5, R5
@LINE: 274
    LIM W, R16, $01
    SUB W, R3, R3
@LINE: 278
    BRNZ SDSNW_LOOP
    NOP
@LINE: 281
    RET
    NOP
@POP_FILE:    DE2_SDRAM.INC
@LINE: 169
MAIN    LIM H, R16, `LH SERIAL_GET_BYTE
    LIM L, R16, `LL SERIAL_GET_BYTE
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 176
    LIM L, R16, $DE
    XOR L, R11, R11
    BRNZ MAIN
    NOP
@LINE: 182
COM_PING    CALL	
    NOP
@LINE: 186
    LIM L, R16, $AD
    XOR L, R11, R11
    BRNZ MAIN
    NOP
@LINE: 191
    CALL	
    NOP
@LINE: 195
    LIM L, R16, $BE
    XOR L, R11, R11
    BRNZ MAIN
    NOP
@LINE: 200
    CALL	
    NOP
@LINE: 204
    LIM L, R16, $EF
    XOR L, R11, R11
    BRNZ MAIN
    NOP
@LINE: 210
    LIM H, R16, `LH SERIAL_SEND_BYTE
    LIM L, R16, `LL SERIAL_SEND_BYTE
    MOVE W, R16, R26
@LINE: 214
    LIM L, R16, $55
    MOVE L, R16, R0
    CALL	
    NOP
@LINE: 219
    LIM L, R16, $AA
    MOVE L, R16, R0
    CALL	
    NOP
@LINE: 224
    LIM L, R16, $F0
    MOVE L, R16, R0
    CALL	
    NOP
@LINE: 229
    LIM L, R16, $0F
    MOVE L, R16, R0
    CALL	
    NOP
@LINE: 235
    LIM H, R16, `LH $1FE4
    LIM L, R16, `LL $1FE4
    MOVE W, R16, R20
    MOVE W, R24, R20
@LINE: 240
    LIM W, R16, $01
    MOVE W, R24, R3
    ADD W, R20, R20
    MOVE W, R24, R4	
@LINE: 245
    MOVE S, R4, R0
    CALL	
    NOP
@LINE: 249
    MOVE L, R4, R0
    CALL	
    NOP
@LINE: 253
    MOVE S, R3, R0
    CALL	
    NOP
@LINE: 257
    MOVE L, R3, R0
    CALL	
    NOP
@LINE: 261
    LIM H, R17, `LH $FFFC
    LIM L, R17, `LL $FFFC
    MOVE W, R17, R22
    LIM H, R16, $BE
    LIM L, R16, $EF
    MOVE W, R16, R25
@LINE: 270
M_COMMAND    LIM H, R16, `LH SERIAL_GET_BYTE
    LIM L, R16, `LL SERIAL_GET_BYTE
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 276
    LIM L, R16, $DE
    XOR L, R11, R31
    BRZ COM_PING
    NOP
@LINE: 282
    LIM L, R16, $01
    XOR L, R11, R31
    BRNZ M_NOT_READ
    NOP
@LINE: 287
    LIM H, R16, `LH COM_READ
    LIM L, R16, `LL COM_READ
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 293
    BRA M_COMMAND
    NOP
@LINE: 297
M_NOT_READ    LIM L, R16, $02
    XOR L, R11, R31
    BRNZ M_NOT_WRITE
    NOP
@LINE: 302
    LIM H, R16, `LH COM_WRITE
    LIM L, R16, `LL COM_WRITE
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 308
    BRA M_COMMAND
    NOP
@LINE: 312
M_NOT_WRITE    LIM L, R16, $04
    XOR L, R11, R31
    BRNZ M_NOT_UNLOCK_ALL
    NOP
@LINE: 317
    LIM H, R16, `LH COM_UNLOCK_ALL
    LIM L, R16, `LL COM_UNLOCK_ALL
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 323
    BRA M_COMMAND
    NOP
@LINE: 327
M_NOT_UNLOCK_ALL    LIM L, R16, $05
    XOR L, R11, R31
    BRNZ M_NOT_LOCK_ALL
    NOP
@LINE: 332
    LIM H, R16, `LH COM_LOCK_ALL
    LIM L, R16, `LL COM_LOCK_ALL
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 338
    BRA M_COMMAND
    NOP
@LINE: 342
M_NOT_LOCK_ALL    LIM L, R16, $06
    XOR L, R11, R31
    BRNZ M_NOT_GET_STATUS
    NOP
@LINE: 347
    LIM H, R16, `LH COM_GET_STATUS
    LIM L, R16, `LL COM_GET_STATUS
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 353
    BRA M_COMMAND
    NOP
@LINE: 357
M_NOT_GET_STATUS    LIM L, R16, $07
    XOR L, R11, R31
    BRNZ M_NOT_ERASE_ALL
    NOP
@LINE: 362
    LIM H, R16, `LH COM_ERASE_ALL
    LIM L, R16, `LL COM_ERASE_ALL
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 368
    BRA M_COMMAND
    NOP
@LINE: 372
M_NOT_ERASE_ALL    LIM L, R16, $08
    XOR L, R11, R31
    BRNZ M_NOT_LOCK_BLOCK
    NOP
@LINE: 377
    LIM H, R16, `LH COM_LOCK_BLOCK
    LIM L, R16, `LL COM_LOCK_BLOCK
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 383
    BRA M_COMMAND
    NOP
@LINE: 387
M_NOT_LOCK_BLOCK    LIM L, R16, $09
    XOR L, R11, R31
    BRNZ M_NOT_ERASE_BLOCK
    NOP
@LINE: 392
    LIM H, R16, `LH COM_ERASE_BLOCK
    LIM L, R16, `LL COM_ERASE_BLOCK
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 398
    BRA M_COMMAND
    NOP
@LINE: 402
M_NOT_ERASE_BLOCK    LIM L, R16, $0A
    XOR L, R11, R31
    BRNZ M_NOT_SET_ADDRESS
    NOP
@LINE: 407
    LIM H, R16, `LH COM_SET_ADDRESS
    LIM L, R16, `LL COM_SET_ADDRESS
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 413
    BRA M_COMMAND
    NOP
@LINE: 417
M_NOT_SET_ADDRESS    LIM L, R16, $0B
    XOR L, R11, R31
    BRNZ M_NOT_GET_PLATFORM_DESCRIPTOR
    NOP
@LINE: 422
    LIM H, R16, `LH COM_GET_PLATFORM_DESCRIPTOR
    LIM L, R16, `LL COM_GET_PLATFORM_DESCRIPTOR
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 428
    BRA M_COMMAND
    NOP
@LINE: 432
M_NOT_GET_PLATFORM_DESCRIPTOR    LIM L, R16, $0C
    XOR L, R11, R31
    BRNZ M_NOT_GET_TARGET_DESCRIPTOR
    NOP
@LINE: 437
    LIM H, R16, `LH COM_GET_TARGET_DESCRIPTOR
    LIM L, R16, `LL COM_GET_TARGET_DESCRIPTOR
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 443
    BRA M_COMMAND
    NOP
@LINE: 447
M_NOT_GET_TARGET_DESCRIPTOR    LIM L, R16, $0D
    XOR L, R11, R31
    BRNZ M_NOT_GET_NUM_TARGETS
    NOP
@LINE: 452
    LIM H, R16, `LH COM_GET_NUM_TARGETS
    LIM L, R16, `LL COM_GET_NUM_TARGETS
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 458
    BRA M_COMMAND
    NOP
@LINE: 462
M_NOT_GET_NUM_TARGETS    LIM L, R16, $0E
    XOR L, R11, R31
    BRNZ M_NOT_SET_TARGET
    NOP
@LINE: 467
    LIM H, R16, `LH COM_SET_TARGET
    LIM L, R16, `LL COM_SET_TARGET
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 473
    BRA M_COMMAND
    NOP
@LINE: 477
M_NOT_SET_TARGET    LIM L, R16, $0F
    XOR L, R11, R31
    BRNZ M_NOT_TEST
    NOP
@LINE: 482
    LIM H, R16, `LH COM_TEST
    LIM L, R16, `LL COM_TEST
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 488
    BRA M_COMMAND
    NOP
@LINE: 492
M_NOT_TEST    LIM H, R16, `LH SERIAL_SEND_BYTE
    LIM L, R16, `LL SERIAL_SEND_BYTE
    MOVE W, R16, R26
@LINE: 496
    MOVE W, R31, R0
    CALL	
    NOP
@LINE: 500
    CALL	
    NOP
@LINE: 503
    CALL	
    NOP
@LINE: 506
    CALL	
    NOP
@LINE: 509
    BRA MAIN
    NOP
@LINE: 520
COM_READ    LIM H, R17, `LH $FFFC
    LIM L, R17, `LL $FFFC
    MOVE W, R17, R22
    LIM H, R16, $C0
    LIM L, R16, $01
    MOVE W, R16, R25
@LINE: 528
    LIM H, R16, `LH SERIAL_GET_BYTE
    LIM L, R16, `LL SERIAL_GET_BYTE
    MOVE W, R16, R26
@LINE: 533
    CALL	
    NOP
    MOVE L, R11, R2	
    MOVE S, R11, R11
    MOVE H, R11, R17
@LINE: 540
    CALL	
    NOP
    MOVE L, R11, R3	
    MOVE L, R11, R17
@LINE: 546
    CALL	
    NOP
    MOVE L, R11, R4
    MOVE S, R11, R11
    MOVE H, R11, R18
@LINE: 553
    CALL	
    NOP
    MOVE L, R11, R5
    MOVE L, R11, R18
@LINE: 559
    ROR W, R18, R18	
    LIM H, R16, $7F
    LIM L, R16, $FF
    AND W, R18, R18	
@LINE: 564
    ROR W, R17, R17	
    NOT W, R16, R16
    AND W, R17, R16	
    OR W, R18, R18	
@LINE: 569
    LIM H, R16, $7F
    LIM L, R16, $FF
    AND W, R17, R17 	
@LINE: 573
    LIM H, R16, `LH $1FF7
    LIM L, R16, `LL $1FF7
    MOVE W, R16, R20
    MOVE W, R17, R24
@LINE: 578
    LIM H, R16, `LH $1FF6
    LIM L, R16, `LL $1FF6
    MOVE W, R16, R20
    MOVE W, R18, R24
@LINE: 583
    LIM H, R16, `LH SERIAL_SEND_BYTE
    LIM L, R16, `LL SERIAL_SEND_BYTE
    MOVE W, R16, R26
@LINE: 587
    MOVE L, R2, R0
    CALL	
    NOP
@LINE: 591
    MOVE L, R3, R0
    CALL	
    NOP
@LINE: 595
    MOVE L, R4, R0
    CALL	
    NOP
@LINE: 599
    MOVE L, R5, R0
    CALL	
    NOP
@LINE: 604
    LIM H, R17, `LH $1FE5
    LIM L, R17, `LL $1FE5
    MOVE W, R17, R20
    MOVE W, R24, R20
@LINE: 609
    MOVE W, R31, R24	
@LINE: 611
    LIM W, R16, $01
    ADD W, R20, R20
    MOVE W, R31, R24	
@LINE: 615
    LIM H, R16, `LH $1FEF
    LIM L, R16, `LL $1FEF
    MOVE W, R16, R20
    MOVE W, R24, R26
    CALL
    NOP
@LINE: 624
COMR_LOOP    LIM H, R17, `LH $1FF7
    LIM L, R17, `LL $1FF7
    MOVE W, R17, R20
    MOVE W, R24, R4
@LINE: 629
    LIM H, R17, `LH $1FF6
    LIM L, R17, `LL $1FF6
    MOVE W, R17, R20
    MOVE W, R24, R3
@LINE: 635
    LIM H, R17, `LH $FFFC
    LIM L, R17, `LL $FFFC
    MOVE W, R17, R22
    MOVE W, R4, R25
@LINE: 641
    LIM H, R16, `LH $2000
    LIM L, R16, `LL $2000
    MOVE W, R31, R6
    MOVE W, R16, R5
@LINE: 647
    MOVE W, R3, R16
    SUB W, R5, R5
    MOVE W, R4, R16
    SUBC W, R6, R6
@LINE: 653
    BITT W, R30, 3	
    BRZ COMR_GREATER
    NOP
@LINE: 658
    LIM H, R17, `LH $1FF7
    LIM L, R17, `LL $1FF7
    MOVE W, R17, R20
    MOVE W, R24, R4
@LINE: 663
    LIM H, R17, `LH $1FF6
    LIM L, R17, `LL $1FF6
    MOVE W, R17, R20
    MOVE W, R24, R3
@LINE: 668
    BRA COMR_TRANSFER
@LINE: 672
COMR_GREATER    LIM H, R16, `LH $2000
    LIM L, R16, `LL $2000
    MOVE W, R31, R4
    MOVE W, R16, R3
@LINE: 684
COMR_TRANSFER    LIM H, R17, `LH $1FE6
    LIM L, R17, `LL $1FE6
    MOVE W, R17, R20
    MOVE W, R24, R20
    MOVE W, R3, R24
@LINE: 690
    LIM H, R17, `LH $3FFF
    LIM L, R17, `LL $3FFF
    MOVE W, R17, R20
    MOVE W, R3, R24
@LINE: 696
    LIM H, R16, `LH $1FEE
    LIM L, R16, `LL $1FEE
    MOVE W, R16, R20
    MOVE W, R24, R26
    CALL
    NOP
@LINE: 704
    LIM H, R16, `LH SERIAL_SEND_N_WORDS
    LIM L, R16, `LL SERIAL_SEND_N_WORDS
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 711
    LIM H, R17, `LH $1FF7
    LIM L, R17, `LL $1FF7
    MOVE W, R17, R20
    MOVE W, R24, R4
@LINE: 716
    LIM H, R17, `LH $1FF6
    LIM L, R17, `LL $1FF6
    MOVE W, R17, R20
    MOVE W, R24, R3
@LINE: 722
    MOVE W, R31, R6
@LINE: 724
    LIM H, R17, `LH $3FFF
    LIM L, R17, `LL $3FFF
    MOVE W, R17, R20
    MOVE W, R24, R5
@LINE: 730
    MOVE W, R5, R16
    SUB W, R3, R3
    MOVE W, R6, R16
    SUBC W, R4, R4
@LINE: 736
    LIM H, R17, `LH $1FF7
    LIM L, R17, `LL $1FF7
    MOVE W, R17, R20
    MOVE W, R4, R24
@LINE: 741
    LIM H, R17, `LH $1FF6
    LIM L, R17, `LL $1FF6
    MOVE W, R17, R20
    MOVE W, R3, R24
@LINE: 747
    MOVE W, R4, R16
    OR W, R3, R16
    BRNZ COMR_LOOP
    NOP
@LINE: 752
    RET
    NOP
@LINE: 763
COM_WRITE    LIM H, R17, `LH $FFFC
    LIM L, R17, `LL $FFFC
    MOVE W, R17, R22
    LIM H, R16, $C0
    LIM L, R16, $02
    MOVE W, R16, R25
@LINE: 771
    LIM H, R16, `LH SERIAL_GET_BYTE
    LIM L, R16, `LL SERIAL_GET_BYTE
    MOVE W, R16, R26
@LINE: 776
    CALL	
    NOP
    MOVE S, R11, R11
    MOVE H, R11, R17
@LINE: 782
    CALL	
    NOP
    MOVE L, R11, R17
@LINE: 787
    CALL	
    NOP
    MOVE S, R11, R11
    MOVE H, R11, R18
@LINE: 793
    CALL	
    NOP
    MOVE L, R11, R18
@LINE: 798
    ROR W, R18, R18	
    LIM H, R16, $7F
    LIM L, R16, $FF
    AND W, R18, R18	
@LINE: 803
    ROR W, R17, R17	
    NOT W, R16, R16
    AND W, R17, R16	
    OR W, R18, R18	
@LINE: 808
    LIM H, R16, $7F
    LIM L, R16, $FF
    AND W, R17, R17 	
@LINE: 812
    LIM H, R16, `LH $1FF7
    LIM L, R16, `LL $1FF7
    MOVE W, R16, R20
    MOVE W, R17, R24
@LINE: 817
    LIM H, R16, `LH $1FF6
    LIM L, R16, `LL $1FF6
    MOVE W, R16, R20
    MOVE W, R18, R24
@LINE: 823
    LIM H, R17, `LH $1FE5
    LIM L, R17, `LL $1FE5
    MOVE W, R17, R20
    MOVE W, R24, R20
@LINE: 828
    MOVE W, R31, R24	
@LINE: 830
    LIM W, R16, $01
    ADD W, R20, R20
    MOVE W, R31, R24	
@LINE: 834
    LIM H, R16, `LH $1FF0
    LIM L, R16, `LL $1FF0
    MOVE W, R16, R20
    MOVE W, R24, R26
    CALL
    NOP
@LINE: 843
COMW_LOOP    LIM H, R17, `LH $1FF7
    LIM L, R17, `LL $1FF7
    MOVE W, R17, R20
    MOVE W, R24, R4
@LINE: 848
    LIM H, R17, `LH $1FF6
    LIM L, R17, `LL $1FF6
    MOVE W, R17, R20
    MOVE W, R24, R3
@LINE: 854
    LIM H, R17, `LH $FFFC
    LIM L, R17, `LL $FFFC
    MOVE W, R17, R22
    MOVE W, R4, R25
@LINE: 860
    LIM H, R16, `LH $2000
    LIM L, R16, `LL $2000
    MOVE W, R31, R6
    MOVE W, R16, R5
@LINE: 866
    MOVE W, R3, R16
    SUB W, R5, R5
    MOVE W, R4, R16
    SUBC W, R6, R6
@LINE: 872
    BITT W, R30, 3	
    BRZ COMW_GREATER
    NOP
@LINE: 877
    LIM H, R17, `LH $1FF7
    LIM L, R17, `LL $1FF7
    MOVE W, R17, R20
    MOVE W, R24, R4
@LINE: 882
    LIM H, R17, `LH $1FF6
    LIM L, R17, `LL $1FF6
    MOVE W, R17, R20
    MOVE W, R24, R3
@LINE: 887
    BRA COMW_TRANSFER
@LINE: 891
COMW_GREATER    LIM H, R16, `LH $2000
    LIM L, R16, `LL $2000
    MOVE W, R31, R4
    MOVE W, R16, R3
@LINE: 898
COMW_TRANSFER    MOVE W, R4, R17 
    MOVE W, R3, R18	
@LINE: 901
    MOVE W, R18, R16 
    ADD W, R18, R18
    MOVE W, R17, R16
    ADDC W, R17, R17			
@LINE: 906
    LIM H, R16, `LH SERIAL_SEND_BYTE
    LIM L, R16, `LL SERIAL_SEND_BYTE
    MOVE W, R16, R26
@LINE: 910
    MOVE S, R17, R0			
    CALL	
    NOP
@LINE: 914
    MOVE L, R17, R0
    CALL	
    NOP
@LINE: 918
    MOVE S, R18, R0
    CALL	
    NOP
@LINE: 922
    MOVE L, R18, R0
    CALL	
    NOP
@LINE: 927
    LIM H, R17, `LH $1FE6
    LIM L, R17, `LL $1FE6
    MOVE W, R17, R20
    MOVE W, R24, R20
    MOVE W, R3, R24
@LINE: 933
    LIM H, R17, `LH $3FFF
    LIM L, R17, `LL $3FFF
    MOVE W, R17, R20
    MOVE W, R3, R24
@LINE: 939
    LIM H, R16, `LH SERIAL_GET_N_WORDS
    LIM L, R16, `LL SERIAL_GET_N_WORDS
    MOVE W, R16, R26
    CALL
    NOP
@LINE: 946
    LIM H, R16, `LH $1FED
    LIM L, R16, `LL $1FED
    MOVE W, R16, R20
    MOVE W, R24, R26
    CALL
    NOP
@LINE: 954
    LIM H, R17, `LH $1FF7
    LIM L, R17, `LL $1FF7
    MOVE W, R17, R20
    MOVE W, R24, R4
@LINE: 959
    LIM H, R17, `LH $1FF6
    LIM L, R17, `LL $1FF6
    MOVE W, R17, R20
    MOVE W, R24, R3
@LINE: 965
    MOVE W, R31, R6
@LINE: 967
    LIM H, R17, `LH $3FFF
    LIM L, R17, `LL $3FFF
    MOVE W, R17, R20
    MOVE W, R24, R5
@LINE: 973
    MOVE W, R5, R16
    SUB W, R3, R3
    MOVE W, R6, R16
    SUBC W, R4, R4
@LINE: 979
    LIM H, R17, `LH $1FF7
    LIM L, R17, `LL $1FF7
    MOVE W, R17, R20
    MOVE W, R4, R24
@LINE: 984
    LIM H, R17, `LH $1FF6
    LIM L, R17, `LL $1FF6
    MOVE W, R17, R20
    MOVE W, R3, R24
@LINE: 990
    MOVE W, R4, R16
    OR W, R3, R16
    BRNZ COMW_LOOP
    NOP
@LINE: 995
    RET
    NOP
@LINE: 1001
COM_VERIFY    LIM H, R16, `LH SERIAL_SEND_BYTE
    LIM L, R16, `LL SERIAL_SEND_BYTE
    MOVE W, R16, R26
@LINE: 1005
    LIM L, R16, $E0
    MOVE L, R16, R0
    CALL	
    NOP
@LINE: 1010
    LIM L, R16, $00
    MOVE L, R16, R0
    CALL	
    NOP
@LINE: 1015
    RET
    NOP
@LINE: 1021
COM_UNLOCK_ALL    LIM H, R17, `LH $FFFC
    LIM L, R17, `LL $FFFC
    MOVE W, R17, R22
    LIM H, R16, $C0
    LIM L, R16, $04
    MOVE W, R16, R25
@LINE: 1034
    LIM H, R16, `LH $1FEB
    LIM L, R16, `LL $1FEB
    MOVE W, R16, R20
    MOVE W, R24, R26
    CALL
    NOP
@LINE: 1041
    LIM H, R16, `LH SERIAL_SEND_BYTE
    LIM L, R16, `LL SERIAL_SEND_BYTE
    MOVE W, R16, R26
@LINE: 1045
    LIM L, R16, $55
    MOVE L, R16, R0
    CALL	
    NOP
@LINE: 1050
    LIM L, R16, $AA
    MOVE L, R16, R0
    CALL	
    NOP
@LINE: 1055
    RET
    NOP
@LINE: 1061
COM_LOCK_ALL    LIM H, R17, `LH $FFFC
    LIM L, R17, `LL $FFFC
    MOVE W, R17, R22
    LIM H, R16, $C0
    LIM L, R16, $05
    MOVE W, R16, R25
@LINE: 1074
    LIM H, R16, `LH $1FEA
    LIM L, R16, `LL $1FEA
    MOVE W, R16, R20
    MOVE W, R24, R26
    CALL
    NOP
@LINE: 1081
    LIM H, R16, `LH SERIAL_SEND_BYTE
    LIM L, R16, `LL SERIAL_SEND_BYTE
    MOVE W, R16, R26
@LINE: 1085
    LIM L, R16, $55
    MOVE L, R16, R0
    CALL	
    NOP
@LINE: 1090
    LIM L, R16, $AA
    MOVE L, R16, R0
    CALL	
    NOP
@LINE: 1095
    RET
    NOP
@LINE: 1101
COM_GET_STATUS    LIM H, R16, `LH SERIAL_SEND_BYTE
    LIM L, R16, `LL SERIAL_SEND_BYTE
    MOVE W, R16, R26
@LINE: 1105
    LIM L, R16, $E0
    MOVE L, R16, R0
    CALL	
    NOP
@LINE: 1110
    LIM L, R16, $00
    MOVE L, R16, R0
    CALL	
    NOP
@LINE: 1115
    RET
    NOP
@LINE: 1121
COM_ERASE_ALL    LIM H, R17, `LH $FFFA
    LIM L, R17, `LL $FFFA
    MOVE W, R17, R22
    LIM H, R16, $C0
    LIM L, R16, $07
    MOVE W, R16, R25
@LINE: 1134
    LIM H, R16, `LH $1FEC
    LIM L, R16, `LL $1FEC
    MOVE W, R16, R20
    MOVE W, R24, R26
    CALL
    NOP
@LINE: 1141
    LIM H, R16, `LH SERIAL_SEND_BYTE
    LIM L, R16, `LL SERIAL_SEND_BYTE
    MOVE W, R16, R26
@LINE: 1145
    LIM L, R16, $55
    MOVE L, R16, R0
    CALL	
    NOP
@LINE: 1150
    LIM L, R16, $AA
    MOVE L, R16, R0
    CALL	
    NOP
@LINE: 1155
    RET
    NOP
@LINE: 1161
COM_LOCK_BLOCK    LIM H, R16, `LH $1FE8
    LIM L, R16, `LL $1FE8
    MOVE W, R16, R20
    MOVE W, R24, R26
    CALL
    NOP
@LINE: 1168
    LIM H, R16, `LH SERIAL_SEND_BYTE
    LIM L, R16, `LL SERIAL_SEND_BYTE
    MOVE W, R16, R26
@LINE: 1172
    LIM L, R16, $E0
    MOVE L, R16, R0
    CALL	
    NOP
@LINE: 1177
    LIM L, R16, $00
    MOVE L, R16, R0
    CALL	
    NOP
@LINE: 1182
    RET
    NOP
@LINE: 1188
COM_ERASE_BLOCK    LIM H, R16, `LH $1FF1
    LIM L, R16, `LL $1FF1
    MOVE W, R16, R20
    MOVE W, R24, R26
    CALL
    NOP
@LINE: 1195
    LIM H, R16, `LH SERIAL_SEND_BYTE
    LIM L, R16, `LL SERIAL_SEND_BYTE
    MOVE W, R16, R26
@LINE: 1199
    LIM L, R16, $E0
    MOVE L, R16, R0
    CALL	
    NOP
@LINE: 1204
    LIM L, R16, $00
    MOVE L, R16, R0
    CALL	
    NOP
@LINE: 1209
    RET
    NOP
@LINE: 1215
COM_SET_ADDRESS    LIM H, R16, `LH SERIAL_SEND_BYTE
    LIM L, R16, `LL SERIAL_SEND_BYTE
    MOVE W, R16, R26
@LINE: 1219
    LIM L, R16, $E0
    MOVE L, R16, R0
    CALL	
    NOP
@LINE: 1224
    LIM L, R16, $00
    MOVE L, R16, R0
    CALL	
    NOP
@LINE: 1229
    RET
    NOP
@LINE: 1235
COM_GET_PLATFORM_DESCRIPTOR    LIM H, R16, `LH PLATFORM_DESCRIPTOR
    LIM L, R16, `LL PLATFORM_DESCRIPTOR
    MOVE W, R16, R20
@LINE: 1240
CGPD_LOOP    LIM H, R16, `LH SERIAL_SEND_BYTE
    LIM L, R16, `LL SERIAL_SEND_BYTE
    MOVE W, R16, R26
@LINE: 1244
    MOVE L, R24, R0	
    CALL
    NOP
@LINE: 1248
    LIM W, R16, $01
    ADD W, R20, R20	
@LINE: 1251
    TEST L, R0
    BRNZ CGPD_LOOP
    NOP
@LINE: 1255
    RET
    NOP
@LINE: 1261
COM_GET_TARGET_DESCRIPTOR    LIM H, R16, `LH $1FE7
    LIM L, R16, `LL $1FE7
    MOVE W, R16, R20				
    MOVE W, R24, R20					
    MOVE W, R24, R20 				
@LINE: 1268
CGTD_LOOP    LIM H, R16, `LH SERIAL_SEND_BYTE
    LIM L, R16, `LL SERIAL_SEND_BYTE
    MOVE W, R16, R26
@LINE: 1272
    MOVE L, R24, R0	
    CALL
    NOP
@LINE: 1276
    LIM W, R16, $01
    ADD W, R20, R20		
@LINE: 1279
    TEST L, R0
    BRNZ CGTD_LOOP
    NOP
@LINE: 1283
    RET
    NOP
@LINE: 1289
COM_GET_NUM_TARGETS    LIM H, R16, `LH SERIAL_SEND_BYTE
    LIM L, R16, `LL SERIAL_SEND_BYTE
    MOVE W, R16, R26
@LINE: 1293
    LIM H, R16, `LH $03
    LIM L, R16, `LL $03
    MOVE W, R16, R0
    CALL 						
    NOP
@LINE: 1299
    RET
    NOP
@LINE: 1305
COM_SET_TARGET    LIM H, R16, `LH SERIAL_SEND_BYTE
    LIM L, R16, `LL SERIAL_SEND_BYTE
    MOVE W, R16, R26
@LINE: 1309
    LIM H, R16, `LH SERIAL_GET_BYTE
    LIM L, R16, `LL SERIAL_GET_BYTE
    MOVE W, R16, R26
    CALL 						
    NOP
@LINE: 1316
@PUSH_MACRO:    SET_TARGET:DE2_PROGRAMMER.INC
@LINE: 402
    LIM L, R16, $00
    XOR L, R11, R31
    BRZ M_ST_FLASH
@LINE: 406
    LIM L, R16, $01
    XOR L, R11, R31
    BRZ M_ST_SRAM
@LINE: 410
    LIM L, R16, $02
    XOR L, R11, R31
    BRZ M_ST_SDRAM
    NOP
@LINE: 415
    MOVE W, R31, R11	
@LINE: 418
M_ST_FLASH    LIM H, R16, `LH $1FF0
    LIM L, R16, `LL $1FF0
    MOVE W, R16, R20
    LIM H, R16, `LH FLASH_SET_ADDRESS_WRITE
    LIM L, R16, `LL FLASH_SET_ADDRESS_WRITE
    MOVE W, R16, R24
@LINE: 425
    LIM H, R16, `LH $1FEF
    LIM L, R16, `LL $1FEF
    MOVE W, R16, R20
    LIM H, R16, `LH FLASH_SET_ADDRESS_READ
    LIM L, R16, `LL FLASH_SET_ADDRESS_READ
    MOVE W, R16, R24
@LINE: 432
    LIM H, R16, `LH $1FEE
    LIM L, R16, `LL $1FEE
    MOVE W, R16, R20
    LIM H, R16, `LH FLASH_GET_N_WORDS
    LIM L, R16, `LL FLASH_GET_N_WORDS
    MOVE W, R16, R24
@LINE: 439
    LIM H, R16, `LH $1FED
    LIM L, R16, `LL $1FED
    MOVE W, R16, R20
    LIM H, R16, `LH FLASH_SEND_N_WORDS
    LIM L, R16, `LL FLASH_SEND_N_WORDS
    MOVE W, R16, R24
@LINE: 446
    LIM H, R16, `LH $1FEC
    LIM L, R16, `LL $1FEC
    MOVE W, R16, R20
    LIM H, R16, `LH FLASH_ERASE_ALL_BLOCKS
    LIM L, R16, `LL FLASH_ERASE_ALL_BLOCKS
    MOVE W, R16, R24
@LINE: 453
    LIM H, R16, `LH $1FEB
    LIM L, R16, `LL $1FEB
    MOVE W, R16, R20
    LIM H, R16, `LH FLASH_UNLOCK_ALL_BLOCKS
    LIM L, R16, `LL FLASH_UNLOCK_ALL_BLOCKS
    MOVE W, R16, R24
@LINE: 460
    LIM H, R16, `LH $1FEA
    LIM L, R16, `LL $1FEA
    MOVE W, R16, R20
    LIM H, R16, `LH FLASH_LOCK_ALL_BLOCKS
    LIM L, R16, `LL FLASH_LOCK_ALL_BLOCKS
    MOVE W, R16, R24
@LINE: 467
    LIM H, R16, `LH $1FE9
    LIM L, R16, `LL $1FE9
    MOVE W, R16, R20
    LIM H, R16, `LH FLASH_NULL
    LIM L, R16, `LL FLASH_NULL
    MOVE W, R16, R24
@LINE: 474
    LIM H, R16, `LH $1FE8
    LIM L, R16, `LL $1FE8
    MOVE W, R16, R20
    LIM H, R16, `LH FLASH_LOCK_BLOCK
    LIM L, R16, `LL FLASH_LOCK_BLOCK
    MOVE W, R16, R24
@LINE: 481
    LIM H, R16, `LH $1FF1
    LIM L, R16, `LL $1FF1
    MOVE W, R16, R20
    LIM H, R16, `LH FLASH_ERASE_BLOCK
    LIM L, R16, `LL FLASH_ERASE_BLOCK
    MOVE W, R16, R24
@LINE: 488
    LIM H, R16, `LH $1FE6
    LIM L, R16, `LL $1FE6
    MOVE W, R16, R20
    LIM H, R16, `LH $3FFE
    LIM L, R16, `LL $3FFE
    MOVE W, R16, R24
@LINE: 495
    LIM H, R16, `LH $1FE5
    LIM L, R16, `LL $1FE5
    MOVE W, R16, R20
    LIM H, R16, `LH $3FFA
    LIM L, R16, `LL $3FFA
    MOVE W, R16, R24
    BRA M_ST_END
@LINE: 504
M_ST_SRAM    LIM H, R16, `LH $1FF0
    LIM L, R16, `LL $1FF0
    MOVE W, R16, R20
    LIM H, R16, `LH SRAM_SET_ADDRESS_WRITE
    LIM L, R16, `LL SRAM_SET_ADDRESS_WRITE
    MOVE W, R16, R24
@LINE: 511
    LIM H, R16, `LH $1FEF
    LIM L, R16, `LL $1FEF
    MOVE W, R16, R20
    LIM H, R16, `LH SRAM_SET_ADDRESS_READ
    LIM L, R16, `LL SRAM_SET_ADDRESS_READ
    MOVE W, R16, R24		
@LINE: 518
    LIM H, R16, `LH $1FEE
    LIM L, R16, `LL $1FEE
    MOVE W, R16, R20
    LIM H, R16, `LH SRAM_GET_N_WORDS
    LIM L, R16, `LL SRAM_GET_N_WORDS
    MOVE W, R16, R24		
@LINE: 525
    LIM H, R16, `LH $1FED
    LIM L, R16, `LL $1FED
    MOVE W, R16, R20
    LIM H, R16, `LH SRAM_SEND_N_WORDS
    LIM L, R16, `LL SRAM_SEND_N_WORDS
    MOVE W, R16, R24		
@LINE: 532
    LIM H, R16, `LH $1FEC
    LIM L, R16, `LL $1FEC
    MOVE W, R16, R20
    LIM H, R16, `LH SRAM_NULL
    LIM L, R16, `LL SRAM_NULL
    MOVE W, R16, R24
@LINE: 539
    LIM H, R16, `LH $1FEB
    LIM L, R16, `LL $1FEB
    MOVE W, R16, R20
    LIM H, R16, `LH SRAM_NULL
    LIM L, R16, `LL SRAM_NULL
    MOVE W, R16, R24
@LINE: 546
    LIM H, R16, `LH $1FEA
    LIM L, R16, `LL $1FEA
    MOVE W, R16, R20
    LIM H, R16, `LH SRAM_NULL
    LIM L, R16, `LL SRAM_NULL
    MOVE W, R16, R24
@LINE: 553
    LIM H, R16, `LH $1FE9
    LIM L, R16, `LL $1FE9
    MOVE W, R16, R20
    LIM H, R16, `LH SRAM_NULL
    LIM L, R16, `LL SRAM_NULL
    MOVE W, R16, R24
@LINE: 560
    LIM H, R16, `LH $1FE8
    LIM L, R16, `LL $1FE8
    MOVE W, R16, R20
    LIM H, R16, `LH SRAM_NULL
    LIM L, R16, `LL SRAM_NULL
    MOVE W, R16, R24
@LINE: 567
    LIM H, R16, `LH $1FF1
    LIM L, R16, `LL $1FF1
    MOVE W, R16, R20
    LIM H, R16, `LH SRAM_NULL
    LIM L, R16, `LL SRAM_NULL
    MOVE W, R16, R24
@LINE: 574
    LIM H, R16, `LH $1FE6
    LIM L, R16, `LL $1FE6
    MOVE W, R16, R20
    LIM H, R16, `LH $3FFD
    LIM L, R16, `LL $3FFD
    MOVE W, R16, R24		
@LINE: 581
    LIM H, R16, `LH $1FE5
    LIM L, R16, `LL $1FE5
    MOVE W, R16, R20
    LIM H, R16, `LH $1FF4
    LIM L, R16, `LL $1FF4
    MOVE W, R16, R24
    BRA M_ST_END
@LINE: 590
M_ST_SDRAM    LIM H, R16, `LH $1FF0
    LIM L, R16, `LL $1FF0
    MOVE W, R16, R20
    LIM H, R16, `LH SDRAM_SET_ADDRESS_WRITE
    LIM L, R16, `LL SDRAM_SET_ADDRESS_WRITE
    MOVE W, R16, R24		
@LINE: 597
    LIM H, R16, `LH $1FEF
    LIM L, R16, `LL $1FEF
    MOVE W, R16, R20
    LIM H, R16, `LH SDRAM_SET_ADDRESS_READ
    LIM L, R16, `LL SDRAM_SET_ADDRESS_READ
    MOVE W, R16, R24		
@LINE: 604
    LIM H, R16, `LH $1FEE
    LIM L, R16, `LL $1FEE
    MOVE W, R16, R20
    LIM H, R16, `LH SDRAM_GET_N_WORDS
    LIM L, R16, `LL SDRAM_GET_N_WORDS
    MOVE W, R16, R24		
@LINE: 611
    LIM H, R16, `LH $1FED
    LIM L, R16, `LL $1FED
    MOVE W, R16, R20
    LIM H, R16, `LH SDRAM_SEND_N_WORDS
    LIM L, R16, `LL SDRAM_SEND_N_WORDS
    MOVE W, R16, R24		
@LINE: 618
    LIM H, R16, `LH $1FEC
    LIM L, R16, `LL $1FEC
    MOVE W, R16, R20
    LIM H, R16, `LH SDRAM_NULL
    LIM L, R16, `LL SDRAM_NULL
    MOVE W, R16, R24
@LINE: 625
    LIM H, R16, `LH $1FEB
    LIM L, R16, `LL $1FEB
    MOVE W, R16, R20
    LIM H, R16, `LH SDRAM_NULL
    LIM L, R16, `LL SDRAM_NULL
    MOVE W, R16, R24
@LINE: 632
    LIM H, R16, `LH $1FEA
    LIM L, R16, `LL $1FEA
    MOVE W, R16, R20
    LIM H, R16, `LH SDRAM_NULL
    LIM L, R16, `LL SDRAM_NULL
    MOVE W, R16, R24
@LINE: 639
    LIM H, R16, `LH $1FE9
    LIM L, R16, `LL $1FE9
    MOVE W, R16, R20
    LIM H, R16, `LH SDRAM_NULL
    LIM L, R16, `LL SDRAM_NULL
    MOVE W, R16, R24
@LINE: 646
    LIM H, R16, `LH $1FE8
    LIM L, R16, `LL $1FE8
    MOVE W, R16, R20
    LIM H, R16, `LH SDRAM_NULL
    LIM L, R16, `LL SDRAM_NULL
    MOVE W, R16, R24
@LINE: 653
    LIM H, R16, `LH $1FF1
    LIM L, R16, `LL $1FF1
    MOVE W, R16, R20
    LIM H, R16, `LH SDRAM_NULL
    LIM L, R16, `LL SDRAM_NULL
    MOVE W, R16, R24
@LINE: 660
    LIM H, R16, `LH $1FE6
    LIM L, R16, `LL $1FE6
    MOVE W, R16, R20
    LIM H, R16, `LH $3FFC
    LIM L, R16, `LL $3FFC
    MOVE W, R16, R24		
@LINE: 667
    LIM H, R16, `LH $1FE5
    LIM L, R16, `LL $1FE5
    MOVE W, R16, R20
    LIM H, R16, `LH $1FF2
    LIM L, R16, `LL $1FF2
    MOVE W, R16, R24		
@LINE: 675
M_ST_END    LIM H, R16, `LH $1FE4
    LIM L, R16, `LL $1FE4
    MOVE W, R16, R20
    MOVE L, R11, R16
    ADD L, R11, R16
    LIM H, R17, `LH TARGET_SIZE
    LIM L, R17, `LL TARGET_SIZE
    MOVE H, R31, R16
    ADD W, R17, R24
@LINE: 685
    LIM H, R16, `LH $1FE7
    LIM L, R16, `LL $1FE7
    MOVE W, R16, R20
    MOVE L, R11, R16
    LIM H, R17, `LH TARGET_DESCRIPTORS
    LIM L, R17, `LL TARGET_DESCRIPTORS
    MOVE H, R31, R16
    ADD W, R17, R24	
@POP_MACRO:    SET_TARGET
@LINE: 1318
    RET
    NOP
@LINE: 1324
COM_TEST    LIM H, R17, `LH $FFFC
    LIM L, R17, `LL $FFFC
    MOVE W, R17, R22
    LIM H, R16, $C0
    LIM L, R16, $07
    MOVE W, R16, R25
@LINE: 1331
    RET
    NOP
@LINE: 1336
@PUSH_MACRO:    PLATFORM_STRINGS:DE2_PROGRAMMER.INC
@LINE: 225
PLATFORM_DESCRIPTOR    DATA 't'
    DATA 'e'
    DATA 'r'
    DATA 'a'
    DATA 's'
    DATA 'I'
    DATA 'C'
    DATA ' '
    DATA 'D'
    DATA 'E'
    DATA '2'
    DATA '\0'
@LINE: 239
TARGET_DESCRIPTORS    DATA `LW FLASH_DESCRIPTOR
    DATA `LW SRAM_DESCRIPTOR
    DATA `LW SDRAM_DESCRIPTOR
@LINE: 244
FLASH_DESCRIPTOR    DATA 'F'
    DATA 'l'
    DATA 'a'
    DATA 's'
    DATA 'h'
    DATA '\0'
@LINE: 252
SRAM_DESCRIPTOR    DATA 'S'
    DATA 'R'
    DATA 'A'
    DATA 'M'
    DATA '\0'
@LINE: 259
SDRAM_DESCRIPTOR    DATA 'S'
    DATA 'D'
    DATA 'R'
    DATA 'A'
    DATA 'M'
    DATA '\0'
@LINE: 267
TARGET_SIZE    DATA $0000	
    DATA $0040
    DATA $0000	
    DATA $0008
    DATA $0000	
    DATA $0080
@POP_MACRO:    PLATFORM_STRINGS
@LINE: 1338
    ORG $3FFF
    DATA $FFFF
@POP_FILE:    neonfox_programmer.asm
